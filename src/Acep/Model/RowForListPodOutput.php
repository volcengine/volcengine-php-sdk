<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Acep\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class RowForListPodOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'RowForListPodOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'adb' => 'string',
        'adb_expire_time' => 'int',
        'adb_status' => 'int',
        'aosp_version' => 'string',
        'archive_status' => 'int',
        'authority_expire_time' => 'int',
        'authority_status' => 'int',
        'configuration' => '\Volcengine\Acep\Model\ConfigurationForListPodOutput',
        'create_at' => 'int',
        'dnsid' => 'string',
        'data_size' => 'string',
        'data_size_used' => 'string',
        'dc_info' => '\Volcengine\Acep\Model\DcInfoForListPodOutput',
        'display_layout_id' => 'string',
        'down_bandwidth_limit' => 'int',
        'host_id' => 'string',
        'image_id' => 'string',
        'image_name' => 'string',
        'intranet_ip' => 'string',
        'online' => 'int',
        'pod_id' => 'string',
        'pod_name' => 'string',
        'port_mapping_rule_list' => '\Volcengine\Acep\Model\PortMappingRuleListForListPodOutput[]',
        'product_id' => 'string',
        'server_type_code' => 'string',
        'stream_status' => 'int',
        'tag' => '\Volcengine\Acep\Model\TagForListPodOutput',
        'up_bandwidth_limit' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'adb' => null,
        'adb_expire_time' => 'int64',
        'adb_status' => 'int32',
        'aosp_version' => null,
        'archive_status' => 'int32',
        'authority_expire_time' => 'int64',
        'authority_status' => 'int32',
        'configuration' => null,
        'create_at' => 'int64',
        'dnsid' => null,
        'data_size' => null,
        'data_size_used' => null,
        'dc_info' => null,
        'display_layout_id' => null,
        'down_bandwidth_limit' => 'int32',
        'host_id' => null,
        'image_id' => null,
        'image_name' => null,
        'intranet_ip' => null,
        'online' => 'int32',
        'pod_id' => null,
        'pod_name' => null,
        'port_mapping_rule_list' => null,
        'product_id' => null,
        'server_type_code' => null,
        'stream_status' => 'int32',
        'tag' => null,
        'up_bandwidth_limit' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'adb' => 'Adb',
        'adb_expire_time' => 'AdbExpireTime',
        'adb_status' => 'AdbStatus',
        'aosp_version' => 'AospVersion',
        'archive_status' => 'ArchiveStatus',
        'authority_expire_time' => 'AuthorityExpireTime',
        'authority_status' => 'AuthorityStatus',
        'configuration' => 'Configuration',
        'create_at' => 'CreateAt',
        'dnsid' => 'DNSId',
        'data_size' => 'DataSize',
        'data_size_used' => 'DataSizeUsed',
        'dc_info' => 'DcInfo',
        'display_layout_id' => 'DisplayLayoutId',
        'down_bandwidth_limit' => 'DownBandwidthLimit',
        'host_id' => 'HostId',
        'image_id' => 'ImageId',
        'image_name' => 'ImageName',
        'intranet_ip' => 'IntranetIP',
        'online' => 'Online',
        'pod_id' => 'PodId',
        'pod_name' => 'PodName',
        'port_mapping_rule_list' => 'PortMappingRuleList',
        'product_id' => 'ProductId',
        'server_type_code' => 'ServerTypeCode',
        'stream_status' => 'StreamStatus',
        'tag' => 'Tag',
        'up_bandwidth_limit' => 'UpBandwidthLimit'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'adb' => 'setAdb',
        'adb_expire_time' => 'setAdbExpireTime',
        'adb_status' => 'setAdbStatus',
        'aosp_version' => 'setAospVersion',
        'archive_status' => 'setArchiveStatus',
        'authority_expire_time' => 'setAuthorityExpireTime',
        'authority_status' => 'setAuthorityStatus',
        'configuration' => 'setConfiguration',
        'create_at' => 'setCreateAt',
        'dnsid' => 'setDnsid',
        'data_size' => 'setDataSize',
        'data_size_used' => 'setDataSizeUsed',
        'dc_info' => 'setDcInfo',
        'display_layout_id' => 'setDisplayLayoutId',
        'down_bandwidth_limit' => 'setDownBandwidthLimit',
        'host_id' => 'setHostId',
        'image_id' => 'setImageId',
        'image_name' => 'setImageName',
        'intranet_ip' => 'setIntranetIp',
        'online' => 'setOnline',
        'pod_id' => 'setPodId',
        'pod_name' => 'setPodName',
        'port_mapping_rule_list' => 'setPortMappingRuleList',
        'product_id' => 'setProductId',
        'server_type_code' => 'setServerTypeCode',
        'stream_status' => 'setStreamStatus',
        'tag' => 'setTag',
        'up_bandwidth_limit' => 'setUpBandwidthLimit'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'adb' => 'getAdb',
        'adb_expire_time' => 'getAdbExpireTime',
        'adb_status' => 'getAdbStatus',
        'aosp_version' => 'getAospVersion',
        'archive_status' => 'getArchiveStatus',
        'authority_expire_time' => 'getAuthorityExpireTime',
        'authority_status' => 'getAuthorityStatus',
        'configuration' => 'getConfiguration',
        'create_at' => 'getCreateAt',
        'dnsid' => 'getDnsid',
        'data_size' => 'getDataSize',
        'data_size_used' => 'getDataSizeUsed',
        'dc_info' => 'getDcInfo',
        'display_layout_id' => 'getDisplayLayoutId',
        'down_bandwidth_limit' => 'getDownBandwidthLimit',
        'host_id' => 'getHostId',
        'image_id' => 'getImageId',
        'image_name' => 'getImageName',
        'intranet_ip' => 'getIntranetIp',
        'online' => 'getOnline',
        'pod_id' => 'getPodId',
        'pod_name' => 'getPodName',
        'port_mapping_rule_list' => 'getPortMappingRuleList',
        'product_id' => 'getProductId',
        'server_type_code' => 'getServerTypeCode',
        'stream_status' => 'getStreamStatus',
        'tag' => 'getTag',
        'up_bandwidth_limit' => 'getUpBandwidthLimit'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['adb'] = isset($data['adb']) ? $data['adb'] : null;
        $this->container['adb_expire_time'] = isset($data['adb_expire_time']) ? $data['adb_expire_time'] : null;
        $this->container['adb_status'] = isset($data['adb_status']) ? $data['adb_status'] : null;
        $this->container['aosp_version'] = isset($data['aosp_version']) ? $data['aosp_version'] : null;
        $this->container['archive_status'] = isset($data['archive_status']) ? $data['archive_status'] : null;
        $this->container['authority_expire_time'] = isset($data['authority_expire_time']) ? $data['authority_expire_time'] : null;
        $this->container['authority_status'] = isset($data['authority_status']) ? $data['authority_status'] : null;
        $this->container['configuration'] = isset($data['configuration']) ? $data['configuration'] : null;
        $this->container['create_at'] = isset($data['create_at']) ? $data['create_at'] : null;
        $this->container['dnsid'] = isset($data['dnsid']) ? $data['dnsid'] : null;
        $this->container['data_size'] = isset($data['data_size']) ? $data['data_size'] : null;
        $this->container['data_size_used'] = isset($data['data_size_used']) ? $data['data_size_used'] : null;
        $this->container['dc_info'] = isset($data['dc_info']) ? $data['dc_info'] : null;
        $this->container['display_layout_id'] = isset($data['display_layout_id']) ? $data['display_layout_id'] : null;
        $this->container['down_bandwidth_limit'] = isset($data['down_bandwidth_limit']) ? $data['down_bandwidth_limit'] : null;
        $this->container['host_id'] = isset($data['host_id']) ? $data['host_id'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['image_name'] = isset($data['image_name']) ? $data['image_name'] : null;
        $this->container['intranet_ip'] = isset($data['intranet_ip']) ? $data['intranet_ip'] : null;
        $this->container['online'] = isset($data['online']) ? $data['online'] : null;
        $this->container['pod_id'] = isset($data['pod_id']) ? $data['pod_id'] : null;
        $this->container['pod_name'] = isset($data['pod_name']) ? $data['pod_name'] : null;
        $this->container['port_mapping_rule_list'] = isset($data['port_mapping_rule_list']) ? $data['port_mapping_rule_list'] : null;
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['server_type_code'] = isset($data['server_type_code']) ? $data['server_type_code'] : null;
        $this->container['stream_status'] = isset($data['stream_status']) ? $data['stream_status'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['up_bandwidth_limit'] = isset($data['up_bandwidth_limit']) ? $data['up_bandwidth_limit'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets adb
     *
     * @return string
     */
    public function getAdb()
    {
        return $this->container['adb'];
    }

    /**
     * Sets adb
     *
     * @param string $adb adb
     *
     * @return $this
     */
    public function setAdb($adb)
    {
        $this->container['adb'] = $adb;

        return $this;
    }

    /**
     * Gets adb_expire_time
     *
     * @return int
     */
    public function getAdbExpireTime()
    {
        return $this->container['adb_expire_time'];
    }

    /**
     * Sets adb_expire_time
     *
     * @param int $adb_expire_time adb_expire_time
     *
     * @return $this
     */
    public function setAdbExpireTime($adb_expire_time)
    {
        $this->container['adb_expire_time'] = $adb_expire_time;

        return $this;
    }

    /**
     * Gets adb_status
     *
     * @return int
     */
    public function getAdbStatus()
    {
        return $this->container['adb_status'];
    }

    /**
     * Sets adb_status
     *
     * @param int $adb_status adb_status
     *
     * @return $this
     */
    public function setAdbStatus($adb_status)
    {
        $this->container['adb_status'] = $adb_status;

        return $this;
    }

    /**
     * Gets aosp_version
     *
     * @return string
     */
    public function getAospVersion()
    {
        return $this->container['aosp_version'];
    }

    /**
     * Sets aosp_version
     *
     * @param string $aosp_version aosp_version
     *
     * @return $this
     */
    public function setAospVersion($aosp_version)
    {
        $this->container['aosp_version'] = $aosp_version;

        return $this;
    }

    /**
     * Gets archive_status
     *
     * @return int
     */
    public function getArchiveStatus()
    {
        return $this->container['archive_status'];
    }

    /**
     * Sets archive_status
     *
     * @param int $archive_status archive_status
     *
     * @return $this
     */
    public function setArchiveStatus($archive_status)
    {
        $this->container['archive_status'] = $archive_status;

        return $this;
    }

    /**
     * Gets authority_expire_time
     *
     * @return int
     */
    public function getAuthorityExpireTime()
    {
        return $this->container['authority_expire_time'];
    }

    /**
     * Sets authority_expire_time
     *
     * @param int $authority_expire_time authority_expire_time
     *
     * @return $this
     */
    public function setAuthorityExpireTime($authority_expire_time)
    {
        $this->container['authority_expire_time'] = $authority_expire_time;

        return $this;
    }

    /**
     * Gets authority_status
     *
     * @return int
     */
    public function getAuthorityStatus()
    {
        return $this->container['authority_status'];
    }

    /**
     * Sets authority_status
     *
     * @param int $authority_status authority_status
     *
     * @return $this
     */
    public function setAuthorityStatus($authority_status)
    {
        $this->container['authority_status'] = $authority_status;

        return $this;
    }

    /**
     * Gets configuration
     *
     * @return \Volcengine\Acep\Model\ConfigurationForListPodOutput
     */
    public function getConfiguration()
    {
        return $this->container['configuration'];
    }

    /**
     * Sets configuration
     *
     * @param \Volcengine\Acep\Model\ConfigurationForListPodOutput $configuration configuration
     *
     * @return $this
     */
    public function setConfiguration($configuration)
    {
        $this->container['configuration'] = $configuration;

        return $this;
    }

    /**
     * Gets create_at
     *
     * @return int
     */
    public function getCreateAt()
    {
        return $this->container['create_at'];
    }

    /**
     * Sets create_at
     *
     * @param int $create_at create_at
     *
     * @return $this
     */
    public function setCreateAt($create_at)
    {
        $this->container['create_at'] = $create_at;

        return $this;
    }

    /**
     * Gets dnsid
     *
     * @return string
     */
    public function getDnsid()
    {
        return $this->container['dnsid'];
    }

    /**
     * Sets dnsid
     *
     * @param string $dnsid dnsid
     *
     * @return $this
     */
    public function setDnsid($dnsid)
    {
        $this->container['dnsid'] = $dnsid;

        return $this;
    }

    /**
     * Gets data_size
     *
     * @return string
     */
    public function getDataSize()
    {
        return $this->container['data_size'];
    }

    /**
     * Sets data_size
     *
     * @param string $data_size data_size
     *
     * @return $this
     */
    public function setDataSize($data_size)
    {
        $this->container['data_size'] = $data_size;

        return $this;
    }

    /**
     * Gets data_size_used
     *
     * @return string
     */
    public function getDataSizeUsed()
    {
        return $this->container['data_size_used'];
    }

    /**
     * Sets data_size_used
     *
     * @param string $data_size_used data_size_used
     *
     * @return $this
     */
    public function setDataSizeUsed($data_size_used)
    {
        $this->container['data_size_used'] = $data_size_used;

        return $this;
    }

    /**
     * Gets dc_info
     *
     * @return \Volcengine\Acep\Model\DcInfoForListPodOutput
     */
    public function getDcInfo()
    {
        return $this->container['dc_info'];
    }

    /**
     * Sets dc_info
     *
     * @param \Volcengine\Acep\Model\DcInfoForListPodOutput $dc_info dc_info
     *
     * @return $this
     */
    public function setDcInfo($dc_info)
    {
        $this->container['dc_info'] = $dc_info;

        return $this;
    }

    /**
     * Gets display_layout_id
     *
     * @return string
     */
    public function getDisplayLayoutId()
    {
        return $this->container['display_layout_id'];
    }

    /**
     * Sets display_layout_id
     *
     * @param string $display_layout_id display_layout_id
     *
     * @return $this
     */
    public function setDisplayLayoutId($display_layout_id)
    {
        $this->container['display_layout_id'] = $display_layout_id;

        return $this;
    }

    /**
     * Gets down_bandwidth_limit
     *
     * @return int
     */
    public function getDownBandwidthLimit()
    {
        return $this->container['down_bandwidth_limit'];
    }

    /**
     * Sets down_bandwidth_limit
     *
     * @param int $down_bandwidth_limit down_bandwidth_limit
     *
     * @return $this
     */
    public function setDownBandwidthLimit($down_bandwidth_limit)
    {
        $this->container['down_bandwidth_limit'] = $down_bandwidth_limit;

        return $this;
    }

    /**
     * Gets host_id
     *
     * @return string
     */
    public function getHostId()
    {
        return $this->container['host_id'];
    }

    /**
     * Sets host_id
     *
     * @param string $host_id host_id
     *
     * @return $this
     */
    public function setHostId($host_id)
    {
        $this->container['host_id'] = $host_id;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets image_name
     *
     * @return string
     */
    public function getImageName()
    {
        return $this->container['image_name'];
    }

    /**
     * Sets image_name
     *
     * @param string $image_name image_name
     *
     * @return $this
     */
    public function setImageName($image_name)
    {
        $this->container['image_name'] = $image_name;

        return $this;
    }

    /**
     * Gets intranet_ip
     *
     * @return string
     */
    public function getIntranetIp()
    {
        return $this->container['intranet_ip'];
    }

    /**
     * Sets intranet_ip
     *
     * @param string $intranet_ip intranet_ip
     *
     * @return $this
     */
    public function setIntranetIp($intranet_ip)
    {
        $this->container['intranet_ip'] = $intranet_ip;

        return $this;
    }

    /**
     * Gets online
     *
     * @return int
     */
    public function getOnline()
    {
        return $this->container['online'];
    }

    /**
     * Sets online
     *
     * @param int $online online
     *
     * @return $this
     */
    public function setOnline($online)
    {
        $this->container['online'] = $online;

        return $this;
    }

    /**
     * Gets pod_id
     *
     * @return string
     */
    public function getPodId()
    {
        return $this->container['pod_id'];
    }

    /**
     * Sets pod_id
     *
     * @param string $pod_id pod_id
     *
     * @return $this
     */
    public function setPodId($pod_id)
    {
        $this->container['pod_id'] = $pod_id;

        return $this;
    }

    /**
     * Gets pod_name
     *
     * @return string
     */
    public function getPodName()
    {
        return $this->container['pod_name'];
    }

    /**
     * Sets pod_name
     *
     * @param string $pod_name pod_name
     *
     * @return $this
     */
    public function setPodName($pod_name)
    {
        $this->container['pod_name'] = $pod_name;

        return $this;
    }

    /**
     * Gets port_mapping_rule_list
     *
     * @return \Volcengine\Acep\Model\PortMappingRuleListForListPodOutput[]
     */
    public function getPortMappingRuleList()
    {
        return $this->container['port_mapping_rule_list'];
    }

    /**
     * Sets port_mapping_rule_list
     *
     * @param \Volcengine\Acep\Model\PortMappingRuleListForListPodOutput[] $port_mapping_rule_list port_mapping_rule_list
     *
     * @return $this
     */
    public function setPortMappingRuleList($port_mapping_rule_list)
    {
        $this->container['port_mapping_rule_list'] = $port_mapping_rule_list;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets server_type_code
     *
     * @return string
     */
    public function getServerTypeCode()
    {
        return $this->container['server_type_code'];
    }

    /**
     * Sets server_type_code
     *
     * @param string $server_type_code server_type_code
     *
     * @return $this
     */
    public function setServerTypeCode($server_type_code)
    {
        $this->container['server_type_code'] = $server_type_code;

        return $this;
    }

    /**
     * Gets stream_status
     *
     * @return int
     */
    public function getStreamStatus()
    {
        return $this->container['stream_status'];
    }

    /**
     * Sets stream_status
     *
     * @param int $stream_status stream_status
     *
     * @return $this
     */
    public function setStreamStatus($stream_status)
    {
        $this->container['stream_status'] = $stream_status;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return \Volcengine\Acep\Model\TagForListPodOutput
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param \Volcengine\Acep\Model\TagForListPodOutput $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets up_bandwidth_limit
     *
     * @return int
     */
    public function getUpBandwidthLimit()
    {
        return $this->container['up_bandwidth_limit'];
    }

    /**
     * Sets up_bandwidth_limit
     *
     * @param int $up_bandwidth_limit up_bandwidth_limit
     *
     * @return $this
     */
    public function setUpBandwidthLimit($up_bandwidth_limit)
    {
        $this->container['up_bandwidth_limit'] = $up_bandwidth_limit;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

