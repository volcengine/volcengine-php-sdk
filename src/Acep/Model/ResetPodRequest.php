<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Acep\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ResetPodRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ResetPodRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'data_size' => 'string',
        'phone_template_id' => 'string',
        'pod_id_list' => 'string[]',
        'pre_install_app_persisted_type' => 'int',
        'product_id' => 'string',
        'reset_type' => 'int',
        'system_dir_persisted_type' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'data_size' => null,
        'phone_template_id' => null,
        'pod_id_list' => null,
        'pre_install_app_persisted_type' => 'int32',
        'product_id' => null,
        'reset_type' => 'int32',
        'system_dir_persisted_type' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'data_size' => 'DataSize',
        'phone_template_id' => 'PhoneTemplateId',
        'pod_id_list' => 'PodIdList',
        'pre_install_app_persisted_type' => 'PreInstallAppPersistedType',
        'product_id' => 'ProductId',
        'reset_type' => 'ResetType',
        'system_dir_persisted_type' => 'SystemDirPersistedType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'data_size' => 'setDataSize',
        'phone_template_id' => 'setPhoneTemplateId',
        'pod_id_list' => 'setPodIdList',
        'pre_install_app_persisted_type' => 'setPreInstallAppPersistedType',
        'product_id' => 'setProductId',
        'reset_type' => 'setResetType',
        'system_dir_persisted_type' => 'setSystemDirPersistedType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'data_size' => 'getDataSize',
        'phone_template_id' => 'getPhoneTemplateId',
        'pod_id_list' => 'getPodIdList',
        'pre_install_app_persisted_type' => 'getPreInstallAppPersistedType',
        'product_id' => 'getProductId',
        'reset_type' => 'getResetType',
        'system_dir_persisted_type' => 'getSystemDirPersistedType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['data_size'] = isset($data['data_size']) ? $data['data_size'] : null;
        $this->container['phone_template_id'] = isset($data['phone_template_id']) ? $data['phone_template_id'] : null;
        $this->container['pod_id_list'] = isset($data['pod_id_list']) ? $data['pod_id_list'] : null;
        $this->container['pre_install_app_persisted_type'] = isset($data['pre_install_app_persisted_type']) ? $data['pre_install_app_persisted_type'] : null;
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['reset_type'] = isset($data['reset_type']) ? $data['reset_type'] : null;
        $this->container['system_dir_persisted_type'] = isset($data['system_dir_persisted_type']) ? $data['system_dir_persisted_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['product_id'] === null) {
            $invalidProperties[] = "'product_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets data_size
     *
     * @return string
     */
    public function getDataSize()
    {
        return $this->container['data_size'];
    }

    /**
     * Sets data_size
     *
     * @param string $data_size data_size
     *
     * @return $this
     */
    public function setDataSize($data_size)
    {
        $this->container['data_size'] = $data_size;

        return $this;
    }

    /**
     * Gets phone_template_id
     *
     * @return string
     */
    public function getPhoneTemplateId()
    {
        return $this->container['phone_template_id'];
    }

    /**
     * Sets phone_template_id
     *
     * @param string $phone_template_id phone_template_id
     *
     * @return $this
     */
    public function setPhoneTemplateId($phone_template_id)
    {
        $this->container['phone_template_id'] = $phone_template_id;

        return $this;
    }

    /**
     * Gets pod_id_list
     *
     * @return string[]
     */
    public function getPodIdList()
    {
        return $this->container['pod_id_list'];
    }

    /**
     * Sets pod_id_list
     *
     * @param string[] $pod_id_list pod_id_list
     *
     * @return $this
     */
    public function setPodIdList($pod_id_list)
    {
        $this->container['pod_id_list'] = $pod_id_list;

        return $this;
    }

    /**
     * Gets pre_install_app_persisted_type
     *
     * @return int
     */
    public function getPreInstallAppPersistedType()
    {
        return $this->container['pre_install_app_persisted_type'];
    }

    /**
     * Sets pre_install_app_persisted_type
     *
     * @param int $pre_install_app_persisted_type pre_install_app_persisted_type
     *
     * @return $this
     */
    public function setPreInstallAppPersistedType($pre_install_app_persisted_type)
    {
        $this->container['pre_install_app_persisted_type'] = $pre_install_app_persisted_type;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets reset_type
     *
     * @return int
     */
    public function getResetType()
    {
        return $this->container['reset_type'];
    }

    /**
     * Sets reset_type
     *
     * @param int $reset_type reset_type
     *
     * @return $this
     */
    public function setResetType($reset_type)
    {
        $this->container['reset_type'] = $reset_type;

        return $this;
    }

    /**
     * Gets system_dir_persisted_type
     *
     * @return int
     */
    public function getSystemDirPersistedType()
    {
        return $this->container['system_dir_persisted_type'];
    }

    /**
     * Sets system_dir_persisted_type
     *
     * @param int $system_dir_persisted_type system_dir_persisted_type
     *
     * @return $this
     */
    public function setSystemDirPersistedType($system_dir_persisted_type)
    {
        $this->container['system_dir_persisted_type'] = $system_dir_persisted_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

