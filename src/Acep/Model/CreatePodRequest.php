<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Acep\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class CreatePodRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreatePodRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'configuration_code' => 'string',
        'custom_route_id' => 'string',
        'dnsid' => 'string',
        'data_size' => 'string',
        'dc' => 'string',
        'display_layout_id' => 'string',
        'down_bandwidth_limit' => 'int',
        'host_id' => 'string',
        'ip_white_list' => 'string',
        'image_id' => 'string',
        'overlay_persist_property' => '\Volcengine\Acep\Model\OverlayPersistPropertyForCreatePodInput[]',
        'overlay_property' => '\Volcengine\Acep\Model\OverlayPropertyForCreatePodInput[]',
        'overlay_settings' => '\Volcengine\Acep\Model\OverlaySettingForCreatePodInput[]',
        'phone_template_id' => 'string',
        'pod_name' => 'string',
        'pod_spec_list' => '\Volcengine\Acep\Model\PodSpecListForCreatePodInput[]',
        'port_mapping_rule_id_list' => 'string[]',
        'product_id' => 'string',
        'resource_type' => 'int',
        'start' => 'bool',
        'tag_id' => 'string',
        'up_bandwidth_limit' => 'int',
        'use_phone_template' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'configuration_code' => null,
        'custom_route_id' => null,
        'dnsid' => null,
        'data_size' => null,
        'dc' => null,
        'display_layout_id' => null,
        'down_bandwidth_limit' => 'int32',
        'host_id' => null,
        'ip_white_list' => null,
        'image_id' => null,
        'overlay_persist_property' => null,
        'overlay_property' => null,
        'overlay_settings' => null,
        'phone_template_id' => null,
        'pod_name' => null,
        'pod_spec_list' => null,
        'port_mapping_rule_id_list' => null,
        'product_id' => null,
        'resource_type' => 'int32',
        'start' => null,
        'tag_id' => null,
        'up_bandwidth_limit' => 'int32',
        'use_phone_template' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'configuration_code' => 'ConfigurationCode',
        'custom_route_id' => 'CustomRouteId',
        'dnsid' => 'DNSId',
        'data_size' => 'DataSize',
        'dc' => 'Dc',
        'display_layout_id' => 'DisplayLayoutId',
        'down_bandwidth_limit' => 'DownBandwidthLimit',
        'host_id' => 'HostId',
        'ip_white_list' => 'IPWhiteList',
        'image_id' => 'ImageId',
        'overlay_persist_property' => 'OverlayPersistProperty',
        'overlay_property' => 'OverlayProperty',
        'overlay_settings' => 'OverlaySettings',
        'phone_template_id' => 'PhoneTemplateId',
        'pod_name' => 'PodName',
        'pod_spec_list' => 'PodSpecList',
        'port_mapping_rule_id_list' => 'PortMappingRuleIdList',
        'product_id' => 'ProductId',
        'resource_type' => 'ResourceType',
        'start' => 'Start',
        'tag_id' => 'TagId',
        'up_bandwidth_limit' => 'UpBandwidthLimit',
        'use_phone_template' => 'UsePhoneTemplate'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'configuration_code' => 'setConfigurationCode',
        'custom_route_id' => 'setCustomRouteId',
        'dnsid' => 'setDnsid',
        'data_size' => 'setDataSize',
        'dc' => 'setDc',
        'display_layout_id' => 'setDisplayLayoutId',
        'down_bandwidth_limit' => 'setDownBandwidthLimit',
        'host_id' => 'setHostId',
        'ip_white_list' => 'setIpWhiteList',
        'image_id' => 'setImageId',
        'overlay_persist_property' => 'setOverlayPersistProperty',
        'overlay_property' => 'setOverlayProperty',
        'overlay_settings' => 'setOverlaySettings',
        'phone_template_id' => 'setPhoneTemplateId',
        'pod_name' => 'setPodName',
        'pod_spec_list' => 'setPodSpecList',
        'port_mapping_rule_id_list' => 'setPortMappingRuleIdList',
        'product_id' => 'setProductId',
        'resource_type' => 'setResourceType',
        'start' => 'setStart',
        'tag_id' => 'setTagId',
        'up_bandwidth_limit' => 'setUpBandwidthLimit',
        'use_phone_template' => 'setUsePhoneTemplate'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'configuration_code' => 'getConfigurationCode',
        'custom_route_id' => 'getCustomRouteId',
        'dnsid' => 'getDnsid',
        'data_size' => 'getDataSize',
        'dc' => 'getDc',
        'display_layout_id' => 'getDisplayLayoutId',
        'down_bandwidth_limit' => 'getDownBandwidthLimit',
        'host_id' => 'getHostId',
        'ip_white_list' => 'getIpWhiteList',
        'image_id' => 'getImageId',
        'overlay_persist_property' => 'getOverlayPersistProperty',
        'overlay_property' => 'getOverlayProperty',
        'overlay_settings' => 'getOverlaySettings',
        'phone_template_id' => 'getPhoneTemplateId',
        'pod_name' => 'getPodName',
        'pod_spec_list' => 'getPodSpecList',
        'port_mapping_rule_id_list' => 'getPortMappingRuleIdList',
        'product_id' => 'getProductId',
        'resource_type' => 'getResourceType',
        'start' => 'getStart',
        'tag_id' => 'getTagId',
        'up_bandwidth_limit' => 'getUpBandwidthLimit',
        'use_phone_template' => 'getUsePhoneTemplate'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['configuration_code'] = isset($data['configuration_code']) ? $data['configuration_code'] : null;
        $this->container['custom_route_id'] = isset($data['custom_route_id']) ? $data['custom_route_id'] : null;
        $this->container['dnsid'] = isset($data['dnsid']) ? $data['dnsid'] : null;
        $this->container['data_size'] = isset($data['data_size']) ? $data['data_size'] : null;
        $this->container['dc'] = isset($data['dc']) ? $data['dc'] : null;
        $this->container['display_layout_id'] = isset($data['display_layout_id']) ? $data['display_layout_id'] : null;
        $this->container['down_bandwidth_limit'] = isset($data['down_bandwidth_limit']) ? $data['down_bandwidth_limit'] : null;
        $this->container['host_id'] = isset($data['host_id']) ? $data['host_id'] : null;
        $this->container['ip_white_list'] = isset($data['ip_white_list']) ? $data['ip_white_list'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['overlay_persist_property'] = isset($data['overlay_persist_property']) ? $data['overlay_persist_property'] : null;
        $this->container['overlay_property'] = isset($data['overlay_property']) ? $data['overlay_property'] : null;
        $this->container['overlay_settings'] = isset($data['overlay_settings']) ? $data['overlay_settings'] : null;
        $this->container['phone_template_id'] = isset($data['phone_template_id']) ? $data['phone_template_id'] : null;
        $this->container['pod_name'] = isset($data['pod_name']) ? $data['pod_name'] : null;
        $this->container['pod_spec_list'] = isset($data['pod_spec_list']) ? $data['pod_spec_list'] : null;
        $this->container['port_mapping_rule_id_list'] = isset($data['port_mapping_rule_id_list']) ? $data['port_mapping_rule_id_list'] : null;
        $this->container['product_id'] = isset($data['product_id']) ? $data['product_id'] : null;
        $this->container['resource_type'] = isset($data['resource_type']) ? $data['resource_type'] : null;
        $this->container['start'] = isset($data['start']) ? $data['start'] : null;
        $this->container['tag_id'] = isset($data['tag_id']) ? $data['tag_id'] : null;
        $this->container['up_bandwidth_limit'] = isset($data['up_bandwidth_limit']) ? $data['up_bandwidth_limit'] : null;
        $this->container['use_phone_template'] = isset($data['use_phone_template']) ? $data['use_phone_template'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['product_id'] === null) {
            $invalidProperties[] = "'product_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets configuration_code
     *
     * @return string
     */
    public function getConfigurationCode()
    {
        return $this->container['configuration_code'];
    }

    /**
     * Sets configuration_code
     *
     * @param string $configuration_code configuration_code
     *
     * @return $this
     */
    public function setConfigurationCode($configuration_code)
    {
        $this->container['configuration_code'] = $configuration_code;

        return $this;
    }

    /**
     * Gets custom_route_id
     *
     * @return string
     */
    public function getCustomRouteId()
    {
        return $this->container['custom_route_id'];
    }

    /**
     * Sets custom_route_id
     *
     * @param string $custom_route_id custom_route_id
     *
     * @return $this
     */
    public function setCustomRouteId($custom_route_id)
    {
        $this->container['custom_route_id'] = $custom_route_id;

        return $this;
    }

    /**
     * Gets dnsid
     *
     * @return string
     */
    public function getDnsid()
    {
        return $this->container['dnsid'];
    }

    /**
     * Sets dnsid
     *
     * @param string $dnsid dnsid
     *
     * @return $this
     */
    public function setDnsid($dnsid)
    {
        $this->container['dnsid'] = $dnsid;

        return $this;
    }

    /**
     * Gets data_size
     *
     * @return string
     */
    public function getDataSize()
    {
        return $this->container['data_size'];
    }

    /**
     * Sets data_size
     *
     * @param string $data_size data_size
     *
     * @return $this
     */
    public function setDataSize($data_size)
    {
        $this->container['data_size'] = $data_size;

        return $this;
    }

    /**
     * Gets dc
     *
     * @return string
     */
    public function getDc()
    {
        return $this->container['dc'];
    }

    /**
     * Sets dc
     *
     * @param string $dc dc
     *
     * @return $this
     */
    public function setDc($dc)
    {
        $this->container['dc'] = $dc;

        return $this;
    }

    /**
     * Gets display_layout_id
     *
     * @return string
     */
    public function getDisplayLayoutId()
    {
        return $this->container['display_layout_id'];
    }

    /**
     * Sets display_layout_id
     *
     * @param string $display_layout_id display_layout_id
     *
     * @return $this
     */
    public function setDisplayLayoutId($display_layout_id)
    {
        $this->container['display_layout_id'] = $display_layout_id;

        return $this;
    }

    /**
     * Gets down_bandwidth_limit
     *
     * @return int
     */
    public function getDownBandwidthLimit()
    {
        return $this->container['down_bandwidth_limit'];
    }

    /**
     * Sets down_bandwidth_limit
     *
     * @param int $down_bandwidth_limit down_bandwidth_limit
     *
     * @return $this
     */
    public function setDownBandwidthLimit($down_bandwidth_limit)
    {
        $this->container['down_bandwidth_limit'] = $down_bandwidth_limit;

        return $this;
    }

    /**
     * Gets host_id
     *
     * @return string
     */
    public function getHostId()
    {
        return $this->container['host_id'];
    }

    /**
     * Sets host_id
     *
     * @param string $host_id host_id
     *
     * @return $this
     */
    public function setHostId($host_id)
    {
        $this->container['host_id'] = $host_id;

        return $this;
    }

    /**
     * Gets ip_white_list
     *
     * @return string
     */
    public function getIpWhiteList()
    {
        return $this->container['ip_white_list'];
    }

    /**
     * Sets ip_white_list
     *
     * @param string $ip_white_list ip_white_list
     *
     * @return $this
     */
    public function setIpWhiteList($ip_white_list)
    {
        $this->container['ip_white_list'] = $ip_white_list;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets overlay_persist_property
     *
     * @return \Volcengine\Acep\Model\OverlayPersistPropertyForCreatePodInput[]
     */
    public function getOverlayPersistProperty()
    {
        return $this->container['overlay_persist_property'];
    }

    /**
     * Sets overlay_persist_property
     *
     * @param \Volcengine\Acep\Model\OverlayPersistPropertyForCreatePodInput[] $overlay_persist_property overlay_persist_property
     *
     * @return $this
     */
    public function setOverlayPersistProperty($overlay_persist_property)
    {
        $this->container['overlay_persist_property'] = $overlay_persist_property;

        return $this;
    }

    /**
     * Gets overlay_property
     *
     * @return \Volcengine\Acep\Model\OverlayPropertyForCreatePodInput[]
     */
    public function getOverlayProperty()
    {
        return $this->container['overlay_property'];
    }

    /**
     * Sets overlay_property
     *
     * @param \Volcengine\Acep\Model\OverlayPropertyForCreatePodInput[] $overlay_property overlay_property
     *
     * @return $this
     */
    public function setOverlayProperty($overlay_property)
    {
        $this->container['overlay_property'] = $overlay_property;

        return $this;
    }

    /**
     * Gets overlay_settings
     *
     * @return \Volcengine\Acep\Model\OverlaySettingForCreatePodInput[]
     */
    public function getOverlaySettings()
    {
        return $this->container['overlay_settings'];
    }

    /**
     * Sets overlay_settings
     *
     * @param \Volcengine\Acep\Model\OverlaySettingForCreatePodInput[] $overlay_settings overlay_settings
     *
     * @return $this
     */
    public function setOverlaySettings($overlay_settings)
    {
        $this->container['overlay_settings'] = $overlay_settings;

        return $this;
    }

    /**
     * Gets phone_template_id
     *
     * @return string
     */
    public function getPhoneTemplateId()
    {
        return $this->container['phone_template_id'];
    }

    /**
     * Sets phone_template_id
     *
     * @param string $phone_template_id phone_template_id
     *
     * @return $this
     */
    public function setPhoneTemplateId($phone_template_id)
    {
        $this->container['phone_template_id'] = $phone_template_id;

        return $this;
    }

    /**
     * Gets pod_name
     *
     * @return string
     */
    public function getPodName()
    {
        return $this->container['pod_name'];
    }

    /**
     * Sets pod_name
     *
     * @param string $pod_name pod_name
     *
     * @return $this
     */
    public function setPodName($pod_name)
    {
        $this->container['pod_name'] = $pod_name;

        return $this;
    }

    /**
     * Gets pod_spec_list
     *
     * @return \Volcengine\Acep\Model\PodSpecListForCreatePodInput[]
     */
    public function getPodSpecList()
    {
        return $this->container['pod_spec_list'];
    }

    /**
     * Sets pod_spec_list
     *
     * @param \Volcengine\Acep\Model\PodSpecListForCreatePodInput[] $pod_spec_list pod_spec_list
     *
     * @return $this
     */
    public function setPodSpecList($pod_spec_list)
    {
        $this->container['pod_spec_list'] = $pod_spec_list;

        return $this;
    }

    /**
     * Gets port_mapping_rule_id_list
     *
     * @return string[]
     */
    public function getPortMappingRuleIdList()
    {
        return $this->container['port_mapping_rule_id_list'];
    }

    /**
     * Sets port_mapping_rule_id_list
     *
     * @param string[] $port_mapping_rule_id_list port_mapping_rule_id_list
     *
     * @return $this
     */
    public function setPortMappingRuleIdList($port_mapping_rule_id_list)
    {
        $this->container['port_mapping_rule_id_list'] = $port_mapping_rule_id_list;

        return $this;
    }

    /**
     * Gets product_id
     *
     * @return string
     */
    public function getProductId()
    {
        return $this->container['product_id'];
    }

    /**
     * Sets product_id
     *
     * @param string $product_id product_id
     *
     * @return $this
     */
    public function setProductId($product_id)
    {
        $this->container['product_id'] = $product_id;

        return $this;
    }

    /**
     * Gets resource_type
     *
     * @return int
     */
    public function getResourceType()
    {
        return $this->container['resource_type'];
    }

    /**
     * Sets resource_type
     *
     * @param int $resource_type resource_type
     *
     * @return $this
     */
    public function setResourceType($resource_type)
    {
        $this->container['resource_type'] = $resource_type;

        return $this;
    }

    /**
     * Gets start
     *
     * @return bool
     */
    public function getStart()
    {
        return $this->container['start'];
    }

    /**
     * Sets start
     *
     * @param bool $start start
     *
     * @return $this
     */
    public function setStart($start)
    {
        $this->container['start'] = $start;

        return $this;
    }

    /**
     * Gets tag_id
     *
     * @return string
     */
    public function getTagId()
    {
        return $this->container['tag_id'];
    }

    /**
     * Sets tag_id
     *
     * @param string $tag_id tag_id
     *
     * @return $this
     */
    public function setTagId($tag_id)
    {
        $this->container['tag_id'] = $tag_id;

        return $this;
    }

    /**
     * Gets up_bandwidth_limit
     *
     * @return int
     */
    public function getUpBandwidthLimit()
    {
        return $this->container['up_bandwidth_limit'];
    }

    /**
     * Sets up_bandwidth_limit
     *
     * @param int $up_bandwidth_limit up_bandwidth_limit
     *
     * @return $this
     */
    public function setUpBandwidthLimit($up_bandwidth_limit)
    {
        $this->container['up_bandwidth_limit'] = $up_bandwidth_limit;

        return $this;
    }

    /**
     * Gets use_phone_template
     *
     * @return int
     */
    public function getUsePhoneTemplate()
    {
        return $this->container['use_phone_template'];
    }

    /**
     * Sets use_phone_template
     *
     * @param int $use_phone_template use_phone_template
     *
     * @return $this
     */
    public function setUsePhoneTemplate($use_phone_template)
    {
        $this->container['use_phone_template'] = $use_phone_template;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

