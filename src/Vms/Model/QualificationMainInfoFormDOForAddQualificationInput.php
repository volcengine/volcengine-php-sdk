<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Vms\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class QualificationMainInfoFormDOForAddQualificationInput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'QualificationMainInfoFormDOForAddQualificationInput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'business_license_photo_file_code' => 'string',
        'certificate_of_taxation_registration_photo_file_code' => 'string',
        'certificate_three_in_one' => 'int',
        'commitment_letter_of_net_access_photo_file_code' => 'string',
        'doc_of_number_apply_photo_file_code' => 'string',
        'enterprise_address' => 'string',
        'legal_representative_front_id_photo_file_code' => 'string',
        'legal_representative_id' => 'string',
        'legal_representative_name' => 'string',
        'qualification_entity' => 'string',
        'qualification_no' => 'string',
        'three_in_one_business_license_photo_file_code' => 'string',
        'unit_social_credit_code' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'business_license_photo_file_code' => null,
        'certificate_of_taxation_registration_photo_file_code' => null,
        'certificate_three_in_one' => 'int32',
        'commitment_letter_of_net_access_photo_file_code' => null,
        'doc_of_number_apply_photo_file_code' => null,
        'enterprise_address' => null,
        'legal_representative_front_id_photo_file_code' => null,
        'legal_representative_id' => null,
        'legal_representative_name' => null,
        'qualification_entity' => null,
        'qualification_no' => null,
        'three_in_one_business_license_photo_file_code' => null,
        'unit_social_credit_code' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'business_license_photo_file_code' => 'BusinessLicensePhotoFileCode',
        'certificate_of_taxation_registration_photo_file_code' => 'CertificateOfTaxationRegistrationPhotoFileCode',
        'certificate_three_in_one' => 'CertificateThreeInOne',
        'commitment_letter_of_net_access_photo_file_code' => 'CommitmentLetterOfNetAccessPhotoFileCode',
        'doc_of_number_apply_photo_file_code' => 'DocOfNumberApplyPhotoFileCode',
        'enterprise_address' => 'EnterpriseAddress',
        'legal_representative_front_id_photo_file_code' => 'LegalRepresentativeFrontIdPhotoFileCode',
        'legal_representative_id' => 'LegalRepresentativeId',
        'legal_representative_name' => 'LegalRepresentativeName',
        'qualification_entity' => 'QualificationEntity',
        'qualification_no' => 'QualificationNo',
        'three_in_one_business_license_photo_file_code' => 'ThreeInOneBusinessLicensePhotoFileCode',
        'unit_social_credit_code' => 'UnitSocialCreditCode'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'business_license_photo_file_code' => 'setBusinessLicensePhotoFileCode',
        'certificate_of_taxation_registration_photo_file_code' => 'setCertificateOfTaxationRegistrationPhotoFileCode',
        'certificate_three_in_one' => 'setCertificateThreeInOne',
        'commitment_letter_of_net_access_photo_file_code' => 'setCommitmentLetterOfNetAccessPhotoFileCode',
        'doc_of_number_apply_photo_file_code' => 'setDocOfNumberApplyPhotoFileCode',
        'enterprise_address' => 'setEnterpriseAddress',
        'legal_representative_front_id_photo_file_code' => 'setLegalRepresentativeFrontIdPhotoFileCode',
        'legal_representative_id' => 'setLegalRepresentativeId',
        'legal_representative_name' => 'setLegalRepresentativeName',
        'qualification_entity' => 'setQualificationEntity',
        'qualification_no' => 'setQualificationNo',
        'three_in_one_business_license_photo_file_code' => 'setThreeInOneBusinessLicensePhotoFileCode',
        'unit_social_credit_code' => 'setUnitSocialCreditCode'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'business_license_photo_file_code' => 'getBusinessLicensePhotoFileCode',
        'certificate_of_taxation_registration_photo_file_code' => 'getCertificateOfTaxationRegistrationPhotoFileCode',
        'certificate_three_in_one' => 'getCertificateThreeInOne',
        'commitment_letter_of_net_access_photo_file_code' => 'getCommitmentLetterOfNetAccessPhotoFileCode',
        'doc_of_number_apply_photo_file_code' => 'getDocOfNumberApplyPhotoFileCode',
        'enterprise_address' => 'getEnterpriseAddress',
        'legal_representative_front_id_photo_file_code' => 'getLegalRepresentativeFrontIdPhotoFileCode',
        'legal_representative_id' => 'getLegalRepresentativeId',
        'legal_representative_name' => 'getLegalRepresentativeName',
        'qualification_entity' => 'getQualificationEntity',
        'qualification_no' => 'getQualificationNo',
        'three_in_one_business_license_photo_file_code' => 'getThreeInOneBusinessLicensePhotoFileCode',
        'unit_social_credit_code' => 'getUnitSocialCreditCode'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['business_license_photo_file_code'] = isset($data['business_license_photo_file_code']) ? $data['business_license_photo_file_code'] : null;
        $this->container['certificate_of_taxation_registration_photo_file_code'] = isset($data['certificate_of_taxation_registration_photo_file_code']) ? $data['certificate_of_taxation_registration_photo_file_code'] : null;
        $this->container['certificate_three_in_one'] = isset($data['certificate_three_in_one']) ? $data['certificate_three_in_one'] : null;
        $this->container['commitment_letter_of_net_access_photo_file_code'] = isset($data['commitment_letter_of_net_access_photo_file_code']) ? $data['commitment_letter_of_net_access_photo_file_code'] : null;
        $this->container['doc_of_number_apply_photo_file_code'] = isset($data['doc_of_number_apply_photo_file_code']) ? $data['doc_of_number_apply_photo_file_code'] : null;
        $this->container['enterprise_address'] = isset($data['enterprise_address']) ? $data['enterprise_address'] : null;
        $this->container['legal_representative_front_id_photo_file_code'] = isset($data['legal_representative_front_id_photo_file_code']) ? $data['legal_representative_front_id_photo_file_code'] : null;
        $this->container['legal_representative_id'] = isset($data['legal_representative_id']) ? $data['legal_representative_id'] : null;
        $this->container['legal_representative_name'] = isset($data['legal_representative_name']) ? $data['legal_representative_name'] : null;
        $this->container['qualification_entity'] = isset($data['qualification_entity']) ? $data['qualification_entity'] : null;
        $this->container['qualification_no'] = isset($data['qualification_no']) ? $data['qualification_no'] : null;
        $this->container['three_in_one_business_license_photo_file_code'] = isset($data['three_in_one_business_license_photo_file_code']) ? $data['three_in_one_business_license_photo_file_code'] : null;
        $this->container['unit_social_credit_code'] = isset($data['unit_social_credit_code']) ? $data['unit_social_credit_code'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets business_license_photo_file_code
     *
     * @return string
     */
    public function getBusinessLicensePhotoFileCode()
    {
        return $this->container['business_license_photo_file_code'];
    }

    /**
     * Sets business_license_photo_file_code
     *
     * @param string $business_license_photo_file_code business_license_photo_file_code
     *
     * @return $this
     */
    public function setBusinessLicensePhotoFileCode($business_license_photo_file_code)
    {
        $this->container['business_license_photo_file_code'] = $business_license_photo_file_code;

        return $this;
    }

    /**
     * Gets certificate_of_taxation_registration_photo_file_code
     *
     * @return string
     */
    public function getCertificateOfTaxationRegistrationPhotoFileCode()
    {
        return $this->container['certificate_of_taxation_registration_photo_file_code'];
    }

    /**
     * Sets certificate_of_taxation_registration_photo_file_code
     *
     * @param string $certificate_of_taxation_registration_photo_file_code certificate_of_taxation_registration_photo_file_code
     *
     * @return $this
     */
    public function setCertificateOfTaxationRegistrationPhotoFileCode($certificate_of_taxation_registration_photo_file_code)
    {
        $this->container['certificate_of_taxation_registration_photo_file_code'] = $certificate_of_taxation_registration_photo_file_code;

        return $this;
    }

    /**
     * Gets certificate_three_in_one
     *
     * @return int
     */
    public function getCertificateThreeInOne()
    {
        return $this->container['certificate_three_in_one'];
    }

    /**
     * Sets certificate_three_in_one
     *
     * @param int $certificate_three_in_one certificate_three_in_one
     *
     * @return $this
     */
    public function setCertificateThreeInOne($certificate_three_in_one)
    {
        $this->container['certificate_three_in_one'] = $certificate_three_in_one;

        return $this;
    }

    /**
     * Gets commitment_letter_of_net_access_photo_file_code
     *
     * @return string
     */
    public function getCommitmentLetterOfNetAccessPhotoFileCode()
    {
        return $this->container['commitment_letter_of_net_access_photo_file_code'];
    }

    /**
     * Sets commitment_letter_of_net_access_photo_file_code
     *
     * @param string $commitment_letter_of_net_access_photo_file_code commitment_letter_of_net_access_photo_file_code
     *
     * @return $this
     */
    public function setCommitmentLetterOfNetAccessPhotoFileCode($commitment_letter_of_net_access_photo_file_code)
    {
        $this->container['commitment_letter_of_net_access_photo_file_code'] = $commitment_letter_of_net_access_photo_file_code;

        return $this;
    }

    /**
     * Gets doc_of_number_apply_photo_file_code
     *
     * @return string
     */
    public function getDocOfNumberApplyPhotoFileCode()
    {
        return $this->container['doc_of_number_apply_photo_file_code'];
    }

    /**
     * Sets doc_of_number_apply_photo_file_code
     *
     * @param string $doc_of_number_apply_photo_file_code doc_of_number_apply_photo_file_code
     *
     * @return $this
     */
    public function setDocOfNumberApplyPhotoFileCode($doc_of_number_apply_photo_file_code)
    {
        $this->container['doc_of_number_apply_photo_file_code'] = $doc_of_number_apply_photo_file_code;

        return $this;
    }

    /**
     * Gets enterprise_address
     *
     * @return string
     */
    public function getEnterpriseAddress()
    {
        return $this->container['enterprise_address'];
    }

    /**
     * Sets enterprise_address
     *
     * @param string $enterprise_address enterprise_address
     *
     * @return $this
     */
    public function setEnterpriseAddress($enterprise_address)
    {
        $this->container['enterprise_address'] = $enterprise_address;

        return $this;
    }

    /**
     * Gets legal_representative_front_id_photo_file_code
     *
     * @return string
     */
    public function getLegalRepresentativeFrontIdPhotoFileCode()
    {
        return $this->container['legal_representative_front_id_photo_file_code'];
    }

    /**
     * Sets legal_representative_front_id_photo_file_code
     *
     * @param string $legal_representative_front_id_photo_file_code legal_representative_front_id_photo_file_code
     *
     * @return $this
     */
    public function setLegalRepresentativeFrontIdPhotoFileCode($legal_representative_front_id_photo_file_code)
    {
        $this->container['legal_representative_front_id_photo_file_code'] = $legal_representative_front_id_photo_file_code;

        return $this;
    }

    /**
     * Gets legal_representative_id
     *
     * @return string
     */
    public function getLegalRepresentativeId()
    {
        return $this->container['legal_representative_id'];
    }

    /**
     * Sets legal_representative_id
     *
     * @param string $legal_representative_id legal_representative_id
     *
     * @return $this
     */
    public function setLegalRepresentativeId($legal_representative_id)
    {
        $this->container['legal_representative_id'] = $legal_representative_id;

        return $this;
    }

    /**
     * Gets legal_representative_name
     *
     * @return string
     */
    public function getLegalRepresentativeName()
    {
        return $this->container['legal_representative_name'];
    }

    /**
     * Sets legal_representative_name
     *
     * @param string $legal_representative_name legal_representative_name
     *
     * @return $this
     */
    public function setLegalRepresentativeName($legal_representative_name)
    {
        $this->container['legal_representative_name'] = $legal_representative_name;

        return $this;
    }

    /**
     * Gets qualification_entity
     *
     * @return string
     */
    public function getQualificationEntity()
    {
        return $this->container['qualification_entity'];
    }

    /**
     * Sets qualification_entity
     *
     * @param string $qualification_entity qualification_entity
     *
     * @return $this
     */
    public function setQualificationEntity($qualification_entity)
    {
        $this->container['qualification_entity'] = $qualification_entity;

        return $this;
    }

    /**
     * Gets qualification_no
     *
     * @return string
     */
    public function getQualificationNo()
    {
        return $this->container['qualification_no'];
    }

    /**
     * Sets qualification_no
     *
     * @param string $qualification_no qualification_no
     *
     * @return $this
     */
    public function setQualificationNo($qualification_no)
    {
        $this->container['qualification_no'] = $qualification_no;

        return $this;
    }

    /**
     * Gets three_in_one_business_license_photo_file_code
     *
     * @return string
     */
    public function getThreeInOneBusinessLicensePhotoFileCode()
    {
        return $this->container['three_in_one_business_license_photo_file_code'];
    }

    /**
     * Sets three_in_one_business_license_photo_file_code
     *
     * @param string $three_in_one_business_license_photo_file_code three_in_one_business_license_photo_file_code
     *
     * @return $this
     */
    public function setThreeInOneBusinessLicensePhotoFileCode($three_in_one_business_license_photo_file_code)
    {
        $this->container['three_in_one_business_license_photo_file_code'] = $three_in_one_business_license_photo_file_code;

        return $this;
    }

    /**
     * Gets unit_social_credit_code
     *
     * @return string
     */
    public function getUnitSocialCreditCode()
    {
        return $this->container['unit_social_credit_code'];
    }

    /**
     * Sets unit_social_credit_code
     *
     * @param string $unit_social_credit_code unit_social_credit_code
     *
     * @return $this
     */
    public function setUnitSocialCreditCode($unit_social_credit_code)
    {
        $this->container['unit_social_credit_code'] = $unit_social_credit_code;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

