<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Vms\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class Click2CallRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'Click2CallRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'callee' => 'string',
        'callee_degrade_to_capital' => 'int',
        'callee_number' => 'string',
        'callee_number_city_code' => 'string',
        'callee_number_degrade_city_list' => 'string[]',
        'callee_number_pool_no' => 'string',
        'caller' => 'string',
        'caller_degrade_to_capital' => 'int',
        'caller_number' => 'string',
        'caller_number_city_code' => 'string',
        'caller_number_degrade_city_list' => 'string[]',
        'caller_number_pool_no' => 'string',
        'last_minutes' => 'int',
        'last_voice' => 'string',
        'last_voice_to' => 'string',
        'max_time' => 'int',
        'pre_voice' => 'string',
        'user_data' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'callee' => null,
        'callee_degrade_to_capital' => 'int32',
        'callee_number' => null,
        'callee_number_city_code' => null,
        'callee_number_degrade_city_list' => null,
        'callee_number_pool_no' => null,
        'caller' => null,
        'caller_degrade_to_capital' => 'int32',
        'caller_number' => null,
        'caller_number_city_code' => null,
        'caller_number_degrade_city_list' => null,
        'caller_number_pool_no' => null,
        'last_minutes' => 'int32',
        'last_voice' => null,
        'last_voice_to' => null,
        'max_time' => 'int32',
        'pre_voice' => null,
        'user_data' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'callee' => 'Callee',
        'callee_degrade_to_capital' => 'CalleeDegradeToCapital',
        'callee_number' => 'CalleeNumber',
        'callee_number_city_code' => 'CalleeNumberCityCode',
        'callee_number_degrade_city_list' => 'CalleeNumberDegradeCityList',
        'callee_number_pool_no' => 'CalleeNumberPoolNo',
        'caller' => 'Caller',
        'caller_degrade_to_capital' => 'CallerDegradeToCapital',
        'caller_number' => 'CallerNumber',
        'caller_number_city_code' => 'CallerNumberCityCode',
        'caller_number_degrade_city_list' => 'CallerNumberDegradeCityList',
        'caller_number_pool_no' => 'CallerNumberPoolNo',
        'last_minutes' => 'LastMinutes',
        'last_voice' => 'LastVoice',
        'last_voice_to' => 'LastVoiceTo',
        'max_time' => 'MaxTime',
        'pre_voice' => 'PreVoice',
        'user_data' => 'UserData'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'callee' => 'setCallee',
        'callee_degrade_to_capital' => 'setCalleeDegradeToCapital',
        'callee_number' => 'setCalleeNumber',
        'callee_number_city_code' => 'setCalleeNumberCityCode',
        'callee_number_degrade_city_list' => 'setCalleeNumberDegradeCityList',
        'callee_number_pool_no' => 'setCalleeNumberPoolNo',
        'caller' => 'setCaller',
        'caller_degrade_to_capital' => 'setCallerDegradeToCapital',
        'caller_number' => 'setCallerNumber',
        'caller_number_city_code' => 'setCallerNumberCityCode',
        'caller_number_degrade_city_list' => 'setCallerNumberDegradeCityList',
        'caller_number_pool_no' => 'setCallerNumberPoolNo',
        'last_minutes' => 'setLastMinutes',
        'last_voice' => 'setLastVoice',
        'last_voice_to' => 'setLastVoiceTo',
        'max_time' => 'setMaxTime',
        'pre_voice' => 'setPreVoice',
        'user_data' => 'setUserData'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'callee' => 'getCallee',
        'callee_degrade_to_capital' => 'getCalleeDegradeToCapital',
        'callee_number' => 'getCalleeNumber',
        'callee_number_city_code' => 'getCalleeNumberCityCode',
        'callee_number_degrade_city_list' => 'getCalleeNumberDegradeCityList',
        'callee_number_pool_no' => 'getCalleeNumberPoolNo',
        'caller' => 'getCaller',
        'caller_degrade_to_capital' => 'getCallerDegradeToCapital',
        'caller_number' => 'getCallerNumber',
        'caller_number_city_code' => 'getCallerNumberCityCode',
        'caller_number_degrade_city_list' => 'getCallerNumberDegradeCityList',
        'caller_number_pool_no' => 'getCallerNumberPoolNo',
        'last_minutes' => 'getLastMinutes',
        'last_voice' => 'getLastVoice',
        'last_voice_to' => 'getLastVoiceTo',
        'max_time' => 'getMaxTime',
        'pre_voice' => 'getPreVoice',
        'user_data' => 'getUserData'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    const LAST_VOICE_TO_NONE = 'NONE';
    const LAST_VOICE_TO_CALLER = 'CALLER';
    const LAST_VOICE_TO_CALLEE = 'CALLEE';
    const LAST_VOICE_TO_BOTH = 'BOTH';
    

    
    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getLastVoiceToAllowableValues()
    {
        return [
            self::LAST_VOICE_TO_NONE,
            self::LAST_VOICE_TO_CALLER,
            self::LAST_VOICE_TO_CALLEE,
            self::LAST_VOICE_TO_BOTH,
        ];
    }
    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['callee'] = isset($data['callee']) ? $data['callee'] : null;
        $this->container['callee_degrade_to_capital'] = isset($data['callee_degrade_to_capital']) ? $data['callee_degrade_to_capital'] : null;
        $this->container['callee_number'] = isset($data['callee_number']) ? $data['callee_number'] : null;
        $this->container['callee_number_city_code'] = isset($data['callee_number_city_code']) ? $data['callee_number_city_code'] : null;
        $this->container['callee_number_degrade_city_list'] = isset($data['callee_number_degrade_city_list']) ? $data['callee_number_degrade_city_list'] : null;
        $this->container['callee_number_pool_no'] = isset($data['callee_number_pool_no']) ? $data['callee_number_pool_no'] : null;
        $this->container['caller'] = isset($data['caller']) ? $data['caller'] : null;
        $this->container['caller_degrade_to_capital'] = isset($data['caller_degrade_to_capital']) ? $data['caller_degrade_to_capital'] : null;
        $this->container['caller_number'] = isset($data['caller_number']) ? $data['caller_number'] : null;
        $this->container['caller_number_city_code'] = isset($data['caller_number_city_code']) ? $data['caller_number_city_code'] : null;
        $this->container['caller_number_degrade_city_list'] = isset($data['caller_number_degrade_city_list']) ? $data['caller_number_degrade_city_list'] : null;
        $this->container['caller_number_pool_no'] = isset($data['caller_number_pool_no']) ? $data['caller_number_pool_no'] : null;
        $this->container['last_minutes'] = isset($data['last_minutes']) ? $data['last_minutes'] : null;
        $this->container['last_voice'] = isset($data['last_voice']) ? $data['last_voice'] : null;
        $this->container['last_voice_to'] = isset($data['last_voice_to']) ? $data['last_voice_to'] : null;
        $this->container['max_time'] = isset($data['max_time']) ? $data['max_time'] : null;
        $this->container['pre_voice'] = isset($data['pre_voice']) ? $data['pre_voice'] : null;
        $this->container['user_data'] = isset($data['user_data']) ? $data['user_data'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['callee'] === null) {
            $invalidProperties[] = "'callee' can't be null";
        }
        if ($this->container['callee_number_pool_no'] === null) {
            $invalidProperties[] = "'callee_number_pool_no' can't be null";
        }
        if ($this->container['caller'] === null) {
            $invalidProperties[] = "'caller' can't be null";
        }
        if ($this->container['caller_number_pool_no'] === null) {
            $invalidProperties[] = "'caller_number_pool_no' can't be null";
        }
        $allowedValues = $this->getLastVoiceToAllowableValues();
        if (!is_null($this->container['last_voice_to']) && !in_array($this->container['last_voice_to'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value for 'last_voice_to', must be one of '%s'",
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets callee
     *
     * @return string
     */
    public function getCallee()
    {
        return $this->container['callee'];
    }

    /**
     * Sets callee
     *
     * @param string $callee callee
     *
     * @return $this
     */
    public function setCallee($callee)
    {
        $this->container['callee'] = $callee;

        return $this;
    }

    /**
     * Gets callee_degrade_to_capital
     *
     * @return int
     */
    public function getCalleeDegradeToCapital()
    {
        return $this->container['callee_degrade_to_capital'];
    }

    /**
     * Sets callee_degrade_to_capital
     *
     * @param int $callee_degrade_to_capital callee_degrade_to_capital
     *
     * @return $this
     */
    public function setCalleeDegradeToCapital($callee_degrade_to_capital)
    {
        $this->container['callee_degrade_to_capital'] = $callee_degrade_to_capital;

        return $this;
    }

    /**
     * Gets callee_number
     *
     * @return string
     */
    public function getCalleeNumber()
    {
        return $this->container['callee_number'];
    }

    /**
     * Sets callee_number
     *
     * @param string $callee_number callee_number
     *
     * @return $this
     */
    public function setCalleeNumber($callee_number)
    {
        $this->container['callee_number'] = $callee_number;

        return $this;
    }

    /**
     * Gets callee_number_city_code
     *
     * @return string
     */
    public function getCalleeNumberCityCode()
    {
        return $this->container['callee_number_city_code'];
    }

    /**
     * Sets callee_number_city_code
     *
     * @param string $callee_number_city_code callee_number_city_code
     *
     * @return $this
     */
    public function setCalleeNumberCityCode($callee_number_city_code)
    {
        $this->container['callee_number_city_code'] = $callee_number_city_code;

        return $this;
    }

    /**
     * Gets callee_number_degrade_city_list
     *
     * @return string[]
     */
    public function getCalleeNumberDegradeCityList()
    {
        return $this->container['callee_number_degrade_city_list'];
    }

    /**
     * Sets callee_number_degrade_city_list
     *
     * @param string[] $callee_number_degrade_city_list callee_number_degrade_city_list
     *
     * @return $this
     */
    public function setCalleeNumberDegradeCityList($callee_number_degrade_city_list)
    {
        $this->container['callee_number_degrade_city_list'] = $callee_number_degrade_city_list;

        return $this;
    }

    /**
     * Gets callee_number_pool_no
     *
     * @return string
     */
    public function getCalleeNumberPoolNo()
    {
        return $this->container['callee_number_pool_no'];
    }

    /**
     * Sets callee_number_pool_no
     *
     * @param string $callee_number_pool_no callee_number_pool_no
     *
     * @return $this
     */
    public function setCalleeNumberPoolNo($callee_number_pool_no)
    {
        $this->container['callee_number_pool_no'] = $callee_number_pool_no;

        return $this;
    }

    /**
     * Gets caller
     *
     * @return string
     */
    public function getCaller()
    {
        return $this->container['caller'];
    }

    /**
     * Sets caller
     *
     * @param string $caller caller
     *
     * @return $this
     */
    public function setCaller($caller)
    {
        $this->container['caller'] = $caller;

        return $this;
    }

    /**
     * Gets caller_degrade_to_capital
     *
     * @return int
     */
    public function getCallerDegradeToCapital()
    {
        return $this->container['caller_degrade_to_capital'];
    }

    /**
     * Sets caller_degrade_to_capital
     *
     * @param int $caller_degrade_to_capital caller_degrade_to_capital
     *
     * @return $this
     */
    public function setCallerDegradeToCapital($caller_degrade_to_capital)
    {
        $this->container['caller_degrade_to_capital'] = $caller_degrade_to_capital;

        return $this;
    }

    /**
     * Gets caller_number
     *
     * @return string
     */
    public function getCallerNumber()
    {
        return $this->container['caller_number'];
    }

    /**
     * Sets caller_number
     *
     * @param string $caller_number caller_number
     *
     * @return $this
     */
    public function setCallerNumber($caller_number)
    {
        $this->container['caller_number'] = $caller_number;

        return $this;
    }

    /**
     * Gets caller_number_city_code
     *
     * @return string
     */
    public function getCallerNumberCityCode()
    {
        return $this->container['caller_number_city_code'];
    }

    /**
     * Sets caller_number_city_code
     *
     * @param string $caller_number_city_code caller_number_city_code
     *
     * @return $this
     */
    public function setCallerNumberCityCode($caller_number_city_code)
    {
        $this->container['caller_number_city_code'] = $caller_number_city_code;

        return $this;
    }

    /**
     * Gets caller_number_degrade_city_list
     *
     * @return string[]
     */
    public function getCallerNumberDegradeCityList()
    {
        return $this->container['caller_number_degrade_city_list'];
    }

    /**
     * Sets caller_number_degrade_city_list
     *
     * @param string[] $caller_number_degrade_city_list caller_number_degrade_city_list
     *
     * @return $this
     */
    public function setCallerNumberDegradeCityList($caller_number_degrade_city_list)
    {
        $this->container['caller_number_degrade_city_list'] = $caller_number_degrade_city_list;

        return $this;
    }

    /**
     * Gets caller_number_pool_no
     *
     * @return string
     */
    public function getCallerNumberPoolNo()
    {
        return $this->container['caller_number_pool_no'];
    }

    /**
     * Sets caller_number_pool_no
     *
     * @param string $caller_number_pool_no caller_number_pool_no
     *
     * @return $this
     */
    public function setCallerNumberPoolNo($caller_number_pool_no)
    {
        $this->container['caller_number_pool_no'] = $caller_number_pool_no;

        return $this;
    }

    /**
     * Gets last_minutes
     *
     * @return int
     */
    public function getLastMinutes()
    {
        return $this->container['last_minutes'];
    }

    /**
     * Sets last_minutes
     *
     * @param int $last_minutes last_minutes
     *
     * @return $this
     */
    public function setLastMinutes($last_minutes)
    {
        $this->container['last_minutes'] = $last_minutes;

        return $this;
    }

    /**
     * Gets last_voice
     *
     * @return string
     */
    public function getLastVoice()
    {
        return $this->container['last_voice'];
    }

    /**
     * Sets last_voice
     *
     * @param string $last_voice last_voice
     *
     * @return $this
     */
    public function setLastVoice($last_voice)
    {
        $this->container['last_voice'] = $last_voice;

        return $this;
    }

    /**
     * Gets last_voice_to
     *
     * @return string
     */
    public function getLastVoiceTo()
    {
        return $this->container['last_voice_to'];
    }

    /**
     * Sets last_voice_to
     *
     * @param string $last_voice_to last_voice_to
     *
     * @return $this
     */
    public function setLastVoiceTo($last_voice_to)
    {
        $allowedValues = $this->getLastVoiceToAllowableValues();
        if (!is_null($last_voice_to) && !in_array($last_voice_to, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value for 'last_voice_to', must be one of '%s'",
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['last_voice_to'] = $last_voice_to;

        return $this;
    }

    /**
     * Gets max_time
     *
     * @return int
     */
    public function getMaxTime()
    {
        return $this->container['max_time'];
    }

    /**
     * Sets max_time
     *
     * @param int $max_time max_time
     *
     * @return $this
     */
    public function setMaxTime($max_time)
    {
        $this->container['max_time'] = $max_time;

        return $this;
    }

    /**
     * Gets pre_voice
     *
     * @return string
     */
    public function getPreVoice()
    {
        return $this->container['pre_voice'];
    }

    /**
     * Sets pre_voice
     *
     * @param string $pre_voice pre_voice
     *
     * @return $this
     */
    public function setPreVoice($pre_voice)
    {
        $this->container['pre_voice'] = $pre_voice;

        return $this;
    }

    /**
     * Gets user_data
     *
     * @return string
     */
    public function getUserData()
    {
        return $this->container['user_data'];
    }

    /**
     * Sets user_data
     *
     * @param string $user_data user_data
     *
     * @return $this
     */
    public function setUserData($user_data)
    {
        $this->container['user_data'] = $user_data;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

