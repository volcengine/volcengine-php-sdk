<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Redis\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class DescribeAllowListDetailResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DescribeAllowListDetailResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'allow_list' => 'string',
        'allow_list_category' => 'string',
        'allow_list_desc' => 'string',
        'allow_list_id' => 'string',
        'allow_list_name' => 'string',
        'allow_list_type' => 'string',
        'associated_instance_num' => 'int',
        'associated_instances' => '\Volcengine\Redis\Model\AssociatedInstanceForDescribeAllowListDetailOutput[]',
        'project_name' => 'string',
        'security_group_bind_infos' => '\Volcengine\Redis\Model\SecurityGroupBindInfoForDescribeAllowListDetailOutput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'allow_list' => null,
        'allow_list_category' => null,
        'allow_list_desc' => null,
        'allow_list_id' => null,
        'allow_list_name' => null,
        'allow_list_type' => null,
        'associated_instance_num' => 'int32',
        'associated_instances' => null,
        'project_name' => null,
        'security_group_bind_infos' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'allow_list' => 'AllowList',
        'allow_list_category' => 'AllowListCategory',
        'allow_list_desc' => 'AllowListDesc',
        'allow_list_id' => 'AllowListId',
        'allow_list_name' => 'AllowListName',
        'allow_list_type' => 'AllowListType',
        'associated_instance_num' => 'AssociatedInstanceNum',
        'associated_instances' => 'AssociatedInstances',
        'project_name' => 'ProjectName',
        'security_group_bind_infos' => 'SecurityGroupBindInfos'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'allow_list' => 'setAllowList',
        'allow_list_category' => 'setAllowListCategory',
        'allow_list_desc' => 'setAllowListDesc',
        'allow_list_id' => 'setAllowListId',
        'allow_list_name' => 'setAllowListName',
        'allow_list_type' => 'setAllowListType',
        'associated_instance_num' => 'setAssociatedInstanceNum',
        'associated_instances' => 'setAssociatedInstances',
        'project_name' => 'setProjectName',
        'security_group_bind_infos' => 'setSecurityGroupBindInfos'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'allow_list' => 'getAllowList',
        'allow_list_category' => 'getAllowListCategory',
        'allow_list_desc' => 'getAllowListDesc',
        'allow_list_id' => 'getAllowListId',
        'allow_list_name' => 'getAllowListName',
        'allow_list_type' => 'getAllowListType',
        'associated_instance_num' => 'getAssociatedInstanceNum',
        'associated_instances' => 'getAssociatedInstances',
        'project_name' => 'getProjectName',
        'security_group_bind_infos' => 'getSecurityGroupBindInfos'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['allow_list'] = isset($data['allow_list']) ? $data['allow_list'] : null;
        $this->container['allow_list_category'] = isset($data['allow_list_category']) ? $data['allow_list_category'] : null;
        $this->container['allow_list_desc'] = isset($data['allow_list_desc']) ? $data['allow_list_desc'] : null;
        $this->container['allow_list_id'] = isset($data['allow_list_id']) ? $data['allow_list_id'] : null;
        $this->container['allow_list_name'] = isset($data['allow_list_name']) ? $data['allow_list_name'] : null;
        $this->container['allow_list_type'] = isset($data['allow_list_type']) ? $data['allow_list_type'] : null;
        $this->container['associated_instance_num'] = isset($data['associated_instance_num']) ? $data['associated_instance_num'] : null;
        $this->container['associated_instances'] = isset($data['associated_instances']) ? $data['associated_instances'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['security_group_bind_infos'] = isset($data['security_group_bind_infos']) ? $data['security_group_bind_infos'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets allow_list
     *
     * @return string
     */
    public function getAllowList()
    {
        return $this->container['allow_list'];
    }

    /**
     * Sets allow_list
     *
     * @param string $allow_list allow_list
     *
     * @return $this
     */
    public function setAllowList($allow_list)
    {
        $this->container['allow_list'] = $allow_list;

        return $this;
    }

    /**
     * Gets allow_list_category
     *
     * @return string
     */
    public function getAllowListCategory()
    {
        return $this->container['allow_list_category'];
    }

    /**
     * Sets allow_list_category
     *
     * @param string $allow_list_category allow_list_category
     *
     * @return $this
     */
    public function setAllowListCategory($allow_list_category)
    {
        $this->container['allow_list_category'] = $allow_list_category;

        return $this;
    }

    /**
     * Gets allow_list_desc
     *
     * @return string
     */
    public function getAllowListDesc()
    {
        return $this->container['allow_list_desc'];
    }

    /**
     * Sets allow_list_desc
     *
     * @param string $allow_list_desc allow_list_desc
     *
     * @return $this
     */
    public function setAllowListDesc($allow_list_desc)
    {
        $this->container['allow_list_desc'] = $allow_list_desc;

        return $this;
    }

    /**
     * Gets allow_list_id
     *
     * @return string
     */
    public function getAllowListId()
    {
        return $this->container['allow_list_id'];
    }

    /**
     * Sets allow_list_id
     *
     * @param string $allow_list_id allow_list_id
     *
     * @return $this
     */
    public function setAllowListId($allow_list_id)
    {
        $this->container['allow_list_id'] = $allow_list_id;

        return $this;
    }

    /**
     * Gets allow_list_name
     *
     * @return string
     */
    public function getAllowListName()
    {
        return $this->container['allow_list_name'];
    }

    /**
     * Sets allow_list_name
     *
     * @param string $allow_list_name allow_list_name
     *
     * @return $this
     */
    public function setAllowListName($allow_list_name)
    {
        $this->container['allow_list_name'] = $allow_list_name;

        return $this;
    }

    /**
     * Gets allow_list_type
     *
     * @return string
     */
    public function getAllowListType()
    {
        return $this->container['allow_list_type'];
    }

    /**
     * Sets allow_list_type
     *
     * @param string $allow_list_type allow_list_type
     *
     * @return $this
     */
    public function setAllowListType($allow_list_type)
    {
        $this->container['allow_list_type'] = $allow_list_type;

        return $this;
    }

    /**
     * Gets associated_instance_num
     *
     * @return int
     */
    public function getAssociatedInstanceNum()
    {
        return $this->container['associated_instance_num'];
    }

    /**
     * Sets associated_instance_num
     *
     * @param int $associated_instance_num associated_instance_num
     *
     * @return $this
     */
    public function setAssociatedInstanceNum($associated_instance_num)
    {
        $this->container['associated_instance_num'] = $associated_instance_num;

        return $this;
    }

    /**
     * Gets associated_instances
     *
     * @return \Volcengine\Redis\Model\AssociatedInstanceForDescribeAllowListDetailOutput[]
     */
    public function getAssociatedInstances()
    {
        return $this->container['associated_instances'];
    }

    /**
     * Sets associated_instances
     *
     * @param \Volcengine\Redis\Model\AssociatedInstanceForDescribeAllowListDetailOutput[] $associated_instances associated_instances
     *
     * @return $this
     */
    public function setAssociatedInstances($associated_instances)
    {
        $this->container['associated_instances'] = $associated_instances;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets security_group_bind_infos
     *
     * @return \Volcengine\Redis\Model\SecurityGroupBindInfoForDescribeAllowListDetailOutput[]
     */
    public function getSecurityGroupBindInfos()
    {
        return $this->container['security_group_bind_infos'];
    }

    /**
     * Sets security_group_bind_infos
     *
     * @param \Volcengine\Redis\Model\SecurityGroupBindInfoForDescribeAllowListDetailOutput[] $security_group_bind_infos security_group_bind_infos
     *
     * @return $this
     */
    public function setSecurityGroupBindInfos($security_group_bind_infos)
    {
        $this->container['security_group_bind_infos'] = $security_group_bind_infos;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

