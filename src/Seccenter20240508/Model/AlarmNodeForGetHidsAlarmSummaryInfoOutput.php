<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class AlarmNodeForGetHidsAlarmSummaryInfoOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AlarmNodeForGetHidsAlarmSummaryInfoOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_expires' => 'string',
        'additional_actions_string' => 'string',
        'args_array' => 'string[]',
        'argv' => 'string',
        'bruteforce_sip' => 'string',
        'category_name' => 'string',
        'class' => 'string',
        'cmd' => 'string',
        'comm' => 'string',
        'command_line' => 'string',
        'configuration' => 'string',
        'configuration_file_hash' => 'string',
        'connect_info' => 'string',
        'contents' => 'string',
        'create_at' => 'string',
        'current_directory' => 'string',
        'data_type' => 'string',
        'description' => 'string',
        'destination_hostname' => 'string',
        'destination_ip' => 'string',
        'destination_port' => 'string',
        'destination_port_name' => 'string',
        'details' => 'string',
        'detection_user' => 'string',
        'dip' => 'string',
        'dport' => 'string',
        'dst_list' => 'string',
        'event_type' => 'string',
        'exe' => 'string',
        'exe_hash' => 'string',
        'external_conns' => 'string',
        'failure_reason' => 'string',
        'fd_name' => 'string',
        'file_downloadable' => 'bool',
        'file_path' => 'string',
        'flags' => 'string',
        'hash' => 'string',
        'hashes' => 'string',
        'highlight_fields' => 'string',
        'hit_argv_list' => 'string[]',
        'hit_data' => 'string',
        'home_directory' => 'string',
        'image' => 'string',
        'image_loaded' => 'string',
        'interrupt_number' => 'string',
        'ioc_detail' => 'string',
        'ioc_meta' => 'string',
        'ioc_severity' => 'string',
        'ioc_source' => 'string',
        'ip_address' => 'string',
        'ko_file' => 'string',
        'ld_preload' => 'string',
        'logon_type' => 'string',
        'md5_hash' => 'string',
        'mod_info' => 'string',
        'modify_at' => 'string',
        'module_name' => 'string',
        'name' => 'string',
        'new_name' => 'string',
        'new_thread_id' => 'string',
        'nspid' => 'string',
        'old_name' => 'string',
        'old_uid' => 'string',
        'old_username' => 'string',
        'original_file_name' => 'string',
        'parent_command_line' => 'string',
        'parent_image' => 'string',
        'path' => 'string',
        'pgid' => 'string',
        'pgid_argv' => 'string',
        'pid' => 'string',
        'pid_set' => 'string',
        'pid_tree' => 'string',
        'ppid' => 'string',
        'ppid_argv' => 'string',
        'privilege_list' => 'string',
        'probe_hook' => 'string',
        'process_guid' => 'string',
        'process_id' => 'string',
        'process_name' => 'string',
        'protocol' => 'string',
        'ptrace_request' => 'string',
        'query' => 'string',
        'query_name' => 'string',
        'query_results' => 'string',
        'query_status' => 'string',
        'run_path' => 'string',
        'sam_account_name' => 'string',
        'service_account' => 'string',
        'service_file_name' => 'string',
        'service_name' => 'string',
        'service_start_type' => 'string',
        'service_type' => 'string',
        'severity_name' => 'string',
        'sid' => 'string',
        'signature' => 'string',
        'signature_status' => 'string',
        'sip' => 'string',
        'socket_argv' => 'string',
        'socket_pid' => 'string',
        'source_ip' => 'string',
        'source_image' => 'string',
        'source_name' => 'string',
        'source_port' => 'string',
        'source_process_guid' => 'string',
        'source_user' => 'string',
        'sport' => 'string',
        'src_list' => 'string',
        'ssh' => 'string',
        'ssh_info' => 'string',
        'stack_trace_format' => 'string',
        'stack_trace_hash' => 'string',
        'start_function' => 'string',
        'start_module' => 'string',
        'static_file' => 'string',
        'stdin' => 'string',
        'stdout' => 'string',
        'subject_user_name' => 'string',
        'symbol_hooked' => 'string',
        'symbol_so' => 'string',
        'syscall_number' => 'string',
        'target_argv' => 'string',
        'target_domain_name' => 'string',
        'target_filename' => 'string',
        'target_object' => 'string',
        'target_pid' => 'string',
        'target_user_name' => 'string',
        'task_content' => 'string',
        'task_name' => 'string',
        'threat_name' => 'string',
        'timestamp' => 'string',
        'types' => 'string',
        'uid' => 'string',
        'user' => 'string',
        'user_principal_name' => 'string',
        'username' => 'string',
        'virus_hit_data_list' => '\Volcengine\Seccenter20240508\Model\VirusHitDataListForGetHidsAlarmSummaryInfoOutput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_expires' => null,
        'additional_actions_string' => null,
        'args_array' => null,
        'argv' => null,
        'bruteforce_sip' => null,
        'category_name' => null,
        'class' => null,
        'cmd' => null,
        'comm' => null,
        'command_line' => null,
        'configuration' => null,
        'configuration_file_hash' => null,
        'connect_info' => null,
        'contents' => null,
        'create_at' => null,
        'current_directory' => null,
        'data_type' => null,
        'description' => null,
        'destination_hostname' => null,
        'destination_ip' => null,
        'destination_port' => null,
        'destination_port_name' => null,
        'details' => null,
        'detection_user' => null,
        'dip' => null,
        'dport' => null,
        'dst_list' => null,
        'event_type' => null,
        'exe' => null,
        'exe_hash' => null,
        'external_conns' => null,
        'failure_reason' => null,
        'fd_name' => null,
        'file_downloadable' => null,
        'file_path' => null,
        'flags' => null,
        'hash' => null,
        'hashes' => null,
        'highlight_fields' => null,
        'hit_argv_list' => null,
        'hit_data' => null,
        'home_directory' => null,
        'image' => null,
        'image_loaded' => null,
        'interrupt_number' => null,
        'ioc_detail' => null,
        'ioc_meta' => null,
        'ioc_severity' => null,
        'ioc_source' => null,
        'ip_address' => null,
        'ko_file' => null,
        'ld_preload' => null,
        'logon_type' => null,
        'md5_hash' => null,
        'mod_info' => null,
        'modify_at' => null,
        'module_name' => null,
        'name' => null,
        'new_name' => null,
        'new_thread_id' => null,
        'nspid' => null,
        'old_name' => null,
        'old_uid' => null,
        'old_username' => null,
        'original_file_name' => null,
        'parent_command_line' => null,
        'parent_image' => null,
        'path' => null,
        'pgid' => null,
        'pgid_argv' => null,
        'pid' => null,
        'pid_set' => null,
        'pid_tree' => null,
        'ppid' => null,
        'ppid_argv' => null,
        'privilege_list' => null,
        'probe_hook' => null,
        'process_guid' => null,
        'process_id' => null,
        'process_name' => null,
        'protocol' => null,
        'ptrace_request' => null,
        'query' => null,
        'query_name' => null,
        'query_results' => null,
        'query_status' => null,
        'run_path' => null,
        'sam_account_name' => null,
        'service_account' => null,
        'service_file_name' => null,
        'service_name' => null,
        'service_start_type' => null,
        'service_type' => null,
        'severity_name' => null,
        'sid' => null,
        'signature' => null,
        'signature_status' => null,
        'sip' => null,
        'socket_argv' => null,
        'socket_pid' => null,
        'source_ip' => null,
        'source_image' => null,
        'source_name' => null,
        'source_port' => null,
        'source_process_guid' => null,
        'source_user' => null,
        'sport' => null,
        'src_list' => null,
        'ssh' => null,
        'ssh_info' => null,
        'stack_trace_format' => null,
        'stack_trace_hash' => null,
        'start_function' => null,
        'start_module' => null,
        'static_file' => null,
        'stdin' => null,
        'stdout' => null,
        'subject_user_name' => null,
        'symbol_hooked' => null,
        'symbol_so' => null,
        'syscall_number' => null,
        'target_argv' => null,
        'target_domain_name' => null,
        'target_filename' => null,
        'target_object' => null,
        'target_pid' => null,
        'target_user_name' => null,
        'task_content' => null,
        'task_name' => null,
        'threat_name' => null,
        'timestamp' => null,
        'types' => null,
        'uid' => null,
        'user' => null,
        'user_principal_name' => null,
        'username' => null,
        'virus_hit_data_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_expires' => 'AccountExpires',
        'additional_actions_string' => 'AdditionalActionsString',
        'args_array' => 'ArgsArray',
        'argv' => 'Argv',
        'bruteforce_sip' => 'BruteforceSip',
        'category_name' => 'CategoryName',
        'class' => 'Class',
        'cmd' => 'Cmd',
        'comm' => 'Comm',
        'command_line' => 'CommandLine',
        'configuration' => 'Configuration',
        'configuration_file_hash' => 'ConfigurationFileHash',
        'connect_info' => 'ConnectInfo',
        'contents' => 'Contents',
        'create_at' => 'CreateAt',
        'current_directory' => 'CurrentDirectory',
        'data_type' => 'DataType',
        'description' => 'Description',
        'destination_hostname' => 'DestinationHostname',
        'destination_ip' => 'DestinationIP',
        'destination_port' => 'DestinationPort',
        'destination_port_name' => 'DestinationPortName',
        'details' => 'Details',
        'detection_user' => 'DetectionUser',
        'dip' => 'Dip',
        'dport' => 'Dport',
        'dst_list' => 'DstList',
        'event_type' => 'EventType',
        'exe' => 'Exe',
        'exe_hash' => 'ExeHash',
        'external_conns' => 'ExternalConns',
        'failure_reason' => 'FailureReason',
        'fd_name' => 'FdName',
        'file_downloadable' => 'FileDownloadable',
        'file_path' => 'FilePath',
        'flags' => 'Flags',
        'hash' => 'Hash',
        'hashes' => 'Hashes',
        'highlight_fields' => 'HighlightFields',
        'hit_argv_list' => 'HitArgvList',
        'hit_data' => 'HitData',
        'home_directory' => 'HomeDirectory',
        'image' => 'Image',
        'image_loaded' => 'ImageLoaded',
        'interrupt_number' => 'InterruptNumber',
        'ioc_detail' => 'IocDetail',
        'ioc_meta' => 'IocMeta',
        'ioc_severity' => 'IocSeverity',
        'ioc_source' => 'IocSource',
        'ip_address' => 'IpAddress',
        'ko_file' => 'KoFile',
        'ld_preload' => 'LdPreload',
        'logon_type' => 'LogonType',
        'md5_hash' => 'Md5Hash',
        'mod_info' => 'ModInfo',
        'modify_at' => 'ModifyAt',
        'module_name' => 'ModuleName',
        'name' => 'Name',
        'new_name' => 'NewName',
        'new_thread_id' => 'NewThreadID',
        'nspid' => 'Nspid',
        'old_name' => 'OldName',
        'old_uid' => 'OldUid',
        'old_username' => 'OldUsername',
        'original_file_name' => 'OriginalFileName',
        'parent_command_line' => 'ParentCommandLine',
        'parent_image' => 'ParentImage',
        'path' => 'Path',
        'pgid' => 'Pgid',
        'pgid_argv' => 'PgidArgv',
        'pid' => 'Pid',
        'pid_set' => 'PidSet',
        'pid_tree' => 'PidTree',
        'ppid' => 'Ppid',
        'ppid_argv' => 'PpidArgv',
        'privilege_list' => 'PrivilegeList',
        'probe_hook' => 'ProbeHook',
        'process_guid' => 'ProcessGuid',
        'process_id' => 'ProcessID',
        'process_name' => 'ProcessName',
        'protocol' => 'Protocol',
        'ptrace_request' => 'PtraceRequest',
        'query' => 'Query',
        'query_name' => 'QueryName',
        'query_results' => 'QueryResults',
        'query_status' => 'QueryStatus',
        'run_path' => 'RunPath',
        'sam_account_name' => 'SamAccountName',
        'service_account' => 'ServiceAccount',
        'service_file_name' => 'ServiceFileName',
        'service_name' => 'ServiceName',
        'service_start_type' => 'ServiceStartType',
        'service_type' => 'ServiceType',
        'severity_name' => 'SeverityName',
        'sid' => 'Sid',
        'signature' => 'Signature',
        'signature_status' => 'SignatureStatus',
        'sip' => 'Sip',
        'socket_argv' => 'SocketArgv',
        'socket_pid' => 'SocketPid',
        'source_ip' => 'SourceIP',
        'source_image' => 'SourceImage',
        'source_name' => 'SourceName',
        'source_port' => 'SourcePort',
        'source_process_guid' => 'SourceProcessGuid',
        'source_user' => 'SourceUser',
        'sport' => 'Sport',
        'src_list' => 'SrcList',
        'ssh' => 'Ssh',
        'ssh_info' => 'SshInfo',
        'stack_trace_format' => 'StackTraceFormat',
        'stack_trace_hash' => 'StackTraceHash',
        'start_function' => 'StartFunction',
        'start_module' => 'StartModule',
        'static_file' => 'StaticFile',
        'stdin' => 'Stdin',
        'stdout' => 'Stdout',
        'subject_user_name' => 'SubjectUserName',
        'symbol_hooked' => 'SymbolHooked',
        'symbol_so' => 'SymbolSo',
        'syscall_number' => 'SyscallNumber',
        'target_argv' => 'TargetArgv',
        'target_domain_name' => 'TargetDomainName',
        'target_filename' => 'TargetFilename',
        'target_object' => 'TargetObject',
        'target_pid' => 'TargetPid',
        'target_user_name' => 'TargetUserName',
        'task_content' => 'TaskContent',
        'task_name' => 'TaskName',
        'threat_name' => 'ThreatName',
        'timestamp' => 'Timestamp',
        'types' => 'Types',
        'uid' => 'Uid',
        'user' => 'User',
        'user_principal_name' => 'UserPrincipalName',
        'username' => 'Username',
        'virus_hit_data_list' => 'VirusHitDataList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_expires' => 'setAccountExpires',
        'additional_actions_string' => 'setAdditionalActionsString',
        'args_array' => 'setArgsArray',
        'argv' => 'setArgv',
        'bruteforce_sip' => 'setBruteforceSip',
        'category_name' => 'setCategoryName',
        'class' => 'setClass',
        'cmd' => 'setCmd',
        'comm' => 'setComm',
        'command_line' => 'setCommandLine',
        'configuration' => 'setConfiguration',
        'configuration_file_hash' => 'setConfigurationFileHash',
        'connect_info' => 'setConnectInfo',
        'contents' => 'setContents',
        'create_at' => 'setCreateAt',
        'current_directory' => 'setCurrentDirectory',
        'data_type' => 'setDataType',
        'description' => 'setDescription',
        'destination_hostname' => 'setDestinationHostname',
        'destination_ip' => 'setDestinationIp',
        'destination_port' => 'setDestinationPort',
        'destination_port_name' => 'setDestinationPortName',
        'details' => 'setDetails',
        'detection_user' => 'setDetectionUser',
        'dip' => 'setDip',
        'dport' => 'setDport',
        'dst_list' => 'setDstList',
        'event_type' => 'setEventType',
        'exe' => 'setExe',
        'exe_hash' => 'setExeHash',
        'external_conns' => 'setExternalConns',
        'failure_reason' => 'setFailureReason',
        'fd_name' => 'setFdName',
        'file_downloadable' => 'setFileDownloadable',
        'file_path' => 'setFilePath',
        'flags' => 'setFlags',
        'hash' => 'setHash',
        'hashes' => 'setHashes',
        'highlight_fields' => 'setHighlightFields',
        'hit_argv_list' => 'setHitArgvList',
        'hit_data' => 'setHitData',
        'home_directory' => 'setHomeDirectory',
        'image' => 'setImage',
        'image_loaded' => 'setImageLoaded',
        'interrupt_number' => 'setInterruptNumber',
        'ioc_detail' => 'setIocDetail',
        'ioc_meta' => 'setIocMeta',
        'ioc_severity' => 'setIocSeverity',
        'ioc_source' => 'setIocSource',
        'ip_address' => 'setIpAddress',
        'ko_file' => 'setKoFile',
        'ld_preload' => 'setLdPreload',
        'logon_type' => 'setLogonType',
        'md5_hash' => 'setMd5Hash',
        'mod_info' => 'setModInfo',
        'modify_at' => 'setModifyAt',
        'module_name' => 'setModuleName',
        'name' => 'setName',
        'new_name' => 'setNewName',
        'new_thread_id' => 'setNewThreadId',
        'nspid' => 'setNspid',
        'old_name' => 'setOldName',
        'old_uid' => 'setOldUid',
        'old_username' => 'setOldUsername',
        'original_file_name' => 'setOriginalFileName',
        'parent_command_line' => 'setParentCommandLine',
        'parent_image' => 'setParentImage',
        'path' => 'setPath',
        'pgid' => 'setPgid',
        'pgid_argv' => 'setPgidArgv',
        'pid' => 'setPid',
        'pid_set' => 'setPidSet',
        'pid_tree' => 'setPidTree',
        'ppid' => 'setPpid',
        'ppid_argv' => 'setPpidArgv',
        'privilege_list' => 'setPrivilegeList',
        'probe_hook' => 'setProbeHook',
        'process_guid' => 'setProcessGuid',
        'process_id' => 'setProcessId',
        'process_name' => 'setProcessName',
        'protocol' => 'setProtocol',
        'ptrace_request' => 'setPtraceRequest',
        'query' => 'setQuery',
        'query_name' => 'setQueryName',
        'query_results' => 'setQueryResults',
        'query_status' => 'setQueryStatus',
        'run_path' => 'setRunPath',
        'sam_account_name' => 'setSamAccountName',
        'service_account' => 'setServiceAccount',
        'service_file_name' => 'setServiceFileName',
        'service_name' => 'setServiceName',
        'service_start_type' => 'setServiceStartType',
        'service_type' => 'setServiceType',
        'severity_name' => 'setSeverityName',
        'sid' => 'setSid',
        'signature' => 'setSignature',
        'signature_status' => 'setSignatureStatus',
        'sip' => 'setSip',
        'socket_argv' => 'setSocketArgv',
        'socket_pid' => 'setSocketPid',
        'source_ip' => 'setSourceIp',
        'source_image' => 'setSourceImage',
        'source_name' => 'setSourceName',
        'source_port' => 'setSourcePort',
        'source_process_guid' => 'setSourceProcessGuid',
        'source_user' => 'setSourceUser',
        'sport' => 'setSport',
        'src_list' => 'setSrcList',
        'ssh' => 'setSsh',
        'ssh_info' => 'setSshInfo',
        'stack_trace_format' => 'setStackTraceFormat',
        'stack_trace_hash' => 'setStackTraceHash',
        'start_function' => 'setStartFunction',
        'start_module' => 'setStartModule',
        'static_file' => 'setStaticFile',
        'stdin' => 'setStdin',
        'stdout' => 'setStdout',
        'subject_user_name' => 'setSubjectUserName',
        'symbol_hooked' => 'setSymbolHooked',
        'symbol_so' => 'setSymbolSo',
        'syscall_number' => 'setSyscallNumber',
        'target_argv' => 'setTargetArgv',
        'target_domain_name' => 'setTargetDomainName',
        'target_filename' => 'setTargetFilename',
        'target_object' => 'setTargetObject',
        'target_pid' => 'setTargetPid',
        'target_user_name' => 'setTargetUserName',
        'task_content' => 'setTaskContent',
        'task_name' => 'setTaskName',
        'threat_name' => 'setThreatName',
        'timestamp' => 'setTimestamp',
        'types' => 'setTypes',
        'uid' => 'setUid',
        'user' => 'setUser',
        'user_principal_name' => 'setUserPrincipalName',
        'username' => 'setUsername',
        'virus_hit_data_list' => 'setVirusHitDataList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_expires' => 'getAccountExpires',
        'additional_actions_string' => 'getAdditionalActionsString',
        'args_array' => 'getArgsArray',
        'argv' => 'getArgv',
        'bruteforce_sip' => 'getBruteforceSip',
        'category_name' => 'getCategoryName',
        'class' => 'getClass',
        'cmd' => 'getCmd',
        'comm' => 'getComm',
        'command_line' => 'getCommandLine',
        'configuration' => 'getConfiguration',
        'configuration_file_hash' => 'getConfigurationFileHash',
        'connect_info' => 'getConnectInfo',
        'contents' => 'getContents',
        'create_at' => 'getCreateAt',
        'current_directory' => 'getCurrentDirectory',
        'data_type' => 'getDataType',
        'description' => 'getDescription',
        'destination_hostname' => 'getDestinationHostname',
        'destination_ip' => 'getDestinationIp',
        'destination_port' => 'getDestinationPort',
        'destination_port_name' => 'getDestinationPortName',
        'details' => 'getDetails',
        'detection_user' => 'getDetectionUser',
        'dip' => 'getDip',
        'dport' => 'getDport',
        'dst_list' => 'getDstList',
        'event_type' => 'getEventType',
        'exe' => 'getExe',
        'exe_hash' => 'getExeHash',
        'external_conns' => 'getExternalConns',
        'failure_reason' => 'getFailureReason',
        'fd_name' => 'getFdName',
        'file_downloadable' => 'getFileDownloadable',
        'file_path' => 'getFilePath',
        'flags' => 'getFlags',
        'hash' => 'getHash',
        'hashes' => 'getHashes',
        'highlight_fields' => 'getHighlightFields',
        'hit_argv_list' => 'getHitArgvList',
        'hit_data' => 'getHitData',
        'home_directory' => 'getHomeDirectory',
        'image' => 'getImage',
        'image_loaded' => 'getImageLoaded',
        'interrupt_number' => 'getInterruptNumber',
        'ioc_detail' => 'getIocDetail',
        'ioc_meta' => 'getIocMeta',
        'ioc_severity' => 'getIocSeverity',
        'ioc_source' => 'getIocSource',
        'ip_address' => 'getIpAddress',
        'ko_file' => 'getKoFile',
        'ld_preload' => 'getLdPreload',
        'logon_type' => 'getLogonType',
        'md5_hash' => 'getMd5Hash',
        'mod_info' => 'getModInfo',
        'modify_at' => 'getModifyAt',
        'module_name' => 'getModuleName',
        'name' => 'getName',
        'new_name' => 'getNewName',
        'new_thread_id' => 'getNewThreadId',
        'nspid' => 'getNspid',
        'old_name' => 'getOldName',
        'old_uid' => 'getOldUid',
        'old_username' => 'getOldUsername',
        'original_file_name' => 'getOriginalFileName',
        'parent_command_line' => 'getParentCommandLine',
        'parent_image' => 'getParentImage',
        'path' => 'getPath',
        'pgid' => 'getPgid',
        'pgid_argv' => 'getPgidArgv',
        'pid' => 'getPid',
        'pid_set' => 'getPidSet',
        'pid_tree' => 'getPidTree',
        'ppid' => 'getPpid',
        'ppid_argv' => 'getPpidArgv',
        'privilege_list' => 'getPrivilegeList',
        'probe_hook' => 'getProbeHook',
        'process_guid' => 'getProcessGuid',
        'process_id' => 'getProcessId',
        'process_name' => 'getProcessName',
        'protocol' => 'getProtocol',
        'ptrace_request' => 'getPtraceRequest',
        'query' => 'getQuery',
        'query_name' => 'getQueryName',
        'query_results' => 'getQueryResults',
        'query_status' => 'getQueryStatus',
        'run_path' => 'getRunPath',
        'sam_account_name' => 'getSamAccountName',
        'service_account' => 'getServiceAccount',
        'service_file_name' => 'getServiceFileName',
        'service_name' => 'getServiceName',
        'service_start_type' => 'getServiceStartType',
        'service_type' => 'getServiceType',
        'severity_name' => 'getSeverityName',
        'sid' => 'getSid',
        'signature' => 'getSignature',
        'signature_status' => 'getSignatureStatus',
        'sip' => 'getSip',
        'socket_argv' => 'getSocketArgv',
        'socket_pid' => 'getSocketPid',
        'source_ip' => 'getSourceIp',
        'source_image' => 'getSourceImage',
        'source_name' => 'getSourceName',
        'source_port' => 'getSourcePort',
        'source_process_guid' => 'getSourceProcessGuid',
        'source_user' => 'getSourceUser',
        'sport' => 'getSport',
        'src_list' => 'getSrcList',
        'ssh' => 'getSsh',
        'ssh_info' => 'getSshInfo',
        'stack_trace_format' => 'getStackTraceFormat',
        'stack_trace_hash' => 'getStackTraceHash',
        'start_function' => 'getStartFunction',
        'start_module' => 'getStartModule',
        'static_file' => 'getStaticFile',
        'stdin' => 'getStdin',
        'stdout' => 'getStdout',
        'subject_user_name' => 'getSubjectUserName',
        'symbol_hooked' => 'getSymbolHooked',
        'symbol_so' => 'getSymbolSo',
        'syscall_number' => 'getSyscallNumber',
        'target_argv' => 'getTargetArgv',
        'target_domain_name' => 'getTargetDomainName',
        'target_filename' => 'getTargetFilename',
        'target_object' => 'getTargetObject',
        'target_pid' => 'getTargetPid',
        'target_user_name' => 'getTargetUserName',
        'task_content' => 'getTaskContent',
        'task_name' => 'getTaskName',
        'threat_name' => 'getThreatName',
        'timestamp' => 'getTimestamp',
        'types' => 'getTypes',
        'uid' => 'getUid',
        'user' => 'getUser',
        'user_principal_name' => 'getUserPrincipalName',
        'username' => 'getUsername',
        'virus_hit_data_list' => 'getVirusHitDataList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_expires'] = isset($data['account_expires']) ? $data['account_expires'] : null;
        $this->container['additional_actions_string'] = isset($data['additional_actions_string']) ? $data['additional_actions_string'] : null;
        $this->container['args_array'] = isset($data['args_array']) ? $data['args_array'] : null;
        $this->container['argv'] = isset($data['argv']) ? $data['argv'] : null;
        $this->container['bruteforce_sip'] = isset($data['bruteforce_sip']) ? $data['bruteforce_sip'] : null;
        $this->container['category_name'] = isset($data['category_name']) ? $data['category_name'] : null;
        $this->container['class'] = isset($data['class']) ? $data['class'] : null;
        $this->container['cmd'] = isset($data['cmd']) ? $data['cmd'] : null;
        $this->container['comm'] = isset($data['comm']) ? $data['comm'] : null;
        $this->container['command_line'] = isset($data['command_line']) ? $data['command_line'] : null;
        $this->container['configuration'] = isset($data['configuration']) ? $data['configuration'] : null;
        $this->container['configuration_file_hash'] = isset($data['configuration_file_hash']) ? $data['configuration_file_hash'] : null;
        $this->container['connect_info'] = isset($data['connect_info']) ? $data['connect_info'] : null;
        $this->container['contents'] = isset($data['contents']) ? $data['contents'] : null;
        $this->container['create_at'] = isset($data['create_at']) ? $data['create_at'] : null;
        $this->container['current_directory'] = isset($data['current_directory']) ? $data['current_directory'] : null;
        $this->container['data_type'] = isset($data['data_type']) ? $data['data_type'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['destination_hostname'] = isset($data['destination_hostname']) ? $data['destination_hostname'] : null;
        $this->container['destination_ip'] = isset($data['destination_ip']) ? $data['destination_ip'] : null;
        $this->container['destination_port'] = isset($data['destination_port']) ? $data['destination_port'] : null;
        $this->container['destination_port_name'] = isset($data['destination_port_name']) ? $data['destination_port_name'] : null;
        $this->container['details'] = isset($data['details']) ? $data['details'] : null;
        $this->container['detection_user'] = isset($data['detection_user']) ? $data['detection_user'] : null;
        $this->container['dip'] = isset($data['dip']) ? $data['dip'] : null;
        $this->container['dport'] = isset($data['dport']) ? $data['dport'] : null;
        $this->container['dst_list'] = isset($data['dst_list']) ? $data['dst_list'] : null;
        $this->container['event_type'] = isset($data['event_type']) ? $data['event_type'] : null;
        $this->container['exe'] = isset($data['exe']) ? $data['exe'] : null;
        $this->container['exe_hash'] = isset($data['exe_hash']) ? $data['exe_hash'] : null;
        $this->container['external_conns'] = isset($data['external_conns']) ? $data['external_conns'] : null;
        $this->container['failure_reason'] = isset($data['failure_reason']) ? $data['failure_reason'] : null;
        $this->container['fd_name'] = isset($data['fd_name']) ? $data['fd_name'] : null;
        $this->container['file_downloadable'] = isset($data['file_downloadable']) ? $data['file_downloadable'] : null;
        $this->container['file_path'] = isset($data['file_path']) ? $data['file_path'] : null;
        $this->container['flags'] = isset($data['flags']) ? $data['flags'] : null;
        $this->container['hash'] = isset($data['hash']) ? $data['hash'] : null;
        $this->container['hashes'] = isset($data['hashes']) ? $data['hashes'] : null;
        $this->container['highlight_fields'] = isset($data['highlight_fields']) ? $data['highlight_fields'] : null;
        $this->container['hit_argv_list'] = isset($data['hit_argv_list']) ? $data['hit_argv_list'] : null;
        $this->container['hit_data'] = isset($data['hit_data']) ? $data['hit_data'] : null;
        $this->container['home_directory'] = isset($data['home_directory']) ? $data['home_directory'] : null;
        $this->container['image'] = isset($data['image']) ? $data['image'] : null;
        $this->container['image_loaded'] = isset($data['image_loaded']) ? $data['image_loaded'] : null;
        $this->container['interrupt_number'] = isset($data['interrupt_number']) ? $data['interrupt_number'] : null;
        $this->container['ioc_detail'] = isset($data['ioc_detail']) ? $data['ioc_detail'] : null;
        $this->container['ioc_meta'] = isset($data['ioc_meta']) ? $data['ioc_meta'] : null;
        $this->container['ioc_severity'] = isset($data['ioc_severity']) ? $data['ioc_severity'] : null;
        $this->container['ioc_source'] = isset($data['ioc_source']) ? $data['ioc_source'] : null;
        $this->container['ip_address'] = isset($data['ip_address']) ? $data['ip_address'] : null;
        $this->container['ko_file'] = isset($data['ko_file']) ? $data['ko_file'] : null;
        $this->container['ld_preload'] = isset($data['ld_preload']) ? $data['ld_preload'] : null;
        $this->container['logon_type'] = isset($data['logon_type']) ? $data['logon_type'] : null;
        $this->container['md5_hash'] = isset($data['md5_hash']) ? $data['md5_hash'] : null;
        $this->container['mod_info'] = isset($data['mod_info']) ? $data['mod_info'] : null;
        $this->container['modify_at'] = isset($data['modify_at']) ? $data['modify_at'] : null;
        $this->container['module_name'] = isset($data['module_name']) ? $data['module_name'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['new_name'] = isset($data['new_name']) ? $data['new_name'] : null;
        $this->container['new_thread_id'] = isset($data['new_thread_id']) ? $data['new_thread_id'] : null;
        $this->container['nspid'] = isset($data['nspid']) ? $data['nspid'] : null;
        $this->container['old_name'] = isset($data['old_name']) ? $data['old_name'] : null;
        $this->container['old_uid'] = isset($data['old_uid']) ? $data['old_uid'] : null;
        $this->container['old_username'] = isset($data['old_username']) ? $data['old_username'] : null;
        $this->container['original_file_name'] = isset($data['original_file_name']) ? $data['original_file_name'] : null;
        $this->container['parent_command_line'] = isset($data['parent_command_line']) ? $data['parent_command_line'] : null;
        $this->container['parent_image'] = isset($data['parent_image']) ? $data['parent_image'] : null;
        $this->container['path'] = isset($data['path']) ? $data['path'] : null;
        $this->container['pgid'] = isset($data['pgid']) ? $data['pgid'] : null;
        $this->container['pgid_argv'] = isset($data['pgid_argv']) ? $data['pgid_argv'] : null;
        $this->container['pid'] = isset($data['pid']) ? $data['pid'] : null;
        $this->container['pid_set'] = isset($data['pid_set']) ? $data['pid_set'] : null;
        $this->container['pid_tree'] = isset($data['pid_tree']) ? $data['pid_tree'] : null;
        $this->container['ppid'] = isset($data['ppid']) ? $data['ppid'] : null;
        $this->container['ppid_argv'] = isset($data['ppid_argv']) ? $data['ppid_argv'] : null;
        $this->container['privilege_list'] = isset($data['privilege_list']) ? $data['privilege_list'] : null;
        $this->container['probe_hook'] = isset($data['probe_hook']) ? $data['probe_hook'] : null;
        $this->container['process_guid'] = isset($data['process_guid']) ? $data['process_guid'] : null;
        $this->container['process_id'] = isset($data['process_id']) ? $data['process_id'] : null;
        $this->container['process_name'] = isset($data['process_name']) ? $data['process_name'] : null;
        $this->container['protocol'] = isset($data['protocol']) ? $data['protocol'] : null;
        $this->container['ptrace_request'] = isset($data['ptrace_request']) ? $data['ptrace_request'] : null;
        $this->container['query'] = isset($data['query']) ? $data['query'] : null;
        $this->container['query_name'] = isset($data['query_name']) ? $data['query_name'] : null;
        $this->container['query_results'] = isset($data['query_results']) ? $data['query_results'] : null;
        $this->container['query_status'] = isset($data['query_status']) ? $data['query_status'] : null;
        $this->container['run_path'] = isset($data['run_path']) ? $data['run_path'] : null;
        $this->container['sam_account_name'] = isset($data['sam_account_name']) ? $data['sam_account_name'] : null;
        $this->container['service_account'] = isset($data['service_account']) ? $data['service_account'] : null;
        $this->container['service_file_name'] = isset($data['service_file_name']) ? $data['service_file_name'] : null;
        $this->container['service_name'] = isset($data['service_name']) ? $data['service_name'] : null;
        $this->container['service_start_type'] = isset($data['service_start_type']) ? $data['service_start_type'] : null;
        $this->container['service_type'] = isset($data['service_type']) ? $data['service_type'] : null;
        $this->container['severity_name'] = isset($data['severity_name']) ? $data['severity_name'] : null;
        $this->container['sid'] = isset($data['sid']) ? $data['sid'] : null;
        $this->container['signature'] = isset($data['signature']) ? $data['signature'] : null;
        $this->container['signature_status'] = isset($data['signature_status']) ? $data['signature_status'] : null;
        $this->container['sip'] = isset($data['sip']) ? $data['sip'] : null;
        $this->container['socket_argv'] = isset($data['socket_argv']) ? $data['socket_argv'] : null;
        $this->container['socket_pid'] = isset($data['socket_pid']) ? $data['socket_pid'] : null;
        $this->container['source_ip'] = isset($data['source_ip']) ? $data['source_ip'] : null;
        $this->container['source_image'] = isset($data['source_image']) ? $data['source_image'] : null;
        $this->container['source_name'] = isset($data['source_name']) ? $data['source_name'] : null;
        $this->container['source_port'] = isset($data['source_port']) ? $data['source_port'] : null;
        $this->container['source_process_guid'] = isset($data['source_process_guid']) ? $data['source_process_guid'] : null;
        $this->container['source_user'] = isset($data['source_user']) ? $data['source_user'] : null;
        $this->container['sport'] = isset($data['sport']) ? $data['sport'] : null;
        $this->container['src_list'] = isset($data['src_list']) ? $data['src_list'] : null;
        $this->container['ssh'] = isset($data['ssh']) ? $data['ssh'] : null;
        $this->container['ssh_info'] = isset($data['ssh_info']) ? $data['ssh_info'] : null;
        $this->container['stack_trace_format'] = isset($data['stack_trace_format']) ? $data['stack_trace_format'] : null;
        $this->container['stack_trace_hash'] = isset($data['stack_trace_hash']) ? $data['stack_trace_hash'] : null;
        $this->container['start_function'] = isset($data['start_function']) ? $data['start_function'] : null;
        $this->container['start_module'] = isset($data['start_module']) ? $data['start_module'] : null;
        $this->container['static_file'] = isset($data['static_file']) ? $data['static_file'] : null;
        $this->container['stdin'] = isset($data['stdin']) ? $data['stdin'] : null;
        $this->container['stdout'] = isset($data['stdout']) ? $data['stdout'] : null;
        $this->container['subject_user_name'] = isset($data['subject_user_name']) ? $data['subject_user_name'] : null;
        $this->container['symbol_hooked'] = isset($data['symbol_hooked']) ? $data['symbol_hooked'] : null;
        $this->container['symbol_so'] = isset($data['symbol_so']) ? $data['symbol_so'] : null;
        $this->container['syscall_number'] = isset($data['syscall_number']) ? $data['syscall_number'] : null;
        $this->container['target_argv'] = isset($data['target_argv']) ? $data['target_argv'] : null;
        $this->container['target_domain_name'] = isset($data['target_domain_name']) ? $data['target_domain_name'] : null;
        $this->container['target_filename'] = isset($data['target_filename']) ? $data['target_filename'] : null;
        $this->container['target_object'] = isset($data['target_object']) ? $data['target_object'] : null;
        $this->container['target_pid'] = isset($data['target_pid']) ? $data['target_pid'] : null;
        $this->container['target_user_name'] = isset($data['target_user_name']) ? $data['target_user_name'] : null;
        $this->container['task_content'] = isset($data['task_content']) ? $data['task_content'] : null;
        $this->container['task_name'] = isset($data['task_name']) ? $data['task_name'] : null;
        $this->container['threat_name'] = isset($data['threat_name']) ? $data['threat_name'] : null;
        $this->container['timestamp'] = isset($data['timestamp']) ? $data['timestamp'] : null;
        $this->container['types'] = isset($data['types']) ? $data['types'] : null;
        $this->container['uid'] = isset($data['uid']) ? $data['uid'] : null;
        $this->container['user'] = isset($data['user']) ? $data['user'] : null;
        $this->container['user_principal_name'] = isset($data['user_principal_name']) ? $data['user_principal_name'] : null;
        $this->container['username'] = isset($data['username']) ? $data['username'] : null;
        $this->container['virus_hit_data_list'] = isset($data['virus_hit_data_list']) ? $data['virus_hit_data_list'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_expires
     *
     * @return string
     */
    public function getAccountExpires()
    {
        return $this->container['account_expires'];
    }

    /**
     * Sets account_expires
     *
     * @param string $account_expires account_expires
     *
     * @return $this
     */
    public function setAccountExpires($account_expires)
    {
        $this->container['account_expires'] = $account_expires;

        return $this;
    }

    /**
     * Gets additional_actions_string
     *
     * @return string
     */
    public function getAdditionalActionsString()
    {
        return $this->container['additional_actions_string'];
    }

    /**
     * Sets additional_actions_string
     *
     * @param string $additional_actions_string additional_actions_string
     *
     * @return $this
     */
    public function setAdditionalActionsString($additional_actions_string)
    {
        $this->container['additional_actions_string'] = $additional_actions_string;

        return $this;
    }

    /**
     * Gets args_array
     *
     * @return string[]
     */
    public function getArgsArray()
    {
        return $this->container['args_array'];
    }

    /**
     * Sets args_array
     *
     * @param string[] $args_array args_array
     *
     * @return $this
     */
    public function setArgsArray($args_array)
    {
        $this->container['args_array'] = $args_array;

        return $this;
    }

    /**
     * Gets argv
     *
     * @return string
     */
    public function getArgv()
    {
        return $this->container['argv'];
    }

    /**
     * Sets argv
     *
     * @param string $argv argv
     *
     * @return $this
     */
    public function setArgv($argv)
    {
        $this->container['argv'] = $argv;

        return $this;
    }

    /**
     * Gets bruteforce_sip
     *
     * @return string
     */
    public function getBruteforceSip()
    {
        return $this->container['bruteforce_sip'];
    }

    /**
     * Sets bruteforce_sip
     *
     * @param string $bruteforce_sip bruteforce_sip
     *
     * @return $this
     */
    public function setBruteforceSip($bruteforce_sip)
    {
        $this->container['bruteforce_sip'] = $bruteforce_sip;

        return $this;
    }

    /**
     * Gets category_name
     *
     * @return string
     */
    public function getCategoryName()
    {
        return $this->container['category_name'];
    }

    /**
     * Sets category_name
     *
     * @param string $category_name category_name
     *
     * @return $this
     */
    public function setCategoryName($category_name)
    {
        $this->container['category_name'] = $category_name;

        return $this;
    }

    /**
     * Gets class
     *
     * @return string
     */
    public function getClass()
    {
        return $this->container['class'];
    }

    /**
     * Sets class
     *
     * @param string $class class
     *
     * @return $this
     */
    public function setClass($class)
    {
        $this->container['class'] = $class;

        return $this;
    }

    /**
     * Gets cmd
     *
     * @return string
     */
    public function getCmd()
    {
        return $this->container['cmd'];
    }

    /**
     * Sets cmd
     *
     * @param string $cmd cmd
     *
     * @return $this
     */
    public function setCmd($cmd)
    {
        $this->container['cmd'] = $cmd;

        return $this;
    }

    /**
     * Gets comm
     *
     * @return string
     */
    public function getComm()
    {
        return $this->container['comm'];
    }

    /**
     * Sets comm
     *
     * @param string $comm comm
     *
     * @return $this
     */
    public function setComm($comm)
    {
        $this->container['comm'] = $comm;

        return $this;
    }

    /**
     * Gets command_line
     *
     * @return string
     */
    public function getCommandLine()
    {
        return $this->container['command_line'];
    }

    /**
     * Sets command_line
     *
     * @param string $command_line command_line
     *
     * @return $this
     */
    public function setCommandLine($command_line)
    {
        $this->container['command_line'] = $command_line;

        return $this;
    }

    /**
     * Gets configuration
     *
     * @return string
     */
    public function getConfiguration()
    {
        return $this->container['configuration'];
    }

    /**
     * Sets configuration
     *
     * @param string $configuration configuration
     *
     * @return $this
     */
    public function setConfiguration($configuration)
    {
        $this->container['configuration'] = $configuration;

        return $this;
    }

    /**
     * Gets configuration_file_hash
     *
     * @return string
     */
    public function getConfigurationFileHash()
    {
        return $this->container['configuration_file_hash'];
    }

    /**
     * Sets configuration_file_hash
     *
     * @param string $configuration_file_hash configuration_file_hash
     *
     * @return $this
     */
    public function setConfigurationFileHash($configuration_file_hash)
    {
        $this->container['configuration_file_hash'] = $configuration_file_hash;

        return $this;
    }

    /**
     * Gets connect_info
     *
     * @return string
     */
    public function getConnectInfo()
    {
        return $this->container['connect_info'];
    }

    /**
     * Sets connect_info
     *
     * @param string $connect_info connect_info
     *
     * @return $this
     */
    public function setConnectInfo($connect_info)
    {
        $this->container['connect_info'] = $connect_info;

        return $this;
    }

    /**
     * Gets contents
     *
     * @return string
     */
    public function getContents()
    {
        return $this->container['contents'];
    }

    /**
     * Sets contents
     *
     * @param string $contents contents
     *
     * @return $this
     */
    public function setContents($contents)
    {
        $this->container['contents'] = $contents;

        return $this;
    }

    /**
     * Gets create_at
     *
     * @return string
     */
    public function getCreateAt()
    {
        return $this->container['create_at'];
    }

    /**
     * Sets create_at
     *
     * @param string $create_at create_at
     *
     * @return $this
     */
    public function setCreateAt($create_at)
    {
        $this->container['create_at'] = $create_at;

        return $this;
    }

    /**
     * Gets current_directory
     *
     * @return string
     */
    public function getCurrentDirectory()
    {
        return $this->container['current_directory'];
    }

    /**
     * Sets current_directory
     *
     * @param string $current_directory current_directory
     *
     * @return $this
     */
    public function setCurrentDirectory($current_directory)
    {
        $this->container['current_directory'] = $current_directory;

        return $this;
    }

    /**
     * Gets data_type
     *
     * @return string
     */
    public function getDataType()
    {
        return $this->container['data_type'];
    }

    /**
     * Sets data_type
     *
     * @param string $data_type data_type
     *
     * @return $this
     */
    public function setDataType($data_type)
    {
        $this->container['data_type'] = $data_type;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets destination_hostname
     *
     * @return string
     */
    public function getDestinationHostname()
    {
        return $this->container['destination_hostname'];
    }

    /**
     * Sets destination_hostname
     *
     * @param string $destination_hostname destination_hostname
     *
     * @return $this
     */
    public function setDestinationHostname($destination_hostname)
    {
        $this->container['destination_hostname'] = $destination_hostname;

        return $this;
    }

    /**
     * Gets destination_ip
     *
     * @return string
     */
    public function getDestinationIp()
    {
        return $this->container['destination_ip'];
    }

    /**
     * Sets destination_ip
     *
     * @param string $destination_ip destination_ip
     *
     * @return $this
     */
    public function setDestinationIp($destination_ip)
    {
        $this->container['destination_ip'] = $destination_ip;

        return $this;
    }

    /**
     * Gets destination_port
     *
     * @return string
     */
    public function getDestinationPort()
    {
        return $this->container['destination_port'];
    }

    /**
     * Sets destination_port
     *
     * @param string $destination_port destination_port
     *
     * @return $this
     */
    public function setDestinationPort($destination_port)
    {
        $this->container['destination_port'] = $destination_port;

        return $this;
    }

    /**
     * Gets destination_port_name
     *
     * @return string
     */
    public function getDestinationPortName()
    {
        return $this->container['destination_port_name'];
    }

    /**
     * Sets destination_port_name
     *
     * @param string $destination_port_name destination_port_name
     *
     * @return $this
     */
    public function setDestinationPortName($destination_port_name)
    {
        $this->container['destination_port_name'] = $destination_port_name;

        return $this;
    }

    /**
     * Gets details
     *
     * @return string
     */
    public function getDetails()
    {
        return $this->container['details'];
    }

    /**
     * Sets details
     *
     * @param string $details details
     *
     * @return $this
     */
    public function setDetails($details)
    {
        $this->container['details'] = $details;

        return $this;
    }

    /**
     * Gets detection_user
     *
     * @return string
     */
    public function getDetectionUser()
    {
        return $this->container['detection_user'];
    }

    /**
     * Sets detection_user
     *
     * @param string $detection_user detection_user
     *
     * @return $this
     */
    public function setDetectionUser($detection_user)
    {
        $this->container['detection_user'] = $detection_user;

        return $this;
    }

    /**
     * Gets dip
     *
     * @return string
     */
    public function getDip()
    {
        return $this->container['dip'];
    }

    /**
     * Sets dip
     *
     * @param string $dip dip
     *
     * @return $this
     */
    public function setDip($dip)
    {
        $this->container['dip'] = $dip;

        return $this;
    }

    /**
     * Gets dport
     *
     * @return string
     */
    public function getDport()
    {
        return $this->container['dport'];
    }

    /**
     * Sets dport
     *
     * @param string $dport dport
     *
     * @return $this
     */
    public function setDport($dport)
    {
        $this->container['dport'] = $dport;

        return $this;
    }

    /**
     * Gets dst_list
     *
     * @return string
     */
    public function getDstList()
    {
        return $this->container['dst_list'];
    }

    /**
     * Sets dst_list
     *
     * @param string $dst_list dst_list
     *
     * @return $this
     */
    public function setDstList($dst_list)
    {
        $this->container['dst_list'] = $dst_list;

        return $this;
    }

    /**
     * Gets event_type
     *
     * @return string
     */
    public function getEventType()
    {
        return $this->container['event_type'];
    }

    /**
     * Sets event_type
     *
     * @param string $event_type event_type
     *
     * @return $this
     */
    public function setEventType($event_type)
    {
        $this->container['event_type'] = $event_type;

        return $this;
    }

    /**
     * Gets exe
     *
     * @return string
     */
    public function getExe()
    {
        return $this->container['exe'];
    }

    /**
     * Sets exe
     *
     * @param string $exe exe
     *
     * @return $this
     */
    public function setExe($exe)
    {
        $this->container['exe'] = $exe;

        return $this;
    }

    /**
     * Gets exe_hash
     *
     * @return string
     */
    public function getExeHash()
    {
        return $this->container['exe_hash'];
    }

    /**
     * Sets exe_hash
     *
     * @param string $exe_hash exe_hash
     *
     * @return $this
     */
    public function setExeHash($exe_hash)
    {
        $this->container['exe_hash'] = $exe_hash;

        return $this;
    }

    /**
     * Gets external_conns
     *
     * @return string
     */
    public function getExternalConns()
    {
        return $this->container['external_conns'];
    }

    /**
     * Sets external_conns
     *
     * @param string $external_conns external_conns
     *
     * @return $this
     */
    public function setExternalConns($external_conns)
    {
        $this->container['external_conns'] = $external_conns;

        return $this;
    }

    /**
     * Gets failure_reason
     *
     * @return string
     */
    public function getFailureReason()
    {
        return $this->container['failure_reason'];
    }

    /**
     * Sets failure_reason
     *
     * @param string $failure_reason failure_reason
     *
     * @return $this
     */
    public function setFailureReason($failure_reason)
    {
        $this->container['failure_reason'] = $failure_reason;

        return $this;
    }

    /**
     * Gets fd_name
     *
     * @return string
     */
    public function getFdName()
    {
        return $this->container['fd_name'];
    }

    /**
     * Sets fd_name
     *
     * @param string $fd_name fd_name
     *
     * @return $this
     */
    public function setFdName($fd_name)
    {
        $this->container['fd_name'] = $fd_name;

        return $this;
    }

    /**
     * Gets file_downloadable
     *
     * @return bool
     */
    public function getFileDownloadable()
    {
        return $this->container['file_downloadable'];
    }

    /**
     * Sets file_downloadable
     *
     * @param bool $file_downloadable file_downloadable
     *
     * @return $this
     */
    public function setFileDownloadable($file_downloadable)
    {
        $this->container['file_downloadable'] = $file_downloadable;

        return $this;
    }

    /**
     * Gets file_path
     *
     * @return string
     */
    public function getFilePath()
    {
        return $this->container['file_path'];
    }

    /**
     * Sets file_path
     *
     * @param string $file_path file_path
     *
     * @return $this
     */
    public function setFilePath($file_path)
    {
        $this->container['file_path'] = $file_path;

        return $this;
    }

    /**
     * Gets flags
     *
     * @return string
     */
    public function getFlags()
    {
        return $this->container['flags'];
    }

    /**
     * Sets flags
     *
     * @param string $flags flags
     *
     * @return $this
     */
    public function setFlags($flags)
    {
        $this->container['flags'] = $flags;

        return $this;
    }

    /**
     * Gets hash
     *
     * @return string
     */
    public function getHash()
    {
        return $this->container['hash'];
    }

    /**
     * Sets hash
     *
     * @param string $hash hash
     *
     * @return $this
     */
    public function setHash($hash)
    {
        $this->container['hash'] = $hash;

        return $this;
    }

    /**
     * Gets hashes
     *
     * @return string
     */
    public function getHashes()
    {
        return $this->container['hashes'];
    }

    /**
     * Sets hashes
     *
     * @param string $hashes hashes
     *
     * @return $this
     */
    public function setHashes($hashes)
    {
        $this->container['hashes'] = $hashes;

        return $this;
    }

    /**
     * Gets highlight_fields
     *
     * @return string
     */
    public function getHighlightFields()
    {
        return $this->container['highlight_fields'];
    }

    /**
     * Sets highlight_fields
     *
     * @param string $highlight_fields highlight_fields
     *
     * @return $this
     */
    public function setHighlightFields($highlight_fields)
    {
        $this->container['highlight_fields'] = $highlight_fields;

        return $this;
    }

    /**
     * Gets hit_argv_list
     *
     * @return string[]
     */
    public function getHitArgvList()
    {
        return $this->container['hit_argv_list'];
    }

    /**
     * Sets hit_argv_list
     *
     * @param string[] $hit_argv_list hit_argv_list
     *
     * @return $this
     */
    public function setHitArgvList($hit_argv_list)
    {
        $this->container['hit_argv_list'] = $hit_argv_list;

        return $this;
    }

    /**
     * Gets hit_data
     *
     * @return string
     */
    public function getHitData()
    {
        return $this->container['hit_data'];
    }

    /**
     * Sets hit_data
     *
     * @param string $hit_data hit_data
     *
     * @return $this
     */
    public function setHitData($hit_data)
    {
        $this->container['hit_data'] = $hit_data;

        return $this;
    }

    /**
     * Gets home_directory
     *
     * @return string
     */
    public function getHomeDirectory()
    {
        return $this->container['home_directory'];
    }

    /**
     * Sets home_directory
     *
     * @param string $home_directory home_directory
     *
     * @return $this
     */
    public function setHomeDirectory($home_directory)
    {
        $this->container['home_directory'] = $home_directory;

        return $this;
    }

    /**
     * Gets image
     *
     * @return string
     */
    public function getImage()
    {
        return $this->container['image'];
    }

    /**
     * Sets image
     *
     * @param string $image image
     *
     * @return $this
     */
    public function setImage($image)
    {
        $this->container['image'] = $image;

        return $this;
    }

    /**
     * Gets image_loaded
     *
     * @return string
     */
    public function getImageLoaded()
    {
        return $this->container['image_loaded'];
    }

    /**
     * Sets image_loaded
     *
     * @param string $image_loaded image_loaded
     *
     * @return $this
     */
    public function setImageLoaded($image_loaded)
    {
        $this->container['image_loaded'] = $image_loaded;

        return $this;
    }

    /**
     * Gets interrupt_number
     *
     * @return string
     */
    public function getInterruptNumber()
    {
        return $this->container['interrupt_number'];
    }

    /**
     * Sets interrupt_number
     *
     * @param string $interrupt_number interrupt_number
     *
     * @return $this
     */
    public function setInterruptNumber($interrupt_number)
    {
        $this->container['interrupt_number'] = $interrupt_number;

        return $this;
    }

    /**
     * Gets ioc_detail
     *
     * @return string
     */
    public function getIocDetail()
    {
        return $this->container['ioc_detail'];
    }

    /**
     * Sets ioc_detail
     *
     * @param string $ioc_detail ioc_detail
     *
     * @return $this
     */
    public function setIocDetail($ioc_detail)
    {
        $this->container['ioc_detail'] = $ioc_detail;

        return $this;
    }

    /**
     * Gets ioc_meta
     *
     * @return string
     */
    public function getIocMeta()
    {
        return $this->container['ioc_meta'];
    }

    /**
     * Sets ioc_meta
     *
     * @param string $ioc_meta ioc_meta
     *
     * @return $this
     */
    public function setIocMeta($ioc_meta)
    {
        $this->container['ioc_meta'] = $ioc_meta;

        return $this;
    }

    /**
     * Gets ioc_severity
     *
     * @return string
     */
    public function getIocSeverity()
    {
        return $this->container['ioc_severity'];
    }

    /**
     * Sets ioc_severity
     *
     * @param string $ioc_severity ioc_severity
     *
     * @return $this
     */
    public function setIocSeverity($ioc_severity)
    {
        $this->container['ioc_severity'] = $ioc_severity;

        return $this;
    }

    /**
     * Gets ioc_source
     *
     * @return string
     */
    public function getIocSource()
    {
        return $this->container['ioc_source'];
    }

    /**
     * Sets ioc_source
     *
     * @param string $ioc_source ioc_source
     *
     * @return $this
     */
    public function setIocSource($ioc_source)
    {
        $this->container['ioc_source'] = $ioc_source;

        return $this;
    }

    /**
     * Gets ip_address
     *
     * @return string
     */
    public function getIpAddress()
    {
        return $this->container['ip_address'];
    }

    /**
     * Sets ip_address
     *
     * @param string $ip_address ip_address
     *
     * @return $this
     */
    public function setIpAddress($ip_address)
    {
        $this->container['ip_address'] = $ip_address;

        return $this;
    }

    /**
     * Gets ko_file
     *
     * @return string
     */
    public function getKoFile()
    {
        return $this->container['ko_file'];
    }

    /**
     * Sets ko_file
     *
     * @param string $ko_file ko_file
     *
     * @return $this
     */
    public function setKoFile($ko_file)
    {
        $this->container['ko_file'] = $ko_file;

        return $this;
    }

    /**
     * Gets ld_preload
     *
     * @return string
     */
    public function getLdPreload()
    {
        return $this->container['ld_preload'];
    }

    /**
     * Sets ld_preload
     *
     * @param string $ld_preload ld_preload
     *
     * @return $this
     */
    public function setLdPreload($ld_preload)
    {
        $this->container['ld_preload'] = $ld_preload;

        return $this;
    }

    /**
     * Gets logon_type
     *
     * @return string
     */
    public function getLogonType()
    {
        return $this->container['logon_type'];
    }

    /**
     * Sets logon_type
     *
     * @param string $logon_type logon_type
     *
     * @return $this
     */
    public function setLogonType($logon_type)
    {
        $this->container['logon_type'] = $logon_type;

        return $this;
    }

    /**
     * Gets md5_hash
     *
     * @return string
     */
    public function getMd5Hash()
    {
        return $this->container['md5_hash'];
    }

    /**
     * Sets md5_hash
     *
     * @param string $md5_hash md5_hash
     *
     * @return $this
     */
    public function setMd5Hash($md5_hash)
    {
        $this->container['md5_hash'] = $md5_hash;

        return $this;
    }

    /**
     * Gets mod_info
     *
     * @return string
     */
    public function getModInfo()
    {
        return $this->container['mod_info'];
    }

    /**
     * Sets mod_info
     *
     * @param string $mod_info mod_info
     *
     * @return $this
     */
    public function setModInfo($mod_info)
    {
        $this->container['mod_info'] = $mod_info;

        return $this;
    }

    /**
     * Gets modify_at
     *
     * @return string
     */
    public function getModifyAt()
    {
        return $this->container['modify_at'];
    }

    /**
     * Sets modify_at
     *
     * @param string $modify_at modify_at
     *
     * @return $this
     */
    public function setModifyAt($modify_at)
    {
        $this->container['modify_at'] = $modify_at;

        return $this;
    }

    /**
     * Gets module_name
     *
     * @return string
     */
    public function getModuleName()
    {
        return $this->container['module_name'];
    }

    /**
     * Sets module_name
     *
     * @param string $module_name module_name
     *
     * @return $this
     */
    public function setModuleName($module_name)
    {
        $this->container['module_name'] = $module_name;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets new_name
     *
     * @return string
     */
    public function getNewName()
    {
        return $this->container['new_name'];
    }

    /**
     * Sets new_name
     *
     * @param string $new_name new_name
     *
     * @return $this
     */
    public function setNewName($new_name)
    {
        $this->container['new_name'] = $new_name;

        return $this;
    }

    /**
     * Gets new_thread_id
     *
     * @return string
     */
    public function getNewThreadId()
    {
        return $this->container['new_thread_id'];
    }

    /**
     * Sets new_thread_id
     *
     * @param string $new_thread_id new_thread_id
     *
     * @return $this
     */
    public function setNewThreadId($new_thread_id)
    {
        $this->container['new_thread_id'] = $new_thread_id;

        return $this;
    }

    /**
     * Gets nspid
     *
     * @return string
     */
    public function getNspid()
    {
        return $this->container['nspid'];
    }

    /**
     * Sets nspid
     *
     * @param string $nspid nspid
     *
     * @return $this
     */
    public function setNspid($nspid)
    {
        $this->container['nspid'] = $nspid;

        return $this;
    }

    /**
     * Gets old_name
     *
     * @return string
     */
    public function getOldName()
    {
        return $this->container['old_name'];
    }

    /**
     * Sets old_name
     *
     * @param string $old_name old_name
     *
     * @return $this
     */
    public function setOldName($old_name)
    {
        $this->container['old_name'] = $old_name;

        return $this;
    }

    /**
     * Gets old_uid
     *
     * @return string
     */
    public function getOldUid()
    {
        return $this->container['old_uid'];
    }

    /**
     * Sets old_uid
     *
     * @param string $old_uid old_uid
     *
     * @return $this
     */
    public function setOldUid($old_uid)
    {
        $this->container['old_uid'] = $old_uid;

        return $this;
    }

    /**
     * Gets old_username
     *
     * @return string
     */
    public function getOldUsername()
    {
        return $this->container['old_username'];
    }

    /**
     * Sets old_username
     *
     * @param string $old_username old_username
     *
     * @return $this
     */
    public function setOldUsername($old_username)
    {
        $this->container['old_username'] = $old_username;

        return $this;
    }

    /**
     * Gets original_file_name
     *
     * @return string
     */
    public function getOriginalFileName()
    {
        return $this->container['original_file_name'];
    }

    /**
     * Sets original_file_name
     *
     * @param string $original_file_name original_file_name
     *
     * @return $this
     */
    public function setOriginalFileName($original_file_name)
    {
        $this->container['original_file_name'] = $original_file_name;

        return $this;
    }

    /**
     * Gets parent_command_line
     *
     * @return string
     */
    public function getParentCommandLine()
    {
        return $this->container['parent_command_line'];
    }

    /**
     * Sets parent_command_line
     *
     * @param string $parent_command_line parent_command_line
     *
     * @return $this
     */
    public function setParentCommandLine($parent_command_line)
    {
        $this->container['parent_command_line'] = $parent_command_line;

        return $this;
    }

    /**
     * Gets parent_image
     *
     * @return string
     */
    public function getParentImage()
    {
        return $this->container['parent_image'];
    }

    /**
     * Sets parent_image
     *
     * @param string $parent_image parent_image
     *
     * @return $this
     */
    public function setParentImage($parent_image)
    {
        $this->container['parent_image'] = $parent_image;

        return $this;
    }

    /**
     * Gets path
     *
     * @return string
     */
    public function getPath()
    {
        return $this->container['path'];
    }

    /**
     * Sets path
     *
     * @param string $path path
     *
     * @return $this
     */
    public function setPath($path)
    {
        $this->container['path'] = $path;

        return $this;
    }

    /**
     * Gets pgid
     *
     * @return string
     */
    public function getPgid()
    {
        return $this->container['pgid'];
    }

    /**
     * Sets pgid
     *
     * @param string $pgid pgid
     *
     * @return $this
     */
    public function setPgid($pgid)
    {
        $this->container['pgid'] = $pgid;

        return $this;
    }

    /**
     * Gets pgid_argv
     *
     * @return string
     */
    public function getPgidArgv()
    {
        return $this->container['pgid_argv'];
    }

    /**
     * Sets pgid_argv
     *
     * @param string $pgid_argv pgid_argv
     *
     * @return $this
     */
    public function setPgidArgv($pgid_argv)
    {
        $this->container['pgid_argv'] = $pgid_argv;

        return $this;
    }

    /**
     * Gets pid
     *
     * @return string
     */
    public function getPid()
    {
        return $this->container['pid'];
    }

    /**
     * Sets pid
     *
     * @param string $pid pid
     *
     * @return $this
     */
    public function setPid($pid)
    {
        $this->container['pid'] = $pid;

        return $this;
    }

    /**
     * Gets pid_set
     *
     * @return string
     */
    public function getPidSet()
    {
        return $this->container['pid_set'];
    }

    /**
     * Sets pid_set
     *
     * @param string $pid_set pid_set
     *
     * @return $this
     */
    public function setPidSet($pid_set)
    {
        $this->container['pid_set'] = $pid_set;

        return $this;
    }

    /**
     * Gets pid_tree
     *
     * @return string
     */
    public function getPidTree()
    {
        return $this->container['pid_tree'];
    }

    /**
     * Sets pid_tree
     *
     * @param string $pid_tree pid_tree
     *
     * @return $this
     */
    public function setPidTree($pid_tree)
    {
        $this->container['pid_tree'] = $pid_tree;

        return $this;
    }

    /**
     * Gets ppid
     *
     * @return string
     */
    public function getPpid()
    {
        return $this->container['ppid'];
    }

    /**
     * Sets ppid
     *
     * @param string $ppid ppid
     *
     * @return $this
     */
    public function setPpid($ppid)
    {
        $this->container['ppid'] = $ppid;

        return $this;
    }

    /**
     * Gets ppid_argv
     *
     * @return string
     */
    public function getPpidArgv()
    {
        return $this->container['ppid_argv'];
    }

    /**
     * Sets ppid_argv
     *
     * @param string $ppid_argv ppid_argv
     *
     * @return $this
     */
    public function setPpidArgv($ppid_argv)
    {
        $this->container['ppid_argv'] = $ppid_argv;

        return $this;
    }

    /**
     * Gets privilege_list
     *
     * @return string
     */
    public function getPrivilegeList()
    {
        return $this->container['privilege_list'];
    }

    /**
     * Sets privilege_list
     *
     * @param string $privilege_list privilege_list
     *
     * @return $this
     */
    public function setPrivilegeList($privilege_list)
    {
        $this->container['privilege_list'] = $privilege_list;

        return $this;
    }

    /**
     * Gets probe_hook
     *
     * @return string
     */
    public function getProbeHook()
    {
        return $this->container['probe_hook'];
    }

    /**
     * Sets probe_hook
     *
     * @param string $probe_hook probe_hook
     *
     * @return $this
     */
    public function setProbeHook($probe_hook)
    {
        $this->container['probe_hook'] = $probe_hook;

        return $this;
    }

    /**
     * Gets process_guid
     *
     * @return string
     */
    public function getProcessGuid()
    {
        return $this->container['process_guid'];
    }

    /**
     * Sets process_guid
     *
     * @param string $process_guid process_guid
     *
     * @return $this
     */
    public function setProcessGuid($process_guid)
    {
        $this->container['process_guid'] = $process_guid;

        return $this;
    }

    /**
     * Gets process_id
     *
     * @return string
     */
    public function getProcessId()
    {
        return $this->container['process_id'];
    }

    /**
     * Sets process_id
     *
     * @param string $process_id process_id
     *
     * @return $this
     */
    public function setProcessId($process_id)
    {
        $this->container['process_id'] = $process_id;

        return $this;
    }

    /**
     * Gets process_name
     *
     * @return string
     */
    public function getProcessName()
    {
        return $this->container['process_name'];
    }

    /**
     * Sets process_name
     *
     * @param string $process_name process_name
     *
     * @return $this
     */
    public function setProcessName($process_name)
    {
        $this->container['process_name'] = $process_name;

        return $this;
    }

    /**
     * Gets protocol
     *
     * @return string
     */
    public function getProtocol()
    {
        return $this->container['protocol'];
    }

    /**
     * Sets protocol
     *
     * @param string $protocol protocol
     *
     * @return $this
     */
    public function setProtocol($protocol)
    {
        $this->container['protocol'] = $protocol;

        return $this;
    }

    /**
     * Gets ptrace_request
     *
     * @return string
     */
    public function getPtraceRequest()
    {
        return $this->container['ptrace_request'];
    }

    /**
     * Sets ptrace_request
     *
     * @param string $ptrace_request ptrace_request
     *
     * @return $this
     */
    public function setPtraceRequest($ptrace_request)
    {
        $this->container['ptrace_request'] = $ptrace_request;

        return $this;
    }

    /**
     * Gets query
     *
     * @return string
     */
    public function getQuery()
    {
        return $this->container['query'];
    }

    /**
     * Sets query
     *
     * @param string $query query
     *
     * @return $this
     */
    public function setQuery($query)
    {
        $this->container['query'] = $query;

        return $this;
    }

    /**
     * Gets query_name
     *
     * @return string
     */
    public function getQueryName()
    {
        return $this->container['query_name'];
    }

    /**
     * Sets query_name
     *
     * @param string $query_name query_name
     *
     * @return $this
     */
    public function setQueryName($query_name)
    {
        $this->container['query_name'] = $query_name;

        return $this;
    }

    /**
     * Gets query_results
     *
     * @return string
     */
    public function getQueryResults()
    {
        return $this->container['query_results'];
    }

    /**
     * Sets query_results
     *
     * @param string $query_results query_results
     *
     * @return $this
     */
    public function setQueryResults($query_results)
    {
        $this->container['query_results'] = $query_results;

        return $this;
    }

    /**
     * Gets query_status
     *
     * @return string
     */
    public function getQueryStatus()
    {
        return $this->container['query_status'];
    }

    /**
     * Sets query_status
     *
     * @param string $query_status query_status
     *
     * @return $this
     */
    public function setQueryStatus($query_status)
    {
        $this->container['query_status'] = $query_status;

        return $this;
    }

    /**
     * Gets run_path
     *
     * @return string
     */
    public function getRunPath()
    {
        return $this->container['run_path'];
    }

    /**
     * Sets run_path
     *
     * @param string $run_path run_path
     *
     * @return $this
     */
    public function setRunPath($run_path)
    {
        $this->container['run_path'] = $run_path;

        return $this;
    }

    /**
     * Gets sam_account_name
     *
     * @return string
     */
    public function getSamAccountName()
    {
        return $this->container['sam_account_name'];
    }

    /**
     * Sets sam_account_name
     *
     * @param string $sam_account_name sam_account_name
     *
     * @return $this
     */
    public function setSamAccountName($sam_account_name)
    {
        $this->container['sam_account_name'] = $sam_account_name;

        return $this;
    }

    /**
     * Gets service_account
     *
     * @return string
     */
    public function getServiceAccount()
    {
        return $this->container['service_account'];
    }

    /**
     * Sets service_account
     *
     * @param string $service_account service_account
     *
     * @return $this
     */
    public function setServiceAccount($service_account)
    {
        $this->container['service_account'] = $service_account;

        return $this;
    }

    /**
     * Gets service_file_name
     *
     * @return string
     */
    public function getServiceFileName()
    {
        return $this->container['service_file_name'];
    }

    /**
     * Sets service_file_name
     *
     * @param string $service_file_name service_file_name
     *
     * @return $this
     */
    public function setServiceFileName($service_file_name)
    {
        $this->container['service_file_name'] = $service_file_name;

        return $this;
    }

    /**
     * Gets service_name
     *
     * @return string
     */
    public function getServiceName()
    {
        return $this->container['service_name'];
    }

    /**
     * Sets service_name
     *
     * @param string $service_name service_name
     *
     * @return $this
     */
    public function setServiceName($service_name)
    {
        $this->container['service_name'] = $service_name;

        return $this;
    }

    /**
     * Gets service_start_type
     *
     * @return string
     */
    public function getServiceStartType()
    {
        return $this->container['service_start_type'];
    }

    /**
     * Sets service_start_type
     *
     * @param string $service_start_type service_start_type
     *
     * @return $this
     */
    public function setServiceStartType($service_start_type)
    {
        $this->container['service_start_type'] = $service_start_type;

        return $this;
    }

    /**
     * Gets service_type
     *
     * @return string
     */
    public function getServiceType()
    {
        return $this->container['service_type'];
    }

    /**
     * Sets service_type
     *
     * @param string $service_type service_type
     *
     * @return $this
     */
    public function setServiceType($service_type)
    {
        $this->container['service_type'] = $service_type;

        return $this;
    }

    /**
     * Gets severity_name
     *
     * @return string
     */
    public function getSeverityName()
    {
        return $this->container['severity_name'];
    }

    /**
     * Sets severity_name
     *
     * @param string $severity_name severity_name
     *
     * @return $this
     */
    public function setSeverityName($severity_name)
    {
        $this->container['severity_name'] = $severity_name;

        return $this;
    }

    /**
     * Gets sid
     *
     * @return string
     */
    public function getSid()
    {
        return $this->container['sid'];
    }

    /**
     * Sets sid
     *
     * @param string $sid sid
     *
     * @return $this
     */
    public function setSid($sid)
    {
        $this->container['sid'] = $sid;

        return $this;
    }

    /**
     * Gets signature
     *
     * @return string
     */
    public function getSignature()
    {
        return $this->container['signature'];
    }

    /**
     * Sets signature
     *
     * @param string $signature signature
     *
     * @return $this
     */
    public function setSignature($signature)
    {
        $this->container['signature'] = $signature;

        return $this;
    }

    /**
     * Gets signature_status
     *
     * @return string
     */
    public function getSignatureStatus()
    {
        return $this->container['signature_status'];
    }

    /**
     * Sets signature_status
     *
     * @param string $signature_status signature_status
     *
     * @return $this
     */
    public function setSignatureStatus($signature_status)
    {
        $this->container['signature_status'] = $signature_status;

        return $this;
    }

    /**
     * Gets sip
     *
     * @return string
     */
    public function getSip()
    {
        return $this->container['sip'];
    }

    /**
     * Sets sip
     *
     * @param string $sip sip
     *
     * @return $this
     */
    public function setSip($sip)
    {
        $this->container['sip'] = $sip;

        return $this;
    }

    /**
     * Gets socket_argv
     *
     * @return string
     */
    public function getSocketArgv()
    {
        return $this->container['socket_argv'];
    }

    /**
     * Sets socket_argv
     *
     * @param string $socket_argv socket_argv
     *
     * @return $this
     */
    public function setSocketArgv($socket_argv)
    {
        $this->container['socket_argv'] = $socket_argv;

        return $this;
    }

    /**
     * Gets socket_pid
     *
     * @return string
     */
    public function getSocketPid()
    {
        return $this->container['socket_pid'];
    }

    /**
     * Sets socket_pid
     *
     * @param string $socket_pid socket_pid
     *
     * @return $this
     */
    public function setSocketPid($socket_pid)
    {
        $this->container['socket_pid'] = $socket_pid;

        return $this;
    }

    /**
     * Gets source_ip
     *
     * @return string
     */
    public function getSourceIp()
    {
        return $this->container['source_ip'];
    }

    /**
     * Sets source_ip
     *
     * @param string $source_ip source_ip
     *
     * @return $this
     */
    public function setSourceIp($source_ip)
    {
        $this->container['source_ip'] = $source_ip;

        return $this;
    }

    /**
     * Gets source_image
     *
     * @return string
     */
    public function getSourceImage()
    {
        return $this->container['source_image'];
    }

    /**
     * Sets source_image
     *
     * @param string $source_image source_image
     *
     * @return $this
     */
    public function setSourceImage($source_image)
    {
        $this->container['source_image'] = $source_image;

        return $this;
    }

    /**
     * Gets source_name
     *
     * @return string
     */
    public function getSourceName()
    {
        return $this->container['source_name'];
    }

    /**
     * Sets source_name
     *
     * @param string $source_name source_name
     *
     * @return $this
     */
    public function setSourceName($source_name)
    {
        $this->container['source_name'] = $source_name;

        return $this;
    }

    /**
     * Gets source_port
     *
     * @return string
     */
    public function getSourcePort()
    {
        return $this->container['source_port'];
    }

    /**
     * Sets source_port
     *
     * @param string $source_port source_port
     *
     * @return $this
     */
    public function setSourcePort($source_port)
    {
        $this->container['source_port'] = $source_port;

        return $this;
    }

    /**
     * Gets source_process_guid
     *
     * @return string
     */
    public function getSourceProcessGuid()
    {
        return $this->container['source_process_guid'];
    }

    /**
     * Sets source_process_guid
     *
     * @param string $source_process_guid source_process_guid
     *
     * @return $this
     */
    public function setSourceProcessGuid($source_process_guid)
    {
        $this->container['source_process_guid'] = $source_process_guid;

        return $this;
    }

    /**
     * Gets source_user
     *
     * @return string
     */
    public function getSourceUser()
    {
        return $this->container['source_user'];
    }

    /**
     * Sets source_user
     *
     * @param string $source_user source_user
     *
     * @return $this
     */
    public function setSourceUser($source_user)
    {
        $this->container['source_user'] = $source_user;

        return $this;
    }

    /**
     * Gets sport
     *
     * @return string
     */
    public function getSport()
    {
        return $this->container['sport'];
    }

    /**
     * Sets sport
     *
     * @param string $sport sport
     *
     * @return $this
     */
    public function setSport($sport)
    {
        $this->container['sport'] = $sport;

        return $this;
    }

    /**
     * Gets src_list
     *
     * @return string
     */
    public function getSrcList()
    {
        return $this->container['src_list'];
    }

    /**
     * Sets src_list
     *
     * @param string $src_list src_list
     *
     * @return $this
     */
    public function setSrcList($src_list)
    {
        $this->container['src_list'] = $src_list;

        return $this;
    }

    /**
     * Gets ssh
     *
     * @return string
     */
    public function getSsh()
    {
        return $this->container['ssh'];
    }

    /**
     * Sets ssh
     *
     * @param string $ssh ssh
     *
     * @return $this
     */
    public function setSsh($ssh)
    {
        $this->container['ssh'] = $ssh;

        return $this;
    }

    /**
     * Gets ssh_info
     *
     * @return string
     */
    public function getSshInfo()
    {
        return $this->container['ssh_info'];
    }

    /**
     * Sets ssh_info
     *
     * @param string $ssh_info ssh_info
     *
     * @return $this
     */
    public function setSshInfo($ssh_info)
    {
        $this->container['ssh_info'] = $ssh_info;

        return $this;
    }

    /**
     * Gets stack_trace_format
     *
     * @return string
     */
    public function getStackTraceFormat()
    {
        return $this->container['stack_trace_format'];
    }

    /**
     * Sets stack_trace_format
     *
     * @param string $stack_trace_format stack_trace_format
     *
     * @return $this
     */
    public function setStackTraceFormat($stack_trace_format)
    {
        $this->container['stack_trace_format'] = $stack_trace_format;

        return $this;
    }

    /**
     * Gets stack_trace_hash
     *
     * @return string
     */
    public function getStackTraceHash()
    {
        return $this->container['stack_trace_hash'];
    }

    /**
     * Sets stack_trace_hash
     *
     * @param string $stack_trace_hash stack_trace_hash
     *
     * @return $this
     */
    public function setStackTraceHash($stack_trace_hash)
    {
        $this->container['stack_trace_hash'] = $stack_trace_hash;

        return $this;
    }

    /**
     * Gets start_function
     *
     * @return string
     */
    public function getStartFunction()
    {
        return $this->container['start_function'];
    }

    /**
     * Sets start_function
     *
     * @param string $start_function start_function
     *
     * @return $this
     */
    public function setStartFunction($start_function)
    {
        $this->container['start_function'] = $start_function;

        return $this;
    }

    /**
     * Gets start_module
     *
     * @return string
     */
    public function getStartModule()
    {
        return $this->container['start_module'];
    }

    /**
     * Sets start_module
     *
     * @param string $start_module start_module
     *
     * @return $this
     */
    public function setStartModule($start_module)
    {
        $this->container['start_module'] = $start_module;

        return $this;
    }

    /**
     * Gets static_file
     *
     * @return string
     */
    public function getStaticFile()
    {
        return $this->container['static_file'];
    }

    /**
     * Sets static_file
     *
     * @param string $static_file static_file
     *
     * @return $this
     */
    public function setStaticFile($static_file)
    {
        $this->container['static_file'] = $static_file;

        return $this;
    }

    /**
     * Gets stdin
     *
     * @return string
     */
    public function getStdin()
    {
        return $this->container['stdin'];
    }

    /**
     * Sets stdin
     *
     * @param string $stdin stdin
     *
     * @return $this
     */
    public function setStdin($stdin)
    {
        $this->container['stdin'] = $stdin;

        return $this;
    }

    /**
     * Gets stdout
     *
     * @return string
     */
    public function getStdout()
    {
        return $this->container['stdout'];
    }

    /**
     * Sets stdout
     *
     * @param string $stdout stdout
     *
     * @return $this
     */
    public function setStdout($stdout)
    {
        $this->container['stdout'] = $stdout;

        return $this;
    }

    /**
     * Gets subject_user_name
     *
     * @return string
     */
    public function getSubjectUserName()
    {
        return $this->container['subject_user_name'];
    }

    /**
     * Sets subject_user_name
     *
     * @param string $subject_user_name subject_user_name
     *
     * @return $this
     */
    public function setSubjectUserName($subject_user_name)
    {
        $this->container['subject_user_name'] = $subject_user_name;

        return $this;
    }

    /**
     * Gets symbol_hooked
     *
     * @return string
     */
    public function getSymbolHooked()
    {
        return $this->container['symbol_hooked'];
    }

    /**
     * Sets symbol_hooked
     *
     * @param string $symbol_hooked symbol_hooked
     *
     * @return $this
     */
    public function setSymbolHooked($symbol_hooked)
    {
        $this->container['symbol_hooked'] = $symbol_hooked;

        return $this;
    }

    /**
     * Gets symbol_so
     *
     * @return string
     */
    public function getSymbolSo()
    {
        return $this->container['symbol_so'];
    }

    /**
     * Sets symbol_so
     *
     * @param string $symbol_so symbol_so
     *
     * @return $this
     */
    public function setSymbolSo($symbol_so)
    {
        $this->container['symbol_so'] = $symbol_so;

        return $this;
    }

    /**
     * Gets syscall_number
     *
     * @return string
     */
    public function getSyscallNumber()
    {
        return $this->container['syscall_number'];
    }

    /**
     * Sets syscall_number
     *
     * @param string $syscall_number syscall_number
     *
     * @return $this
     */
    public function setSyscallNumber($syscall_number)
    {
        $this->container['syscall_number'] = $syscall_number;

        return $this;
    }

    /**
     * Gets target_argv
     *
     * @return string
     */
    public function getTargetArgv()
    {
        return $this->container['target_argv'];
    }

    /**
     * Sets target_argv
     *
     * @param string $target_argv target_argv
     *
     * @return $this
     */
    public function setTargetArgv($target_argv)
    {
        $this->container['target_argv'] = $target_argv;

        return $this;
    }

    /**
     * Gets target_domain_name
     *
     * @return string
     */
    public function getTargetDomainName()
    {
        return $this->container['target_domain_name'];
    }

    /**
     * Sets target_domain_name
     *
     * @param string $target_domain_name target_domain_name
     *
     * @return $this
     */
    public function setTargetDomainName($target_domain_name)
    {
        $this->container['target_domain_name'] = $target_domain_name;

        return $this;
    }

    /**
     * Gets target_filename
     *
     * @return string
     */
    public function getTargetFilename()
    {
        return $this->container['target_filename'];
    }

    /**
     * Sets target_filename
     *
     * @param string $target_filename target_filename
     *
     * @return $this
     */
    public function setTargetFilename($target_filename)
    {
        $this->container['target_filename'] = $target_filename;

        return $this;
    }

    /**
     * Gets target_object
     *
     * @return string
     */
    public function getTargetObject()
    {
        return $this->container['target_object'];
    }

    /**
     * Sets target_object
     *
     * @param string $target_object target_object
     *
     * @return $this
     */
    public function setTargetObject($target_object)
    {
        $this->container['target_object'] = $target_object;

        return $this;
    }

    /**
     * Gets target_pid
     *
     * @return string
     */
    public function getTargetPid()
    {
        return $this->container['target_pid'];
    }

    /**
     * Sets target_pid
     *
     * @param string $target_pid target_pid
     *
     * @return $this
     */
    public function setTargetPid($target_pid)
    {
        $this->container['target_pid'] = $target_pid;

        return $this;
    }

    /**
     * Gets target_user_name
     *
     * @return string
     */
    public function getTargetUserName()
    {
        return $this->container['target_user_name'];
    }

    /**
     * Sets target_user_name
     *
     * @param string $target_user_name target_user_name
     *
     * @return $this
     */
    public function setTargetUserName($target_user_name)
    {
        $this->container['target_user_name'] = $target_user_name;

        return $this;
    }

    /**
     * Gets task_content
     *
     * @return string
     */
    public function getTaskContent()
    {
        return $this->container['task_content'];
    }

    /**
     * Sets task_content
     *
     * @param string $task_content task_content
     *
     * @return $this
     */
    public function setTaskContent($task_content)
    {
        $this->container['task_content'] = $task_content;

        return $this;
    }

    /**
     * Gets task_name
     *
     * @return string
     */
    public function getTaskName()
    {
        return $this->container['task_name'];
    }

    /**
     * Sets task_name
     *
     * @param string $task_name task_name
     *
     * @return $this
     */
    public function setTaskName($task_name)
    {
        $this->container['task_name'] = $task_name;

        return $this;
    }

    /**
     * Gets threat_name
     *
     * @return string
     */
    public function getThreatName()
    {
        return $this->container['threat_name'];
    }

    /**
     * Sets threat_name
     *
     * @param string $threat_name threat_name
     *
     * @return $this
     */
    public function setThreatName($threat_name)
    {
        $this->container['threat_name'] = $threat_name;

        return $this;
    }

    /**
     * Gets timestamp
     *
     * @return string
     */
    public function getTimestamp()
    {
        return $this->container['timestamp'];
    }

    /**
     * Sets timestamp
     *
     * @param string $timestamp timestamp
     *
     * @return $this
     */
    public function setTimestamp($timestamp)
    {
        $this->container['timestamp'] = $timestamp;

        return $this;
    }

    /**
     * Gets types
     *
     * @return string
     */
    public function getTypes()
    {
        return $this->container['types'];
    }

    /**
     * Sets types
     *
     * @param string $types types
     *
     * @return $this
     */
    public function setTypes($types)
    {
        $this->container['types'] = $types;

        return $this;
    }

    /**
     * Gets uid
     *
     * @return string
     */
    public function getUid()
    {
        return $this->container['uid'];
    }

    /**
     * Sets uid
     *
     * @param string $uid uid
     *
     * @return $this
     */
    public function setUid($uid)
    {
        $this->container['uid'] = $uid;

        return $this;
    }

    /**
     * Gets user
     *
     * @return string
     */
    public function getUser()
    {
        return $this->container['user'];
    }

    /**
     * Sets user
     *
     * @param string $user user
     *
     * @return $this
     */
    public function setUser($user)
    {
        $this->container['user'] = $user;

        return $this;
    }

    /**
     * Gets user_principal_name
     *
     * @return string
     */
    public function getUserPrincipalName()
    {
        return $this->container['user_principal_name'];
    }

    /**
     * Sets user_principal_name
     *
     * @param string $user_principal_name user_principal_name
     *
     * @return $this
     */
    public function setUserPrincipalName($user_principal_name)
    {
        $this->container['user_principal_name'] = $user_principal_name;

        return $this;
    }

    /**
     * Gets username
     *
     * @return string
     */
    public function getUsername()
    {
        return $this->container['username'];
    }

    /**
     * Sets username
     *
     * @param string $username username
     *
     * @return $this
     */
    public function setUsername($username)
    {
        $this->container['username'] = $username;

        return $this;
    }

    /**
     * Gets virus_hit_data_list
     *
     * @return \Volcengine\Seccenter20240508\Model\VirusHitDataListForGetHidsAlarmSummaryInfoOutput[]
     */
    public function getVirusHitDataList()
    {
        return $this->container['virus_hit_data_list'];
    }

    /**
     * Sets virus_hit_data_list
     *
     * @param \Volcengine\Seccenter20240508\Model\VirusHitDataListForGetHidsAlarmSummaryInfoOutput[] $virus_hit_data_list virus_hit_data_list
     *
     * @return $this
     */
    public function setVirusHitDataList($virus_hit_data_list)
    {
        $this->container['virus_hit_data_list'] = $virus_hit_data_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

