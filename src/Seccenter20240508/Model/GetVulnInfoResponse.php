<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class GetVulnInfoResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetVulnInfoResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'action' => 'string',
        'cnnvd' => 'string',
        'cpe_name' => 'string',
        'cpe_version' => 'string',
        'cve_id' => 'string',
        'cve_list' => '\Volcengine\Seccenter20240508\Model\CveListForGetVulnInfoOutput[]',
        'cves' => 'string[]',
        'cvss' => 'string',
        'cvss_vector' => 'string',
        'cwe' => 'string',
        'descript' => 'string',
        'descript_en' => 'string',
        'exploit_link' => 'string',
        'if_exp' => 'int',
        'if_rasp' => 'bool',
        'level' => 'string',
        'md5' => 'string',
        'patch_url' => 'string',
        'refer_urls' => 'string[]',
        'storage_name' => 'string',
        'suggest' => 'string',
        'suggest_en' => 'string',
        'update_time' => 'int',
        'upload_at' => 'int',
        'upload_name' => 'string',
        'vuln_name' => 'string',
        'vuln_name_en' => 'string',
        'cwpp_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'action' => null,
        'cnnvd' => null,
        'cpe_name' => null,
        'cpe_version' => null,
        'cve_id' => null,
        'cve_list' => null,
        'cves' => null,
        'cvss' => null,
        'cvss_vector' => null,
        'cwe' => null,
        'descript' => null,
        'descript_en' => null,
        'exploit_link' => null,
        'if_exp' => 'int32',
        'if_rasp' => null,
        'level' => null,
        'md5' => null,
        'patch_url' => null,
        'refer_urls' => null,
        'storage_name' => null,
        'suggest' => null,
        'suggest_en' => null,
        'update_time' => 'int32',
        'upload_at' => 'int32',
        'upload_name' => null,
        'vuln_name' => null,
        'vuln_name_en' => null,
        'cwpp_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'action' => 'Action',
        'cnnvd' => 'Cnnvd',
        'cpe_name' => 'CpeName',
        'cpe_version' => 'CpeVersion',
        'cve_id' => 'CveID',
        'cve_list' => 'CveList',
        'cves' => 'Cves',
        'cvss' => 'Cvss',
        'cvss_vector' => 'CvssVector',
        'cwe' => 'Cwe',
        'descript' => 'Descript',
        'descript_en' => 'DescriptEn',
        'exploit_link' => 'ExploitLink',
        'if_exp' => 'IfExp',
        'if_rasp' => 'IfRasp',
        'level' => 'Level',
        'md5' => 'Md5',
        'patch_url' => 'PatchUrl',
        'refer_urls' => 'ReferUrls',
        'storage_name' => 'StorageName',
        'suggest' => 'Suggest',
        'suggest_en' => 'SuggestEn',
        'update_time' => 'UpdateTime',
        'upload_at' => 'UploadAt',
        'upload_name' => 'UploadName',
        'vuln_name' => 'VulnName',
        'vuln_name_en' => 'VulnNameEn',
        'cwpp_id' => 'cwpp_id'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'action' => 'setAction',
        'cnnvd' => 'setCnnvd',
        'cpe_name' => 'setCpeName',
        'cpe_version' => 'setCpeVersion',
        'cve_id' => 'setCveId',
        'cve_list' => 'setCveList',
        'cves' => 'setCves',
        'cvss' => 'setCvss',
        'cvss_vector' => 'setCvssVector',
        'cwe' => 'setCwe',
        'descript' => 'setDescript',
        'descript_en' => 'setDescriptEn',
        'exploit_link' => 'setExploitLink',
        'if_exp' => 'setIfExp',
        'if_rasp' => 'setIfRasp',
        'level' => 'setLevel',
        'md5' => 'setMd5',
        'patch_url' => 'setPatchUrl',
        'refer_urls' => 'setReferUrls',
        'storage_name' => 'setStorageName',
        'suggest' => 'setSuggest',
        'suggest_en' => 'setSuggestEn',
        'update_time' => 'setUpdateTime',
        'upload_at' => 'setUploadAt',
        'upload_name' => 'setUploadName',
        'vuln_name' => 'setVulnName',
        'vuln_name_en' => 'setVulnNameEn',
        'cwpp_id' => 'setCwppId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'action' => 'getAction',
        'cnnvd' => 'getCnnvd',
        'cpe_name' => 'getCpeName',
        'cpe_version' => 'getCpeVersion',
        'cve_id' => 'getCveId',
        'cve_list' => 'getCveList',
        'cves' => 'getCves',
        'cvss' => 'getCvss',
        'cvss_vector' => 'getCvssVector',
        'cwe' => 'getCwe',
        'descript' => 'getDescript',
        'descript_en' => 'getDescriptEn',
        'exploit_link' => 'getExploitLink',
        'if_exp' => 'getIfExp',
        'if_rasp' => 'getIfRasp',
        'level' => 'getLevel',
        'md5' => 'getMd5',
        'patch_url' => 'getPatchUrl',
        'refer_urls' => 'getReferUrls',
        'storage_name' => 'getStorageName',
        'suggest' => 'getSuggest',
        'suggest_en' => 'getSuggestEn',
        'update_time' => 'getUpdateTime',
        'upload_at' => 'getUploadAt',
        'upload_name' => 'getUploadName',
        'vuln_name' => 'getVulnName',
        'vuln_name_en' => 'getVulnNameEn',
        'cwpp_id' => 'getCwppId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['action'] = isset($data['action']) ? $data['action'] : null;
        $this->container['cnnvd'] = isset($data['cnnvd']) ? $data['cnnvd'] : null;
        $this->container['cpe_name'] = isset($data['cpe_name']) ? $data['cpe_name'] : null;
        $this->container['cpe_version'] = isset($data['cpe_version']) ? $data['cpe_version'] : null;
        $this->container['cve_id'] = isset($data['cve_id']) ? $data['cve_id'] : null;
        $this->container['cve_list'] = isset($data['cve_list']) ? $data['cve_list'] : null;
        $this->container['cves'] = isset($data['cves']) ? $data['cves'] : null;
        $this->container['cvss'] = isset($data['cvss']) ? $data['cvss'] : null;
        $this->container['cvss_vector'] = isset($data['cvss_vector']) ? $data['cvss_vector'] : null;
        $this->container['cwe'] = isset($data['cwe']) ? $data['cwe'] : null;
        $this->container['descript'] = isset($data['descript']) ? $data['descript'] : null;
        $this->container['descript_en'] = isset($data['descript_en']) ? $data['descript_en'] : null;
        $this->container['exploit_link'] = isset($data['exploit_link']) ? $data['exploit_link'] : null;
        $this->container['if_exp'] = isset($data['if_exp']) ? $data['if_exp'] : null;
        $this->container['if_rasp'] = isset($data['if_rasp']) ? $data['if_rasp'] : null;
        $this->container['level'] = isset($data['level']) ? $data['level'] : null;
        $this->container['md5'] = isset($data['md5']) ? $data['md5'] : null;
        $this->container['patch_url'] = isset($data['patch_url']) ? $data['patch_url'] : null;
        $this->container['refer_urls'] = isset($data['refer_urls']) ? $data['refer_urls'] : null;
        $this->container['storage_name'] = isset($data['storage_name']) ? $data['storage_name'] : null;
        $this->container['suggest'] = isset($data['suggest']) ? $data['suggest'] : null;
        $this->container['suggest_en'] = isset($data['suggest_en']) ? $data['suggest_en'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['upload_at'] = isset($data['upload_at']) ? $data['upload_at'] : null;
        $this->container['upload_name'] = isset($data['upload_name']) ? $data['upload_name'] : null;
        $this->container['vuln_name'] = isset($data['vuln_name']) ? $data['vuln_name'] : null;
        $this->container['vuln_name_en'] = isset($data['vuln_name_en']) ? $data['vuln_name_en'] : null;
        $this->container['cwpp_id'] = isset($data['cwpp_id']) ? $data['cwpp_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets action
     *
     * @return string
     */
    public function getAction()
    {
        return $this->container['action'];
    }

    /**
     * Sets action
     *
     * @param string $action action
     *
     * @return $this
     */
    public function setAction($action)
    {
        $this->container['action'] = $action;

        return $this;
    }

    /**
     * Gets cnnvd
     *
     * @return string
     */
    public function getCnnvd()
    {
        return $this->container['cnnvd'];
    }

    /**
     * Sets cnnvd
     *
     * @param string $cnnvd cnnvd
     *
     * @return $this
     */
    public function setCnnvd($cnnvd)
    {
        $this->container['cnnvd'] = $cnnvd;

        return $this;
    }

    /**
     * Gets cpe_name
     *
     * @return string
     */
    public function getCpeName()
    {
        return $this->container['cpe_name'];
    }

    /**
     * Sets cpe_name
     *
     * @param string $cpe_name cpe_name
     *
     * @return $this
     */
    public function setCpeName($cpe_name)
    {
        $this->container['cpe_name'] = $cpe_name;

        return $this;
    }

    /**
     * Gets cpe_version
     *
     * @return string
     */
    public function getCpeVersion()
    {
        return $this->container['cpe_version'];
    }

    /**
     * Sets cpe_version
     *
     * @param string $cpe_version cpe_version
     *
     * @return $this
     */
    public function setCpeVersion($cpe_version)
    {
        $this->container['cpe_version'] = $cpe_version;

        return $this;
    }

    /**
     * Gets cve_id
     *
     * @return string
     */
    public function getCveId()
    {
        return $this->container['cve_id'];
    }

    /**
     * Sets cve_id
     *
     * @param string $cve_id cve_id
     *
     * @return $this
     */
    public function setCveId($cve_id)
    {
        $this->container['cve_id'] = $cve_id;

        return $this;
    }

    /**
     * Gets cve_list
     *
     * @return \Volcengine\Seccenter20240508\Model\CveListForGetVulnInfoOutput[]
     */
    public function getCveList()
    {
        return $this->container['cve_list'];
    }

    /**
     * Sets cve_list
     *
     * @param \Volcengine\Seccenter20240508\Model\CveListForGetVulnInfoOutput[] $cve_list cve_list
     *
     * @return $this
     */
    public function setCveList($cve_list)
    {
        $this->container['cve_list'] = $cve_list;

        return $this;
    }

    /**
     * Gets cves
     *
     * @return string[]
     */
    public function getCves()
    {
        return $this->container['cves'];
    }

    /**
     * Sets cves
     *
     * @param string[] $cves cves
     *
     * @return $this
     */
    public function setCves($cves)
    {
        $this->container['cves'] = $cves;

        return $this;
    }

    /**
     * Gets cvss
     *
     * @return string
     */
    public function getCvss()
    {
        return $this->container['cvss'];
    }

    /**
     * Sets cvss
     *
     * @param string $cvss cvss
     *
     * @return $this
     */
    public function setCvss($cvss)
    {
        $this->container['cvss'] = $cvss;

        return $this;
    }

    /**
     * Gets cvss_vector
     *
     * @return string
     */
    public function getCvssVector()
    {
        return $this->container['cvss_vector'];
    }

    /**
     * Sets cvss_vector
     *
     * @param string $cvss_vector cvss_vector
     *
     * @return $this
     */
    public function setCvssVector($cvss_vector)
    {
        $this->container['cvss_vector'] = $cvss_vector;

        return $this;
    }

    /**
     * Gets cwe
     *
     * @return string
     */
    public function getCwe()
    {
        return $this->container['cwe'];
    }

    /**
     * Sets cwe
     *
     * @param string $cwe cwe
     *
     * @return $this
     */
    public function setCwe($cwe)
    {
        $this->container['cwe'] = $cwe;

        return $this;
    }

    /**
     * Gets descript
     *
     * @return string
     */
    public function getDescript()
    {
        return $this->container['descript'];
    }

    /**
     * Sets descript
     *
     * @param string $descript descript
     *
     * @return $this
     */
    public function setDescript($descript)
    {
        $this->container['descript'] = $descript;

        return $this;
    }

    /**
     * Gets descript_en
     *
     * @return string
     */
    public function getDescriptEn()
    {
        return $this->container['descript_en'];
    }

    /**
     * Sets descript_en
     *
     * @param string $descript_en descript_en
     *
     * @return $this
     */
    public function setDescriptEn($descript_en)
    {
        $this->container['descript_en'] = $descript_en;

        return $this;
    }

    /**
     * Gets exploit_link
     *
     * @return string
     */
    public function getExploitLink()
    {
        return $this->container['exploit_link'];
    }

    /**
     * Sets exploit_link
     *
     * @param string $exploit_link exploit_link
     *
     * @return $this
     */
    public function setExploitLink($exploit_link)
    {
        $this->container['exploit_link'] = $exploit_link;

        return $this;
    }

    /**
     * Gets if_exp
     *
     * @return int
     */
    public function getIfExp()
    {
        return $this->container['if_exp'];
    }

    /**
     * Sets if_exp
     *
     * @param int $if_exp if_exp
     *
     * @return $this
     */
    public function setIfExp($if_exp)
    {
        $this->container['if_exp'] = $if_exp;

        return $this;
    }

    /**
     * Gets if_rasp
     *
     * @return bool
     */
    public function getIfRasp()
    {
        return $this->container['if_rasp'];
    }

    /**
     * Sets if_rasp
     *
     * @param bool $if_rasp if_rasp
     *
     * @return $this
     */
    public function setIfRasp($if_rasp)
    {
        $this->container['if_rasp'] = $if_rasp;

        return $this;
    }

    /**
     * Gets level
     *
     * @return string
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param string $level level
     *
     * @return $this
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets md5
     *
     * @return string
     */
    public function getMd5()
    {
        return $this->container['md5'];
    }

    /**
     * Sets md5
     *
     * @param string $md5 md5
     *
     * @return $this
     */
    public function setMd5($md5)
    {
        $this->container['md5'] = $md5;

        return $this;
    }

    /**
     * Gets patch_url
     *
     * @return string
     */
    public function getPatchUrl()
    {
        return $this->container['patch_url'];
    }

    /**
     * Sets patch_url
     *
     * @param string $patch_url patch_url
     *
     * @return $this
     */
    public function setPatchUrl($patch_url)
    {
        $this->container['patch_url'] = $patch_url;

        return $this;
    }

    /**
     * Gets refer_urls
     *
     * @return string[]
     */
    public function getReferUrls()
    {
        return $this->container['refer_urls'];
    }

    /**
     * Sets refer_urls
     *
     * @param string[] $refer_urls refer_urls
     *
     * @return $this
     */
    public function setReferUrls($refer_urls)
    {
        $this->container['refer_urls'] = $refer_urls;

        return $this;
    }

    /**
     * Gets storage_name
     *
     * @return string
     */
    public function getStorageName()
    {
        return $this->container['storage_name'];
    }

    /**
     * Sets storage_name
     *
     * @param string $storage_name storage_name
     *
     * @return $this
     */
    public function setStorageName($storage_name)
    {
        $this->container['storage_name'] = $storage_name;

        return $this;
    }

    /**
     * Gets suggest
     *
     * @return string
     */
    public function getSuggest()
    {
        return $this->container['suggest'];
    }

    /**
     * Sets suggest
     *
     * @param string $suggest suggest
     *
     * @return $this
     */
    public function setSuggest($suggest)
    {
        $this->container['suggest'] = $suggest;

        return $this;
    }

    /**
     * Gets suggest_en
     *
     * @return string
     */
    public function getSuggestEn()
    {
        return $this->container['suggest_en'];
    }

    /**
     * Sets suggest_en
     *
     * @param string $suggest_en suggest_en
     *
     * @return $this
     */
    public function setSuggestEn($suggest_en)
    {
        $this->container['suggest_en'] = $suggest_en;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return int
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param int $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets upload_at
     *
     * @return int
     */
    public function getUploadAt()
    {
        return $this->container['upload_at'];
    }

    /**
     * Sets upload_at
     *
     * @param int $upload_at upload_at
     *
     * @return $this
     */
    public function setUploadAt($upload_at)
    {
        $this->container['upload_at'] = $upload_at;

        return $this;
    }

    /**
     * Gets upload_name
     *
     * @return string
     */
    public function getUploadName()
    {
        return $this->container['upload_name'];
    }

    /**
     * Sets upload_name
     *
     * @param string $upload_name upload_name
     *
     * @return $this
     */
    public function setUploadName($upload_name)
    {
        $this->container['upload_name'] = $upload_name;

        return $this;
    }

    /**
     * Gets vuln_name
     *
     * @return string
     */
    public function getVulnName()
    {
        return $this->container['vuln_name'];
    }

    /**
     * Sets vuln_name
     *
     * @param string $vuln_name vuln_name
     *
     * @return $this
     */
    public function setVulnName($vuln_name)
    {
        $this->container['vuln_name'] = $vuln_name;

        return $this;
    }

    /**
     * Gets vuln_name_en
     *
     * @return string
     */
    public function getVulnNameEn()
    {
        return $this->container['vuln_name_en'];
    }

    /**
     * Sets vuln_name_en
     *
     * @param string $vuln_name_en vuln_name_en
     *
     * @return $this
     */
    public function setVulnNameEn($vuln_name_en)
    {
        $this->container['vuln_name_en'] = $vuln_name_en;

        return $this;
    }

    /**
     * Gets cwpp_id
     *
     * @return string
     */
    public function getCwppId()
    {
        return $this->container['cwpp_id'];
    }

    /**
     * Sets cwpp_id
     *
     * @param string $cwpp_id cwpp_id
     *
     * @return $this
     */
    public function setCwppId($cwpp_id)
    {
        $this->container['cwpp_id'] = $cwpp_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

