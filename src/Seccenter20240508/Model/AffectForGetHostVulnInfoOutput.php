<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class AffectForGetHostVulnInfoOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AffectForGetHostVulnInfoOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'agent_id' => 'string',
        'asset_id' => 'string',
        'cmdline' => 'string',
        'container_create_time' => 'string',
        'container_host_name' => 'string',
        'container_id' => 'string',
        'container_ip' => 'string',
        'container_name' => 'string',
        'container_net_mode' => 'string',
        'container_query_result' => 'string',
        'container_run_time' => 'string',
        'container_state' => 'string',
        'cves' => 'string[]',
        'image_id' => 'string',
        'image_name' => 'string',
        'pid_list' => '\Volcengine\Seccenter20240508\Model\PidListForGetHostVulnInfoOutput[]',
        'pod_id' => 'string',
        'pod_name' => 'string',
        'software_name' => 'string',
        'software_path' => 'string',
        'software_source' => 'string',
        'software_version' => 'string',
        'state' => 'string',
        'type' => 'string',
        'update_time' => 'int',
        'action' => 'string',
        'cluster_id' => 'string',
        'cluster_name' => 'string',
        'control_time' => 'int',
        'create_time' => 'int',
        'cve_id' => 'string',
        'cwpp_id' => 'string',
        'fix_version' => 'string',
        'level' => 'string',
        'namespace' => 'string',
        'operate_reason' => 'string',
        'pod_hash' => 'string',
        'status' => 'string',
        'tag' => 'string[]',
        'vuln_name' => 'string',
        'vuln_type' => 'string',
        'workload_id' => 'string',
        'workload_name' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'agent_id' => null,
        'asset_id' => null,
        'cmdline' => null,
        'container_create_time' => null,
        'container_host_name' => null,
        'container_id' => null,
        'container_ip' => null,
        'container_name' => null,
        'container_net_mode' => null,
        'container_query_result' => null,
        'container_run_time' => null,
        'container_state' => null,
        'cves' => null,
        'image_id' => null,
        'image_name' => null,
        'pid_list' => null,
        'pod_id' => null,
        'pod_name' => null,
        'software_name' => null,
        'software_path' => null,
        'software_source' => null,
        'software_version' => null,
        'state' => null,
        'type' => null,
        'update_time' => 'int32',
        'action' => null,
        'cluster_id' => null,
        'cluster_name' => null,
        'control_time' => 'int32',
        'create_time' => 'int32',
        'cve_id' => null,
        'cwpp_id' => null,
        'fix_version' => null,
        'level' => null,
        'namespace' => null,
        'operate_reason' => null,
        'pod_hash' => null,
        'status' => null,
        'tag' => null,
        'vuln_name' => null,
        'vuln_type' => null,
        'workload_id' => null,
        'workload_name' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'agent_id' => 'AgentID',
        'asset_id' => 'AssetID',
        'cmdline' => 'Cmdline',
        'container_create_time' => 'ContainerCreateTime',
        'container_host_name' => 'ContainerHostName',
        'container_id' => 'ContainerID',
        'container_ip' => 'ContainerIP',
        'container_name' => 'ContainerName',
        'container_net_mode' => 'ContainerNetMode',
        'container_query_result' => 'ContainerQueryResult',
        'container_run_time' => 'ContainerRunTime',
        'container_state' => 'ContainerState',
        'cves' => 'Cves',
        'image_id' => 'ImageID',
        'image_name' => 'ImageName',
        'pid_list' => 'PidList',
        'pod_id' => 'PodID',
        'pod_name' => 'PodName',
        'software_name' => 'SoftwareName',
        'software_path' => 'SoftwarePath',
        'software_source' => 'SoftwareSource',
        'software_version' => 'SoftwareVersion',
        'state' => 'State',
        'type' => 'Type',
        'update_time' => 'UpdateTime',
        'action' => 'action',
        'cluster_id' => 'cluster_id',
        'cluster_name' => 'cluster_name',
        'control_time' => 'control_time',
        'create_time' => 'create_time',
        'cve_id' => 'cve_id',
        'cwpp_id' => 'cwpp_id',
        'fix_version' => 'fix_version',
        'level' => 'level',
        'namespace' => 'namespace',
        'operate_reason' => 'operate_reason',
        'pod_hash' => 'pod_hash',
        'status' => 'status',
        'tag' => 'tag',
        'vuln_name' => 'vuln_name',
        'vuln_type' => 'vuln_type',
        'workload_id' => 'workload_id',
        'workload_name' => 'workload_name'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'agent_id' => 'setAgentId',
        'asset_id' => 'setAssetId',
        'cmdline' => 'setCmdline',
        'container_create_time' => 'setContainerCreateTime',
        'container_host_name' => 'setContainerHostName',
        'container_id' => 'setContainerId',
        'container_ip' => 'setContainerIp',
        'container_name' => 'setContainerName',
        'container_net_mode' => 'setContainerNetMode',
        'container_query_result' => 'setContainerQueryResult',
        'container_run_time' => 'setContainerRunTime',
        'container_state' => 'setContainerState',
        'cves' => 'setCves',
        'image_id' => 'setImageId',
        'image_name' => 'setImageName',
        'pid_list' => 'setPidList',
        'pod_id' => 'setPodId',
        'pod_name' => 'setPodName',
        'software_name' => 'setSoftwareName',
        'software_path' => 'setSoftwarePath',
        'software_source' => 'setSoftwareSource',
        'software_version' => 'setSoftwareVersion',
        'state' => 'setState',
        'type' => 'setType',
        'update_time' => 'setUpdateTime',
        'action' => 'setAction',
        'cluster_id' => 'setClusterId',
        'cluster_name' => 'setClusterName',
        'control_time' => 'setControlTime',
        'create_time' => 'setCreateTime',
        'cve_id' => 'setCveId',
        'cwpp_id' => 'setCwppId',
        'fix_version' => 'setFixVersion',
        'level' => 'setLevel',
        'namespace' => 'setNamespace',
        'operate_reason' => 'setOperateReason',
        'pod_hash' => 'setPodHash',
        'status' => 'setStatus',
        'tag' => 'setTag',
        'vuln_name' => 'setVulnName',
        'vuln_type' => 'setVulnType',
        'workload_id' => 'setWorkloadId',
        'workload_name' => 'setWorkloadName'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'agent_id' => 'getAgentId',
        'asset_id' => 'getAssetId',
        'cmdline' => 'getCmdline',
        'container_create_time' => 'getContainerCreateTime',
        'container_host_name' => 'getContainerHostName',
        'container_id' => 'getContainerId',
        'container_ip' => 'getContainerIp',
        'container_name' => 'getContainerName',
        'container_net_mode' => 'getContainerNetMode',
        'container_query_result' => 'getContainerQueryResult',
        'container_run_time' => 'getContainerRunTime',
        'container_state' => 'getContainerState',
        'cves' => 'getCves',
        'image_id' => 'getImageId',
        'image_name' => 'getImageName',
        'pid_list' => 'getPidList',
        'pod_id' => 'getPodId',
        'pod_name' => 'getPodName',
        'software_name' => 'getSoftwareName',
        'software_path' => 'getSoftwarePath',
        'software_source' => 'getSoftwareSource',
        'software_version' => 'getSoftwareVersion',
        'state' => 'getState',
        'type' => 'getType',
        'update_time' => 'getUpdateTime',
        'action' => 'getAction',
        'cluster_id' => 'getClusterId',
        'cluster_name' => 'getClusterName',
        'control_time' => 'getControlTime',
        'create_time' => 'getCreateTime',
        'cve_id' => 'getCveId',
        'cwpp_id' => 'getCwppId',
        'fix_version' => 'getFixVersion',
        'level' => 'getLevel',
        'namespace' => 'getNamespace',
        'operate_reason' => 'getOperateReason',
        'pod_hash' => 'getPodHash',
        'status' => 'getStatus',
        'tag' => 'getTag',
        'vuln_name' => 'getVulnName',
        'vuln_type' => 'getVulnType',
        'workload_id' => 'getWorkloadId',
        'workload_name' => 'getWorkloadName'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['agent_id'] = isset($data['agent_id']) ? $data['agent_id'] : null;
        $this->container['asset_id'] = isset($data['asset_id']) ? $data['asset_id'] : null;
        $this->container['cmdline'] = isset($data['cmdline']) ? $data['cmdline'] : null;
        $this->container['container_create_time'] = isset($data['container_create_time']) ? $data['container_create_time'] : null;
        $this->container['container_host_name'] = isset($data['container_host_name']) ? $data['container_host_name'] : null;
        $this->container['container_id'] = isset($data['container_id']) ? $data['container_id'] : null;
        $this->container['container_ip'] = isset($data['container_ip']) ? $data['container_ip'] : null;
        $this->container['container_name'] = isset($data['container_name']) ? $data['container_name'] : null;
        $this->container['container_net_mode'] = isset($data['container_net_mode']) ? $data['container_net_mode'] : null;
        $this->container['container_query_result'] = isset($data['container_query_result']) ? $data['container_query_result'] : null;
        $this->container['container_run_time'] = isset($data['container_run_time']) ? $data['container_run_time'] : null;
        $this->container['container_state'] = isset($data['container_state']) ? $data['container_state'] : null;
        $this->container['cves'] = isset($data['cves']) ? $data['cves'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['image_name'] = isset($data['image_name']) ? $data['image_name'] : null;
        $this->container['pid_list'] = isset($data['pid_list']) ? $data['pid_list'] : null;
        $this->container['pod_id'] = isset($data['pod_id']) ? $data['pod_id'] : null;
        $this->container['pod_name'] = isset($data['pod_name']) ? $data['pod_name'] : null;
        $this->container['software_name'] = isset($data['software_name']) ? $data['software_name'] : null;
        $this->container['software_path'] = isset($data['software_path']) ? $data['software_path'] : null;
        $this->container['software_source'] = isset($data['software_source']) ? $data['software_source'] : null;
        $this->container['software_version'] = isset($data['software_version']) ? $data['software_version'] : null;
        $this->container['state'] = isset($data['state']) ? $data['state'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['action'] = isset($data['action']) ? $data['action'] : null;
        $this->container['cluster_id'] = isset($data['cluster_id']) ? $data['cluster_id'] : null;
        $this->container['cluster_name'] = isset($data['cluster_name']) ? $data['cluster_name'] : null;
        $this->container['control_time'] = isset($data['control_time']) ? $data['control_time'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['cve_id'] = isset($data['cve_id']) ? $data['cve_id'] : null;
        $this->container['cwpp_id'] = isset($data['cwpp_id']) ? $data['cwpp_id'] : null;
        $this->container['fix_version'] = isset($data['fix_version']) ? $data['fix_version'] : null;
        $this->container['level'] = isset($data['level']) ? $data['level'] : null;
        $this->container['namespace'] = isset($data['namespace']) ? $data['namespace'] : null;
        $this->container['operate_reason'] = isset($data['operate_reason']) ? $data['operate_reason'] : null;
        $this->container['pod_hash'] = isset($data['pod_hash']) ? $data['pod_hash'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['vuln_name'] = isset($data['vuln_name']) ? $data['vuln_name'] : null;
        $this->container['vuln_type'] = isset($data['vuln_type']) ? $data['vuln_type'] : null;
        $this->container['workload_id'] = isset($data['workload_id']) ? $data['workload_id'] : null;
        $this->container['workload_name'] = isset($data['workload_name']) ? $data['workload_name'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets agent_id
     *
     * @return string
     */
    public function getAgentId()
    {
        return $this->container['agent_id'];
    }

    /**
     * Sets agent_id
     *
     * @param string $agent_id agent_id
     *
     * @return $this
     */
    public function setAgentId($agent_id)
    {
        $this->container['agent_id'] = $agent_id;

        return $this;
    }

    /**
     * Gets asset_id
     *
     * @return string
     */
    public function getAssetId()
    {
        return $this->container['asset_id'];
    }

    /**
     * Sets asset_id
     *
     * @param string $asset_id asset_id
     *
     * @return $this
     */
    public function setAssetId($asset_id)
    {
        $this->container['asset_id'] = $asset_id;

        return $this;
    }

    /**
     * Gets cmdline
     *
     * @return string
     */
    public function getCmdline()
    {
        return $this->container['cmdline'];
    }

    /**
     * Sets cmdline
     *
     * @param string $cmdline cmdline
     *
     * @return $this
     */
    public function setCmdline($cmdline)
    {
        $this->container['cmdline'] = $cmdline;

        return $this;
    }

    /**
     * Gets container_create_time
     *
     * @return string
     */
    public function getContainerCreateTime()
    {
        return $this->container['container_create_time'];
    }

    /**
     * Sets container_create_time
     *
     * @param string $container_create_time container_create_time
     *
     * @return $this
     */
    public function setContainerCreateTime($container_create_time)
    {
        $this->container['container_create_time'] = $container_create_time;

        return $this;
    }

    /**
     * Gets container_host_name
     *
     * @return string
     */
    public function getContainerHostName()
    {
        return $this->container['container_host_name'];
    }

    /**
     * Sets container_host_name
     *
     * @param string $container_host_name container_host_name
     *
     * @return $this
     */
    public function setContainerHostName($container_host_name)
    {
        $this->container['container_host_name'] = $container_host_name;

        return $this;
    }

    /**
     * Gets container_id
     *
     * @return string
     */
    public function getContainerId()
    {
        return $this->container['container_id'];
    }

    /**
     * Sets container_id
     *
     * @param string $container_id container_id
     *
     * @return $this
     */
    public function setContainerId($container_id)
    {
        $this->container['container_id'] = $container_id;

        return $this;
    }

    /**
     * Gets container_ip
     *
     * @return string
     */
    public function getContainerIp()
    {
        return $this->container['container_ip'];
    }

    /**
     * Sets container_ip
     *
     * @param string $container_ip container_ip
     *
     * @return $this
     */
    public function setContainerIp($container_ip)
    {
        $this->container['container_ip'] = $container_ip;

        return $this;
    }

    /**
     * Gets container_name
     *
     * @return string
     */
    public function getContainerName()
    {
        return $this->container['container_name'];
    }

    /**
     * Sets container_name
     *
     * @param string $container_name container_name
     *
     * @return $this
     */
    public function setContainerName($container_name)
    {
        $this->container['container_name'] = $container_name;

        return $this;
    }

    /**
     * Gets container_net_mode
     *
     * @return string
     */
    public function getContainerNetMode()
    {
        return $this->container['container_net_mode'];
    }

    /**
     * Sets container_net_mode
     *
     * @param string $container_net_mode container_net_mode
     *
     * @return $this
     */
    public function setContainerNetMode($container_net_mode)
    {
        $this->container['container_net_mode'] = $container_net_mode;

        return $this;
    }

    /**
     * Gets container_query_result
     *
     * @return string
     */
    public function getContainerQueryResult()
    {
        return $this->container['container_query_result'];
    }

    /**
     * Sets container_query_result
     *
     * @param string $container_query_result container_query_result
     *
     * @return $this
     */
    public function setContainerQueryResult($container_query_result)
    {
        $this->container['container_query_result'] = $container_query_result;

        return $this;
    }

    /**
     * Gets container_run_time
     *
     * @return string
     */
    public function getContainerRunTime()
    {
        return $this->container['container_run_time'];
    }

    /**
     * Sets container_run_time
     *
     * @param string $container_run_time container_run_time
     *
     * @return $this
     */
    public function setContainerRunTime($container_run_time)
    {
        $this->container['container_run_time'] = $container_run_time;

        return $this;
    }

    /**
     * Gets container_state
     *
     * @return string
     */
    public function getContainerState()
    {
        return $this->container['container_state'];
    }

    /**
     * Sets container_state
     *
     * @param string $container_state container_state
     *
     * @return $this
     */
    public function setContainerState($container_state)
    {
        $this->container['container_state'] = $container_state;

        return $this;
    }

    /**
     * Gets cves
     *
     * @return string[]
     */
    public function getCves()
    {
        return $this->container['cves'];
    }

    /**
     * Sets cves
     *
     * @param string[] $cves cves
     *
     * @return $this
     */
    public function setCves($cves)
    {
        $this->container['cves'] = $cves;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets image_name
     *
     * @return string
     */
    public function getImageName()
    {
        return $this->container['image_name'];
    }

    /**
     * Sets image_name
     *
     * @param string $image_name image_name
     *
     * @return $this
     */
    public function setImageName($image_name)
    {
        $this->container['image_name'] = $image_name;

        return $this;
    }

    /**
     * Gets pid_list
     *
     * @return \Volcengine\Seccenter20240508\Model\PidListForGetHostVulnInfoOutput[]
     */
    public function getPidList()
    {
        return $this->container['pid_list'];
    }

    /**
     * Sets pid_list
     *
     * @param \Volcengine\Seccenter20240508\Model\PidListForGetHostVulnInfoOutput[] $pid_list pid_list
     *
     * @return $this
     */
    public function setPidList($pid_list)
    {
        $this->container['pid_list'] = $pid_list;

        return $this;
    }

    /**
     * Gets pod_id
     *
     * @return string
     */
    public function getPodId()
    {
        return $this->container['pod_id'];
    }

    /**
     * Sets pod_id
     *
     * @param string $pod_id pod_id
     *
     * @return $this
     */
    public function setPodId($pod_id)
    {
        $this->container['pod_id'] = $pod_id;

        return $this;
    }

    /**
     * Gets pod_name
     *
     * @return string
     */
    public function getPodName()
    {
        return $this->container['pod_name'];
    }

    /**
     * Sets pod_name
     *
     * @param string $pod_name pod_name
     *
     * @return $this
     */
    public function setPodName($pod_name)
    {
        $this->container['pod_name'] = $pod_name;

        return $this;
    }

    /**
     * Gets software_name
     *
     * @return string
     */
    public function getSoftwareName()
    {
        return $this->container['software_name'];
    }

    /**
     * Sets software_name
     *
     * @param string $software_name software_name
     *
     * @return $this
     */
    public function setSoftwareName($software_name)
    {
        $this->container['software_name'] = $software_name;

        return $this;
    }

    /**
     * Gets software_path
     *
     * @return string
     */
    public function getSoftwarePath()
    {
        return $this->container['software_path'];
    }

    /**
     * Sets software_path
     *
     * @param string $software_path software_path
     *
     * @return $this
     */
    public function setSoftwarePath($software_path)
    {
        $this->container['software_path'] = $software_path;

        return $this;
    }

    /**
     * Gets software_source
     *
     * @return string
     */
    public function getSoftwareSource()
    {
        return $this->container['software_source'];
    }

    /**
     * Sets software_source
     *
     * @param string $software_source software_source
     *
     * @return $this
     */
    public function setSoftwareSource($software_source)
    {
        $this->container['software_source'] = $software_source;

        return $this;
    }

    /**
     * Gets software_version
     *
     * @return string
     */
    public function getSoftwareVersion()
    {
        return $this->container['software_version'];
    }

    /**
     * Sets software_version
     *
     * @param string $software_version software_version
     *
     * @return $this
     */
    public function setSoftwareVersion($software_version)
    {
        $this->container['software_version'] = $software_version;

        return $this;
    }

    /**
     * Gets state
     *
     * @return string
     */
    public function getState()
    {
        return $this->container['state'];
    }

    /**
     * Sets state
     *
     * @param string $state state
     *
     * @return $this
     */
    public function setState($state)
    {
        $this->container['state'] = $state;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return int
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param int $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets action
     *
     * @return string
     */
    public function getAction()
    {
        return $this->container['action'];
    }

    /**
     * Sets action
     *
     * @param string $action action
     *
     * @return $this
     */
    public function setAction($action)
    {
        $this->container['action'] = $action;

        return $this;
    }

    /**
     * Gets cluster_id
     *
     * @return string
     */
    public function getClusterId()
    {
        return $this->container['cluster_id'];
    }

    /**
     * Sets cluster_id
     *
     * @param string $cluster_id cluster_id
     *
     * @return $this
     */
    public function setClusterId($cluster_id)
    {
        $this->container['cluster_id'] = $cluster_id;

        return $this;
    }

    /**
     * Gets cluster_name
     *
     * @return string
     */
    public function getClusterName()
    {
        return $this->container['cluster_name'];
    }

    /**
     * Sets cluster_name
     *
     * @param string $cluster_name cluster_name
     *
     * @return $this
     */
    public function setClusterName($cluster_name)
    {
        $this->container['cluster_name'] = $cluster_name;

        return $this;
    }

    /**
     * Gets control_time
     *
     * @return int
     */
    public function getControlTime()
    {
        return $this->container['control_time'];
    }

    /**
     * Sets control_time
     *
     * @param int $control_time control_time
     *
     * @return $this
     */
    public function setControlTime($control_time)
    {
        $this->container['control_time'] = $control_time;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return int
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param int $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets cve_id
     *
     * @return string
     */
    public function getCveId()
    {
        return $this->container['cve_id'];
    }

    /**
     * Sets cve_id
     *
     * @param string $cve_id cve_id
     *
     * @return $this
     */
    public function setCveId($cve_id)
    {
        $this->container['cve_id'] = $cve_id;

        return $this;
    }

    /**
     * Gets cwpp_id
     *
     * @return string
     */
    public function getCwppId()
    {
        return $this->container['cwpp_id'];
    }

    /**
     * Sets cwpp_id
     *
     * @param string $cwpp_id cwpp_id
     *
     * @return $this
     */
    public function setCwppId($cwpp_id)
    {
        $this->container['cwpp_id'] = $cwpp_id;

        return $this;
    }

    /**
     * Gets fix_version
     *
     * @return string
     */
    public function getFixVersion()
    {
        return $this->container['fix_version'];
    }

    /**
     * Sets fix_version
     *
     * @param string $fix_version fix_version
     *
     * @return $this
     */
    public function setFixVersion($fix_version)
    {
        $this->container['fix_version'] = $fix_version;

        return $this;
    }

    /**
     * Gets level
     *
     * @return string
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param string $level level
     *
     * @return $this
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets namespace
     *
     * @return string
     */
    public function getNamespace()
    {
        return $this->container['namespace'];
    }

    /**
     * Sets namespace
     *
     * @param string $namespace namespace
     *
     * @return $this
     */
    public function setNamespace($namespace)
    {
        $this->container['namespace'] = $namespace;

        return $this;
    }

    /**
     * Gets operate_reason
     *
     * @return string
     */
    public function getOperateReason()
    {
        return $this->container['operate_reason'];
    }

    /**
     * Sets operate_reason
     *
     * @param string $operate_reason operate_reason
     *
     * @return $this
     */
    public function setOperateReason($operate_reason)
    {
        $this->container['operate_reason'] = $operate_reason;

        return $this;
    }

    /**
     * Gets pod_hash
     *
     * @return string
     */
    public function getPodHash()
    {
        return $this->container['pod_hash'];
    }

    /**
     * Sets pod_hash
     *
     * @param string $pod_hash pod_hash
     *
     * @return $this
     */
    public function setPodHash($pod_hash)
    {
        $this->container['pod_hash'] = $pod_hash;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return string[]
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param string[] $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets vuln_name
     *
     * @return string
     */
    public function getVulnName()
    {
        return $this->container['vuln_name'];
    }

    /**
     * Sets vuln_name
     *
     * @param string $vuln_name vuln_name
     *
     * @return $this
     */
    public function setVulnName($vuln_name)
    {
        $this->container['vuln_name'] = $vuln_name;

        return $this;
    }

    /**
     * Gets vuln_type
     *
     * @return string
     */
    public function getVulnType()
    {
        return $this->container['vuln_type'];
    }

    /**
     * Sets vuln_type
     *
     * @param string $vuln_type vuln_type
     *
     * @return $this
     */
    public function setVulnType($vuln_type)
    {
        $this->container['vuln_type'] = $vuln_type;

        return $this;
    }

    /**
     * Gets workload_id
     *
     * @return string
     */
    public function getWorkloadId()
    {
        return $this->container['workload_id'];
    }

    /**
     * Sets workload_id
     *
     * @param string $workload_id workload_id
     *
     * @return $this
     */
    public function setWorkloadId($workload_id)
    {
        $this->container['workload_id'] = $workload_id;

        return $this;
    }

    /**
     * Gets workload_name
     *
     * @return string
     */
    public function getWorkloadName()
    {
        return $this->container['workload_name'];
    }

    /**
     * Sets workload_name
     *
     * @param string $workload_name workload_name
     *
     * @return $this
     */
    public function setWorkloadName($workload_name)
    {
        $this->container['workload_name'] = $workload_name;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

