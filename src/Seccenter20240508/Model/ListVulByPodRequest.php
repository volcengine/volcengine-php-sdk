<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ListVulByPodRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListVulByPodRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'agent_id' => 'string',
        'asset_id' => 'string',
        'asset_type' => 'string',
        'cloud_providers' => 'string[]',
        'cluster_id' => 'string',
        'create_time_end' => 'int',
        'create_time_start' => 'int',
        'cve_id' => 'string',
        'if_high_availability' => 'bool',
        'leaf_group_ids' => 'string[]',
        'level' => 'string[]',
        'page_number' => 'int',
        'page_size' => 'int',
        'sort_by' => 'string',
        'sort_order' => 'string',
        'status' => 'string[]',
        'tag' => 'string[]',
        'top_group_id' => 'string',
        'vuln_name' => 'string',
        'vuln_type_list' => 'string[]',
        'workload_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'agent_id' => null,
        'asset_id' => null,
        'asset_type' => null,
        'cloud_providers' => null,
        'cluster_id' => null,
        'create_time_end' => 'int32',
        'create_time_start' => 'int32',
        'cve_id' => null,
        'if_high_availability' => null,
        'leaf_group_ids' => null,
        'level' => null,
        'page_number' => 'int32',
        'page_size' => 'int32',
        'sort_by' => null,
        'sort_order' => null,
        'status' => null,
        'tag' => null,
        'top_group_id' => null,
        'vuln_name' => null,
        'vuln_type_list' => null,
        'workload_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'agent_id' => 'AgentID',
        'asset_id' => 'AssetID',
        'asset_type' => 'AssetType',
        'cloud_providers' => 'CloudProviders',
        'cluster_id' => 'ClusterID',
        'create_time_end' => 'CreateTimeEnd',
        'create_time_start' => 'CreateTimeStart',
        'cve_id' => 'CveID',
        'if_high_availability' => 'IfHighAvailability',
        'leaf_group_ids' => 'LeafGroupIDs',
        'level' => 'Level',
        'page_number' => 'PageNumber',
        'page_size' => 'PageSize',
        'sort_by' => 'SortBy',
        'sort_order' => 'SortOrder',
        'status' => 'Status',
        'tag' => 'Tag',
        'top_group_id' => 'TopGroupID',
        'vuln_name' => 'VulnName',
        'vuln_type_list' => 'VulnTypeList',
        'workload_id' => 'WorkloadID'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'agent_id' => 'setAgentId',
        'asset_id' => 'setAssetId',
        'asset_type' => 'setAssetType',
        'cloud_providers' => 'setCloudProviders',
        'cluster_id' => 'setClusterId',
        'create_time_end' => 'setCreateTimeEnd',
        'create_time_start' => 'setCreateTimeStart',
        'cve_id' => 'setCveId',
        'if_high_availability' => 'setIfHighAvailability',
        'leaf_group_ids' => 'setLeafGroupIds',
        'level' => 'setLevel',
        'page_number' => 'setPageNumber',
        'page_size' => 'setPageSize',
        'sort_by' => 'setSortBy',
        'sort_order' => 'setSortOrder',
        'status' => 'setStatus',
        'tag' => 'setTag',
        'top_group_id' => 'setTopGroupId',
        'vuln_name' => 'setVulnName',
        'vuln_type_list' => 'setVulnTypeList',
        'workload_id' => 'setWorkloadId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'agent_id' => 'getAgentId',
        'asset_id' => 'getAssetId',
        'asset_type' => 'getAssetType',
        'cloud_providers' => 'getCloudProviders',
        'cluster_id' => 'getClusterId',
        'create_time_end' => 'getCreateTimeEnd',
        'create_time_start' => 'getCreateTimeStart',
        'cve_id' => 'getCveId',
        'if_high_availability' => 'getIfHighAvailability',
        'leaf_group_ids' => 'getLeafGroupIds',
        'level' => 'getLevel',
        'page_number' => 'getPageNumber',
        'page_size' => 'getPageSize',
        'sort_by' => 'getSortBy',
        'sort_order' => 'getSortOrder',
        'status' => 'getStatus',
        'tag' => 'getTag',
        'top_group_id' => 'getTopGroupId',
        'vuln_name' => 'getVulnName',
        'vuln_type_list' => 'getVulnTypeList',
        'workload_id' => 'getWorkloadId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['agent_id'] = isset($data['agent_id']) ? $data['agent_id'] : null;
        $this->container['asset_id'] = isset($data['asset_id']) ? $data['asset_id'] : null;
        $this->container['asset_type'] = isset($data['asset_type']) ? $data['asset_type'] : null;
        $this->container['cloud_providers'] = isset($data['cloud_providers']) ? $data['cloud_providers'] : null;
        $this->container['cluster_id'] = isset($data['cluster_id']) ? $data['cluster_id'] : null;
        $this->container['create_time_end'] = isset($data['create_time_end']) ? $data['create_time_end'] : null;
        $this->container['create_time_start'] = isset($data['create_time_start']) ? $data['create_time_start'] : null;
        $this->container['cve_id'] = isset($data['cve_id']) ? $data['cve_id'] : null;
        $this->container['if_high_availability'] = isset($data['if_high_availability']) ? $data['if_high_availability'] : null;
        $this->container['leaf_group_ids'] = isset($data['leaf_group_ids']) ? $data['leaf_group_ids'] : null;
        $this->container['level'] = isset($data['level']) ? $data['level'] : null;
        $this->container['page_number'] = isset($data['page_number']) ? $data['page_number'] : null;
        $this->container['page_size'] = isset($data['page_size']) ? $data['page_size'] : null;
        $this->container['sort_by'] = isset($data['sort_by']) ? $data['sort_by'] : null;
        $this->container['sort_order'] = isset($data['sort_order']) ? $data['sort_order'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['top_group_id'] = isset($data['top_group_id']) ? $data['top_group_id'] : null;
        $this->container['vuln_name'] = isset($data['vuln_name']) ? $data['vuln_name'] : null;
        $this->container['vuln_type_list'] = isset($data['vuln_type_list']) ? $data['vuln_type_list'] : null;
        $this->container['workload_id'] = isset($data['workload_id']) ? $data['workload_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['cluster_id'] === null) {
            $invalidProperties[] = "'cluster_id' can't be null";
        }
        if ($this->container['page_number'] === null) {
            $invalidProperties[] = "'page_number' can't be null";
        }
        if ($this->container['page_size'] === null) {
            $invalidProperties[] = "'page_size' can't be null";
        }
        if ($this->container['workload_id'] === null) {
            $invalidProperties[] = "'workload_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets agent_id
     *
     * @return string
     */
    public function getAgentId()
    {
        return $this->container['agent_id'];
    }

    /**
     * Sets agent_id
     *
     * @param string $agent_id agent_id
     *
     * @return $this
     */
    public function setAgentId($agent_id)
    {
        $this->container['agent_id'] = $agent_id;

        return $this;
    }

    /**
     * Gets asset_id
     *
     * @return string
     */
    public function getAssetId()
    {
        return $this->container['asset_id'];
    }

    /**
     * Sets asset_id
     *
     * @param string $asset_id asset_id
     *
     * @return $this
     */
    public function setAssetId($asset_id)
    {
        $this->container['asset_id'] = $asset_id;

        return $this;
    }

    /**
     * Gets asset_type
     *
     * @return string
     */
    public function getAssetType()
    {
        return $this->container['asset_type'];
    }

    /**
     * Sets asset_type
     *
     * @param string $asset_type asset_type
     *
     * @return $this
     */
    public function setAssetType($asset_type)
    {
        $this->container['asset_type'] = $asset_type;

        return $this;
    }

    /**
     * Gets cloud_providers
     *
     * @return string[]
     */
    public function getCloudProviders()
    {
        return $this->container['cloud_providers'];
    }

    /**
     * Sets cloud_providers
     *
     * @param string[] $cloud_providers cloud_providers
     *
     * @return $this
     */
    public function setCloudProviders($cloud_providers)
    {
        $this->container['cloud_providers'] = $cloud_providers;

        return $this;
    }

    /**
     * Gets cluster_id
     *
     * @return string
     */
    public function getClusterId()
    {
        return $this->container['cluster_id'];
    }

    /**
     * Sets cluster_id
     *
     * @param string $cluster_id cluster_id
     *
     * @return $this
     */
    public function setClusterId($cluster_id)
    {
        $this->container['cluster_id'] = $cluster_id;

        return $this;
    }

    /**
     * Gets create_time_end
     *
     * @return int
     */
    public function getCreateTimeEnd()
    {
        return $this->container['create_time_end'];
    }

    /**
     * Sets create_time_end
     *
     * @param int $create_time_end create_time_end
     *
     * @return $this
     */
    public function setCreateTimeEnd($create_time_end)
    {
        $this->container['create_time_end'] = $create_time_end;

        return $this;
    }

    /**
     * Gets create_time_start
     *
     * @return int
     */
    public function getCreateTimeStart()
    {
        return $this->container['create_time_start'];
    }

    /**
     * Sets create_time_start
     *
     * @param int $create_time_start create_time_start
     *
     * @return $this
     */
    public function setCreateTimeStart($create_time_start)
    {
        $this->container['create_time_start'] = $create_time_start;

        return $this;
    }

    /**
     * Gets cve_id
     *
     * @return string
     */
    public function getCveId()
    {
        return $this->container['cve_id'];
    }

    /**
     * Sets cve_id
     *
     * @param string $cve_id cve_id
     *
     * @return $this
     */
    public function setCveId($cve_id)
    {
        $this->container['cve_id'] = $cve_id;

        return $this;
    }

    /**
     * Gets if_high_availability
     *
     * @return bool
     */
    public function getIfHighAvailability()
    {
        return $this->container['if_high_availability'];
    }

    /**
     * Sets if_high_availability
     *
     * @param bool $if_high_availability if_high_availability
     *
     * @return $this
     */
    public function setIfHighAvailability($if_high_availability)
    {
        $this->container['if_high_availability'] = $if_high_availability;

        return $this;
    }

    /**
     * Gets leaf_group_ids
     *
     * @return string[]
     */
    public function getLeafGroupIds()
    {
        return $this->container['leaf_group_ids'];
    }

    /**
     * Sets leaf_group_ids
     *
     * @param string[] $leaf_group_ids leaf_group_ids
     *
     * @return $this
     */
    public function setLeafGroupIds($leaf_group_ids)
    {
        $this->container['leaf_group_ids'] = $leaf_group_ids;

        return $this;
    }

    /**
     * Gets level
     *
     * @return string[]
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param string[] $level level
     *
     * @return $this
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets page_number
     *
     * @return int
     */
    public function getPageNumber()
    {
        return $this->container['page_number'];
    }

    /**
     * Sets page_number
     *
     * @param int $page_number page_number
     *
     * @return $this
     */
    public function setPageNumber($page_number)
    {
        $this->container['page_number'] = $page_number;

        return $this;
    }

    /**
     * Gets page_size
     *
     * @return int
     */
    public function getPageSize()
    {
        return $this->container['page_size'];
    }

    /**
     * Sets page_size
     *
     * @param int $page_size page_size
     *
     * @return $this
     */
    public function setPageSize($page_size)
    {
        $this->container['page_size'] = $page_size;

        return $this;
    }

    /**
     * Gets sort_by
     *
     * @return string
     */
    public function getSortBy()
    {
        return $this->container['sort_by'];
    }

    /**
     * Sets sort_by
     *
     * @param string $sort_by sort_by
     *
     * @return $this
     */
    public function setSortBy($sort_by)
    {
        $this->container['sort_by'] = $sort_by;

        return $this;
    }

    /**
     * Gets sort_order
     *
     * @return string
     */
    public function getSortOrder()
    {
        return $this->container['sort_order'];
    }

    /**
     * Sets sort_order
     *
     * @param string $sort_order sort_order
     *
     * @return $this
     */
    public function setSortOrder($sort_order)
    {
        $this->container['sort_order'] = $sort_order;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string[]
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string[] $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return string[]
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param string[] $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets top_group_id
     *
     * @return string
     */
    public function getTopGroupId()
    {
        return $this->container['top_group_id'];
    }

    /**
     * Sets top_group_id
     *
     * @param string $top_group_id top_group_id
     *
     * @return $this
     */
    public function setTopGroupId($top_group_id)
    {
        $this->container['top_group_id'] = $top_group_id;

        return $this;
    }

    /**
     * Gets vuln_name
     *
     * @return string
     */
    public function getVulnName()
    {
        return $this->container['vuln_name'];
    }

    /**
     * Sets vuln_name
     *
     * @param string $vuln_name vuln_name
     *
     * @return $this
     */
    public function setVulnName($vuln_name)
    {
        $this->container['vuln_name'] = $vuln_name;

        return $this;
    }

    /**
     * Gets vuln_type_list
     *
     * @return string[]
     */
    public function getVulnTypeList()
    {
        return $this->container['vuln_type_list'];
    }

    /**
     * Sets vuln_type_list
     *
     * @param string[] $vuln_type_list vuln_type_list
     *
     * @return $this
     */
    public function setVulnTypeList($vuln_type_list)
    {
        $this->container['vuln_type_list'] = $vuln_type_list;

        return $this;
    }

    /**
     * Gets workload_id
     *
     * @return string
     */
    public function getWorkloadId()
    {
        return $this->container['workload_id'];
    }

    /**
     * Sets workload_id
     *
     * @param string $workload_id workload_id
     *
     * @return $this
     */
    public function setWorkloadId($workload_id)
    {
        $this->container['workload_id'] = $workload_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

