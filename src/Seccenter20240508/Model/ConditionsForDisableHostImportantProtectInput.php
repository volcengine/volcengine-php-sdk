<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ConditionsForDisableHostImportantProtectInput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ConditionsForDisableHostImportantProtectInput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'agent_id' => 'string',
        'agent_id_list' => 'string[]',
        'agent_status' => 'string[]',
        'all_host' => 'bool',
        'cloud_providers' => 'string[]',
        'hostname' => 'string',
        'ip' => 'string',
        'leaf_group_ids' => 'string[]',
        'platforms' => 'string[]',
        'proxy_name' => 'string',
        'proxy_server_name' => 'string',
        'regions' => 'string[]',
        'risk' => '\Volcengine\Seccenter20240508\Model\RiskForDisableHostImportantProtectInput',
        'security_enhancement' => 'bool',
        'status' => 'string[]',
        'tags' => 'string[]',
        'top_group_id' => 'string',
        'virus_file_auto_isolate' => 'bool',
        'visibility' => 'string[]',
        'vpc_ids' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'agent_id' => null,
        'agent_id_list' => null,
        'agent_status' => null,
        'all_host' => null,
        'cloud_providers' => null,
        'hostname' => null,
        'ip' => null,
        'leaf_group_ids' => null,
        'platforms' => null,
        'proxy_name' => null,
        'proxy_server_name' => null,
        'regions' => null,
        'risk' => null,
        'security_enhancement' => null,
        'status' => null,
        'tags' => null,
        'top_group_id' => null,
        'virus_file_auto_isolate' => null,
        'visibility' => null,
        'vpc_ids' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'agent_id' => 'AgentID',
        'agent_id_list' => 'AgentIDList',
        'agent_status' => 'AgentStatus',
        'all_host' => 'AllHost',
        'cloud_providers' => 'CloudProviders',
        'hostname' => 'Hostname',
        'ip' => 'Ip',
        'leaf_group_ids' => 'LeafGroupIDs',
        'platforms' => 'Platforms',
        'proxy_name' => 'ProxyName',
        'proxy_server_name' => 'ProxyServerName',
        'regions' => 'Regions',
        'risk' => 'Risk',
        'security_enhancement' => 'SecurityEnhancement',
        'status' => 'Status',
        'tags' => 'Tags',
        'top_group_id' => 'TopGroupID',
        'virus_file_auto_isolate' => 'VirusFileAutoIsolate',
        'visibility' => 'Visibility',
        'vpc_ids' => 'VpcIds'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'agent_id' => 'setAgentId',
        'agent_id_list' => 'setAgentIdList',
        'agent_status' => 'setAgentStatus',
        'all_host' => 'setAllHost',
        'cloud_providers' => 'setCloudProviders',
        'hostname' => 'setHostname',
        'ip' => 'setIp',
        'leaf_group_ids' => 'setLeafGroupIds',
        'platforms' => 'setPlatforms',
        'proxy_name' => 'setProxyName',
        'proxy_server_name' => 'setProxyServerName',
        'regions' => 'setRegions',
        'risk' => 'setRisk',
        'security_enhancement' => 'setSecurityEnhancement',
        'status' => 'setStatus',
        'tags' => 'setTags',
        'top_group_id' => 'setTopGroupId',
        'virus_file_auto_isolate' => 'setVirusFileAutoIsolate',
        'visibility' => 'setVisibility',
        'vpc_ids' => 'setVpcIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'agent_id' => 'getAgentId',
        'agent_id_list' => 'getAgentIdList',
        'agent_status' => 'getAgentStatus',
        'all_host' => 'getAllHost',
        'cloud_providers' => 'getCloudProviders',
        'hostname' => 'getHostname',
        'ip' => 'getIp',
        'leaf_group_ids' => 'getLeafGroupIds',
        'platforms' => 'getPlatforms',
        'proxy_name' => 'getProxyName',
        'proxy_server_name' => 'getProxyServerName',
        'regions' => 'getRegions',
        'risk' => 'getRisk',
        'security_enhancement' => 'getSecurityEnhancement',
        'status' => 'getStatus',
        'tags' => 'getTags',
        'top_group_id' => 'getTopGroupId',
        'virus_file_auto_isolate' => 'getVirusFileAutoIsolate',
        'visibility' => 'getVisibility',
        'vpc_ids' => 'getVpcIds'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['agent_id'] = isset($data['agent_id']) ? $data['agent_id'] : null;
        $this->container['agent_id_list'] = isset($data['agent_id_list']) ? $data['agent_id_list'] : null;
        $this->container['agent_status'] = isset($data['agent_status']) ? $data['agent_status'] : null;
        $this->container['all_host'] = isset($data['all_host']) ? $data['all_host'] : null;
        $this->container['cloud_providers'] = isset($data['cloud_providers']) ? $data['cloud_providers'] : null;
        $this->container['hostname'] = isset($data['hostname']) ? $data['hostname'] : null;
        $this->container['ip'] = isset($data['ip']) ? $data['ip'] : null;
        $this->container['leaf_group_ids'] = isset($data['leaf_group_ids']) ? $data['leaf_group_ids'] : null;
        $this->container['platforms'] = isset($data['platforms']) ? $data['platforms'] : null;
        $this->container['proxy_name'] = isset($data['proxy_name']) ? $data['proxy_name'] : null;
        $this->container['proxy_server_name'] = isset($data['proxy_server_name']) ? $data['proxy_server_name'] : null;
        $this->container['regions'] = isset($data['regions']) ? $data['regions'] : null;
        $this->container['risk'] = isset($data['risk']) ? $data['risk'] : null;
        $this->container['security_enhancement'] = isset($data['security_enhancement']) ? $data['security_enhancement'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['top_group_id'] = isset($data['top_group_id']) ? $data['top_group_id'] : null;
        $this->container['virus_file_auto_isolate'] = isset($data['virus_file_auto_isolate']) ? $data['virus_file_auto_isolate'] : null;
        $this->container['visibility'] = isset($data['visibility']) ? $data['visibility'] : null;
        $this->container['vpc_ids'] = isset($data['vpc_ids']) ? $data['vpc_ids'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets agent_id
     *
     * @return string
     */
    public function getAgentId()
    {
        return $this->container['agent_id'];
    }

    /**
     * Sets agent_id
     *
     * @param string $agent_id agent_id
     *
     * @return $this
     */
    public function setAgentId($agent_id)
    {
        $this->container['agent_id'] = $agent_id;

        return $this;
    }

    /**
     * Gets agent_id_list
     *
     * @return string[]
     */
    public function getAgentIdList()
    {
        return $this->container['agent_id_list'];
    }

    /**
     * Sets agent_id_list
     *
     * @param string[] $agent_id_list agent_id_list
     *
     * @return $this
     */
    public function setAgentIdList($agent_id_list)
    {
        $this->container['agent_id_list'] = $agent_id_list;

        return $this;
    }

    /**
     * Gets agent_status
     *
     * @return string[]
     */
    public function getAgentStatus()
    {
        return $this->container['agent_status'];
    }

    /**
     * Sets agent_status
     *
     * @param string[] $agent_status agent_status
     *
     * @return $this
     */
    public function setAgentStatus($agent_status)
    {
        $this->container['agent_status'] = $agent_status;

        return $this;
    }

    /**
     * Gets all_host
     *
     * @return bool
     */
    public function getAllHost()
    {
        return $this->container['all_host'];
    }

    /**
     * Sets all_host
     *
     * @param bool $all_host all_host
     *
     * @return $this
     */
    public function setAllHost($all_host)
    {
        $this->container['all_host'] = $all_host;

        return $this;
    }

    /**
     * Gets cloud_providers
     *
     * @return string[]
     */
    public function getCloudProviders()
    {
        return $this->container['cloud_providers'];
    }

    /**
     * Sets cloud_providers
     *
     * @param string[] $cloud_providers cloud_providers
     *
     * @return $this
     */
    public function setCloudProviders($cloud_providers)
    {
        $this->container['cloud_providers'] = $cloud_providers;

        return $this;
    }

    /**
     * Gets hostname
     *
     * @return string
     */
    public function getHostname()
    {
        return $this->container['hostname'];
    }

    /**
     * Sets hostname
     *
     * @param string $hostname hostname
     *
     * @return $this
     */
    public function setHostname($hostname)
    {
        $this->container['hostname'] = $hostname;

        return $this;
    }

    /**
     * Gets ip
     *
     * @return string
     */
    public function getIp()
    {
        return $this->container['ip'];
    }

    /**
     * Sets ip
     *
     * @param string $ip ip
     *
     * @return $this
     */
    public function setIp($ip)
    {
        $this->container['ip'] = $ip;

        return $this;
    }

    /**
     * Gets leaf_group_ids
     *
     * @return string[]
     */
    public function getLeafGroupIds()
    {
        return $this->container['leaf_group_ids'];
    }

    /**
     * Sets leaf_group_ids
     *
     * @param string[] $leaf_group_ids leaf_group_ids
     *
     * @return $this
     */
    public function setLeafGroupIds($leaf_group_ids)
    {
        $this->container['leaf_group_ids'] = $leaf_group_ids;

        return $this;
    }

    /**
     * Gets platforms
     *
     * @return string[]
     */
    public function getPlatforms()
    {
        return $this->container['platforms'];
    }

    /**
     * Sets platforms
     *
     * @param string[] $platforms platforms
     *
     * @return $this
     */
    public function setPlatforms($platforms)
    {
        $this->container['platforms'] = $platforms;

        return $this;
    }

    /**
     * Gets proxy_name
     *
     * @return string
     */
    public function getProxyName()
    {
        return $this->container['proxy_name'];
    }

    /**
     * Sets proxy_name
     *
     * @param string $proxy_name proxy_name
     *
     * @return $this
     */
    public function setProxyName($proxy_name)
    {
        $this->container['proxy_name'] = $proxy_name;

        return $this;
    }

    /**
     * Gets proxy_server_name
     *
     * @return string
     */
    public function getProxyServerName()
    {
        return $this->container['proxy_server_name'];
    }

    /**
     * Sets proxy_server_name
     *
     * @param string $proxy_server_name proxy_server_name
     *
     * @return $this
     */
    public function setProxyServerName($proxy_server_name)
    {
        $this->container['proxy_server_name'] = $proxy_server_name;

        return $this;
    }

    /**
     * Gets regions
     *
     * @return string[]
     */
    public function getRegions()
    {
        return $this->container['regions'];
    }

    /**
     * Sets regions
     *
     * @param string[] $regions regions
     *
     * @return $this
     */
    public function setRegions($regions)
    {
        $this->container['regions'] = $regions;

        return $this;
    }

    /**
     * Gets risk
     *
     * @return \Volcengine\Seccenter20240508\Model\RiskForDisableHostImportantProtectInput
     */
    public function getRisk()
    {
        return $this->container['risk'];
    }

    /**
     * Sets risk
     *
     * @param \Volcengine\Seccenter20240508\Model\RiskForDisableHostImportantProtectInput $risk risk
     *
     * @return $this
     */
    public function setRisk($risk)
    {
        $this->container['risk'] = $risk;

        return $this;
    }

    /**
     * Gets security_enhancement
     *
     * @return bool
     */
    public function getSecurityEnhancement()
    {
        return $this->container['security_enhancement'];
    }

    /**
     * Sets security_enhancement
     *
     * @param bool $security_enhancement security_enhancement
     *
     * @return $this
     */
    public function setSecurityEnhancement($security_enhancement)
    {
        $this->container['security_enhancement'] = $security_enhancement;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string[]
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string[] $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return string[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param string[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets top_group_id
     *
     * @return string
     */
    public function getTopGroupId()
    {
        return $this->container['top_group_id'];
    }

    /**
     * Sets top_group_id
     *
     * @param string $top_group_id top_group_id
     *
     * @return $this
     */
    public function setTopGroupId($top_group_id)
    {
        $this->container['top_group_id'] = $top_group_id;

        return $this;
    }

    /**
     * Gets virus_file_auto_isolate
     *
     * @return bool
     */
    public function getVirusFileAutoIsolate()
    {
        return $this->container['virus_file_auto_isolate'];
    }

    /**
     * Sets virus_file_auto_isolate
     *
     * @param bool $virus_file_auto_isolate virus_file_auto_isolate
     *
     * @return $this
     */
    public function setVirusFileAutoIsolate($virus_file_auto_isolate)
    {
        $this->container['virus_file_auto_isolate'] = $virus_file_auto_isolate;

        return $this;
    }

    /**
     * Gets visibility
     *
     * @return string[]
     */
    public function getVisibility()
    {
        return $this->container['visibility'];
    }

    /**
     * Sets visibility
     *
     * @param string[] $visibility visibility
     *
     * @return $this
     */
    public function setVisibility($visibility)
    {
        $this->container['visibility'] = $visibility;

        return $this;
    }

    /**
     * Gets vpc_ids
     *
     * @return string[]
     */
    public function getVpcIds()
    {
        return $this->container['vpc_ids'];
    }

    /**
     * Sets vpc_ids
     *
     * @param string[] $vpc_ids vpc_ids
     *
     * @return $this
     */
    public function setVpcIds($vpc_ids)
    {
        $this->container['vpc_ids'] = $vpc_ids;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

