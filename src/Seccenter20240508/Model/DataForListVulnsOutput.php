<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class DataForListVulnsOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DataForListVulnsOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'string',
        'action' => 'string',
        'control_time' => 'int',
        'create_time' => 'int',
        'cve_id' => 'string[]',
        'cwpp_id' => 'string',
        'infect_num' => 'int',
        'infect_status' => '\Volcengine\Seccenter20240508\Model\InfectStatusForListVulnsOutput',
        'level' => 'string',
        'operate_reason' => 'string',
        'status' => 'string',
        'tag' => 'string[]',
        'update_time' => 'int',
        'vuln_name' => 'string',
        'vuln_name_en' => 'string',
        'vuln_type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => null,
        'action' => null,
        'control_time' => 'int32',
        'create_time' => 'int32',
        'cve_id' => null,
        'cwpp_id' => null,
        'infect_num' => 'int32',
        'infect_status' => null,
        'level' => null,
        'operate_reason' => null,
        'status' => null,
        'tag' => null,
        'update_time' => 'int32',
        'vuln_name' => null,
        'vuln_name_en' => null,
        'vuln_type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'AccountID',
        'action' => 'Action',
        'control_time' => 'ControlTime',
        'create_time' => 'CreateTime',
        'cve_id' => 'CveID',
        'cwpp_id' => 'CwppID',
        'infect_num' => 'InfectNum',
        'infect_status' => 'InfectStatus',
        'level' => 'Level',
        'operate_reason' => 'OperateReason',
        'status' => 'Status',
        'tag' => 'Tag',
        'update_time' => 'UpdateTime',
        'vuln_name' => 'VulnName',
        'vuln_name_en' => 'VulnNameEn',
        'vuln_type' => 'VulnType'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'action' => 'setAction',
        'control_time' => 'setControlTime',
        'create_time' => 'setCreateTime',
        'cve_id' => 'setCveId',
        'cwpp_id' => 'setCwppId',
        'infect_num' => 'setInfectNum',
        'infect_status' => 'setInfectStatus',
        'level' => 'setLevel',
        'operate_reason' => 'setOperateReason',
        'status' => 'setStatus',
        'tag' => 'setTag',
        'update_time' => 'setUpdateTime',
        'vuln_name' => 'setVulnName',
        'vuln_name_en' => 'setVulnNameEn',
        'vuln_type' => 'setVulnType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'action' => 'getAction',
        'control_time' => 'getControlTime',
        'create_time' => 'getCreateTime',
        'cve_id' => 'getCveId',
        'cwpp_id' => 'getCwppId',
        'infect_num' => 'getInfectNum',
        'infect_status' => 'getInfectStatus',
        'level' => 'getLevel',
        'operate_reason' => 'getOperateReason',
        'status' => 'getStatus',
        'tag' => 'getTag',
        'update_time' => 'getUpdateTime',
        'vuln_name' => 'getVulnName',
        'vuln_name_en' => 'getVulnNameEn',
        'vuln_type' => 'getVulnType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['action'] = isset($data['action']) ? $data['action'] : null;
        $this->container['control_time'] = isset($data['control_time']) ? $data['control_time'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['cve_id'] = isset($data['cve_id']) ? $data['cve_id'] : null;
        $this->container['cwpp_id'] = isset($data['cwpp_id']) ? $data['cwpp_id'] : null;
        $this->container['infect_num'] = isset($data['infect_num']) ? $data['infect_num'] : null;
        $this->container['infect_status'] = isset($data['infect_status']) ? $data['infect_status'] : null;
        $this->container['level'] = isset($data['level']) ? $data['level'] : null;
        $this->container['operate_reason'] = isset($data['operate_reason']) ? $data['operate_reason'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['vuln_name'] = isset($data['vuln_name']) ? $data['vuln_name'] : null;
        $this->container['vuln_name_en'] = isset($data['vuln_name_en']) ? $data['vuln_name_en'] : null;
        $this->container['vuln_type'] = isset($data['vuln_type']) ? $data['vuln_type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets action
     *
     * @return string
     */
    public function getAction()
    {
        return $this->container['action'];
    }

    /**
     * Sets action
     *
     * @param string $action action
     *
     * @return $this
     */
    public function setAction($action)
    {
        $this->container['action'] = $action;

        return $this;
    }

    /**
     * Gets control_time
     *
     * @return int
     */
    public function getControlTime()
    {
        return $this->container['control_time'];
    }

    /**
     * Sets control_time
     *
     * @param int $control_time control_time
     *
     * @return $this
     */
    public function setControlTime($control_time)
    {
        $this->container['control_time'] = $control_time;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return int
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param int $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets cve_id
     *
     * @return string[]
     */
    public function getCveId()
    {
        return $this->container['cve_id'];
    }

    /**
     * Sets cve_id
     *
     * @param string[] $cve_id cve_id
     *
     * @return $this
     */
    public function setCveId($cve_id)
    {
        $this->container['cve_id'] = $cve_id;

        return $this;
    }

    /**
     * Gets cwpp_id
     *
     * @return string
     */
    public function getCwppId()
    {
        return $this->container['cwpp_id'];
    }

    /**
     * Sets cwpp_id
     *
     * @param string $cwpp_id cwpp_id
     *
     * @return $this
     */
    public function setCwppId($cwpp_id)
    {
        $this->container['cwpp_id'] = $cwpp_id;

        return $this;
    }

    /**
     * Gets infect_num
     *
     * @return int
     */
    public function getInfectNum()
    {
        return $this->container['infect_num'];
    }

    /**
     * Sets infect_num
     *
     * @param int $infect_num infect_num
     *
     * @return $this
     */
    public function setInfectNum($infect_num)
    {
        $this->container['infect_num'] = $infect_num;

        return $this;
    }

    /**
     * Gets infect_status
     *
     * @return \Volcengine\Seccenter20240508\Model\InfectStatusForListVulnsOutput
     */
    public function getInfectStatus()
    {
        return $this->container['infect_status'];
    }

    /**
     * Sets infect_status
     *
     * @param \Volcengine\Seccenter20240508\Model\InfectStatusForListVulnsOutput $infect_status infect_status
     *
     * @return $this
     */
    public function setInfectStatus($infect_status)
    {
        $this->container['infect_status'] = $infect_status;

        return $this;
    }

    /**
     * Gets level
     *
     * @return string
     */
    public function getLevel()
    {
        return $this->container['level'];
    }

    /**
     * Sets level
     *
     * @param string $level level
     *
     * @return $this
     */
    public function setLevel($level)
    {
        $this->container['level'] = $level;

        return $this;
    }

    /**
     * Gets operate_reason
     *
     * @return string
     */
    public function getOperateReason()
    {
        return $this->container['operate_reason'];
    }

    /**
     * Sets operate_reason
     *
     * @param string $operate_reason operate_reason
     *
     * @return $this
     */
    public function setOperateReason($operate_reason)
    {
        $this->container['operate_reason'] = $operate_reason;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return string[]
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param string[] $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return int
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param int $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets vuln_name
     *
     * @return string
     */
    public function getVulnName()
    {
        return $this->container['vuln_name'];
    }

    /**
     * Sets vuln_name
     *
     * @param string $vuln_name vuln_name
     *
     * @return $this
     */
    public function setVulnName($vuln_name)
    {
        $this->container['vuln_name'] = $vuln_name;

        return $this;
    }

    /**
     * Gets vuln_name_en
     *
     * @return string
     */
    public function getVulnNameEn()
    {
        return $this->container['vuln_name_en'];
    }

    /**
     * Sets vuln_name_en
     *
     * @param string $vuln_name_en vuln_name_en
     *
     * @return $this
     */
    public function setVulnNameEn($vuln_name_en)
    {
        $this->container['vuln_name_en'] = $vuln_name_en;

        return $this;
    }

    /**
     * Gets vuln_type
     *
     * @return string
     */
    public function getVulnType()
    {
        return $this->container['vuln_type'];
    }

    /**
     * Sets vuln_type
     *
     * @param string $vuln_type vuln_type
     *
     * @return $this
     */
    public function setVulnType($vuln_type)
    {
        $this->container['vuln_type'] = $vuln_type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

