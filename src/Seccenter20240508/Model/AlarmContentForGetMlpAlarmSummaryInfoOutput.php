<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class AlarmContentForGetMlpAlarmSummaryInfoOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'AlarmContentForGetMlpAlarmSummaryInfoOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'alarm_node' => '\Volcengine\Seccenter20240508\Model\AlarmNodeForGetMlpAlarmSummaryInfoOutput',
        'audit_log_alarm' => '\Volcengine\Seccenter20240508\Model\AuditLogAlarmForGetMlpAlarmSummaryInfoOutput',
        'extend_info' => '\Volcengine\Seccenter20240508\Model\ExtendInfoForGetMlpAlarmSummaryInfoOutput',
        'file_downloadable' => 'bool',
        'kill_chain_node_list' => '\Volcengine\Seccenter20240508\Model\KillChainNodeListForGetMlpAlarmSummaryInfoOutput[]',
        'kill_chain_step_list' => 'string[]',
        'virus_hit_data_list' => '\Volcengine\Seccenter20240508\Model\VirusHitDataListForGetMlpAlarmSummaryInfoOutput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'alarm_node' => null,
        'audit_log_alarm' => null,
        'extend_info' => null,
        'file_downloadable' => null,
        'kill_chain_node_list' => null,
        'kill_chain_step_list' => null,
        'virus_hit_data_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'alarm_node' => 'AlarmNode',
        'audit_log_alarm' => 'AuditLogAlarm',
        'extend_info' => 'ExtendInfo',
        'file_downloadable' => 'FileDownloadable',
        'kill_chain_node_list' => 'KillChainNodeList',
        'kill_chain_step_list' => 'KillChainStepList',
        'virus_hit_data_list' => 'VirusHitDataList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'alarm_node' => 'setAlarmNode',
        'audit_log_alarm' => 'setAuditLogAlarm',
        'extend_info' => 'setExtendInfo',
        'file_downloadable' => 'setFileDownloadable',
        'kill_chain_node_list' => 'setKillChainNodeList',
        'kill_chain_step_list' => 'setKillChainStepList',
        'virus_hit_data_list' => 'setVirusHitDataList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'alarm_node' => 'getAlarmNode',
        'audit_log_alarm' => 'getAuditLogAlarm',
        'extend_info' => 'getExtendInfo',
        'file_downloadable' => 'getFileDownloadable',
        'kill_chain_node_list' => 'getKillChainNodeList',
        'kill_chain_step_list' => 'getKillChainStepList',
        'virus_hit_data_list' => 'getVirusHitDataList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['alarm_node'] = isset($data['alarm_node']) ? $data['alarm_node'] : null;
        $this->container['audit_log_alarm'] = isset($data['audit_log_alarm']) ? $data['audit_log_alarm'] : null;
        $this->container['extend_info'] = isset($data['extend_info']) ? $data['extend_info'] : null;
        $this->container['file_downloadable'] = isset($data['file_downloadable']) ? $data['file_downloadable'] : null;
        $this->container['kill_chain_node_list'] = isset($data['kill_chain_node_list']) ? $data['kill_chain_node_list'] : null;
        $this->container['kill_chain_step_list'] = isset($data['kill_chain_step_list']) ? $data['kill_chain_step_list'] : null;
        $this->container['virus_hit_data_list'] = isset($data['virus_hit_data_list']) ? $data['virus_hit_data_list'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets alarm_node
     *
     * @return \Volcengine\Seccenter20240508\Model\AlarmNodeForGetMlpAlarmSummaryInfoOutput
     */
    public function getAlarmNode()
    {
        return $this->container['alarm_node'];
    }

    /**
     * Sets alarm_node
     *
     * @param \Volcengine\Seccenter20240508\Model\AlarmNodeForGetMlpAlarmSummaryInfoOutput $alarm_node alarm_node
     *
     * @return $this
     */
    public function setAlarmNode($alarm_node)
    {
        $this->container['alarm_node'] = $alarm_node;

        return $this;
    }

    /**
     * Gets audit_log_alarm
     *
     * @return \Volcengine\Seccenter20240508\Model\AuditLogAlarmForGetMlpAlarmSummaryInfoOutput
     */
    public function getAuditLogAlarm()
    {
        return $this->container['audit_log_alarm'];
    }

    /**
     * Sets audit_log_alarm
     *
     * @param \Volcengine\Seccenter20240508\Model\AuditLogAlarmForGetMlpAlarmSummaryInfoOutput $audit_log_alarm audit_log_alarm
     *
     * @return $this
     */
    public function setAuditLogAlarm($audit_log_alarm)
    {
        $this->container['audit_log_alarm'] = $audit_log_alarm;

        return $this;
    }

    /**
     * Gets extend_info
     *
     * @return \Volcengine\Seccenter20240508\Model\ExtendInfoForGetMlpAlarmSummaryInfoOutput
     */
    public function getExtendInfo()
    {
        return $this->container['extend_info'];
    }

    /**
     * Sets extend_info
     *
     * @param \Volcengine\Seccenter20240508\Model\ExtendInfoForGetMlpAlarmSummaryInfoOutput $extend_info extend_info
     *
     * @return $this
     */
    public function setExtendInfo($extend_info)
    {
        $this->container['extend_info'] = $extend_info;

        return $this;
    }

    /**
     * Gets file_downloadable
     *
     * @return bool
     */
    public function getFileDownloadable()
    {
        return $this->container['file_downloadable'];
    }

    /**
     * Sets file_downloadable
     *
     * @param bool $file_downloadable file_downloadable
     *
     * @return $this
     */
    public function setFileDownloadable($file_downloadable)
    {
        $this->container['file_downloadable'] = $file_downloadable;

        return $this;
    }

    /**
     * Gets kill_chain_node_list
     *
     * @return \Volcengine\Seccenter20240508\Model\KillChainNodeListForGetMlpAlarmSummaryInfoOutput[]
     */
    public function getKillChainNodeList()
    {
        return $this->container['kill_chain_node_list'];
    }

    /**
     * Sets kill_chain_node_list
     *
     * @param \Volcengine\Seccenter20240508\Model\KillChainNodeListForGetMlpAlarmSummaryInfoOutput[] $kill_chain_node_list kill_chain_node_list
     *
     * @return $this
     */
    public function setKillChainNodeList($kill_chain_node_list)
    {
        $this->container['kill_chain_node_list'] = $kill_chain_node_list;

        return $this;
    }

    /**
     * Gets kill_chain_step_list
     *
     * @return string[]
     */
    public function getKillChainStepList()
    {
        return $this->container['kill_chain_step_list'];
    }

    /**
     * Sets kill_chain_step_list
     *
     * @param string[] $kill_chain_step_list kill_chain_step_list
     *
     * @return $this
     */
    public function setKillChainStepList($kill_chain_step_list)
    {
        $this->container['kill_chain_step_list'] = $kill_chain_step_list;

        return $this;
    }

    /**
     * Gets virus_hit_data_list
     *
     * @return \Volcengine\Seccenter20240508\Model\VirusHitDataListForGetMlpAlarmSummaryInfoOutput[]
     */
    public function getVirusHitDataList()
    {
        return $this->container['virus_hit_data_list'];
    }

    /**
     * Sets virus_hit_data_list
     *
     * @param \Volcengine\Seccenter20240508\Model\VirusHitDataListForGetMlpAlarmSummaryInfoOutput[] $virus_hit_data_list virus_hit_data_list
     *
     * @return $this
     */
    public function setVirusHitDataList($virus_hit_data_list)
    {
        $this->container['virus_hit_data_list'] = $virus_hit_data_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

