<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class GetSecurityOverviewResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'GetSecurityOverviewResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'baseline_risk' => '\Volcengine\Seccenter20240508\Model\BaselineRiskForGetSecurityOverviewOutput',
        'container_intrusion' => '\Volcengine\Seccenter20240508\Model\ContainerIntrusionForGetSecurityOverviewOutput',
        'host_intrusion' => '\Volcengine\Seccenter20240508\Model\HostIntrusionForGetSecurityOverviewOutput',
        'rasp_intrusion' => '\Volcengine\Seccenter20240508\Model\RaspIntrusionForGetSecurityOverviewOutput',
        'virus_file' => '\Volcengine\Seccenter20240508\Model\VirusFileForGetSecurityOverviewOutput',
        'vuln_risk' => '\Volcengine\Seccenter20240508\Model\VulnRiskForGetSecurityOverviewOutput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'baseline_risk' => null,
        'container_intrusion' => null,
        'host_intrusion' => null,
        'rasp_intrusion' => null,
        'virus_file' => null,
        'vuln_risk' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'baseline_risk' => 'BaselineRisk',
        'container_intrusion' => 'ContainerIntrusion',
        'host_intrusion' => 'HostIntrusion',
        'rasp_intrusion' => 'RaspIntrusion',
        'virus_file' => 'VirusFile',
        'vuln_risk' => 'VulnRisk'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'baseline_risk' => 'setBaselineRisk',
        'container_intrusion' => 'setContainerIntrusion',
        'host_intrusion' => 'setHostIntrusion',
        'rasp_intrusion' => 'setRaspIntrusion',
        'virus_file' => 'setVirusFile',
        'vuln_risk' => 'setVulnRisk'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'baseline_risk' => 'getBaselineRisk',
        'container_intrusion' => 'getContainerIntrusion',
        'host_intrusion' => 'getHostIntrusion',
        'rasp_intrusion' => 'getRaspIntrusion',
        'virus_file' => 'getVirusFile',
        'vuln_risk' => 'getVulnRisk'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['baseline_risk'] = isset($data['baseline_risk']) ? $data['baseline_risk'] : null;
        $this->container['container_intrusion'] = isset($data['container_intrusion']) ? $data['container_intrusion'] : null;
        $this->container['host_intrusion'] = isset($data['host_intrusion']) ? $data['host_intrusion'] : null;
        $this->container['rasp_intrusion'] = isset($data['rasp_intrusion']) ? $data['rasp_intrusion'] : null;
        $this->container['virus_file'] = isset($data['virus_file']) ? $data['virus_file'] : null;
        $this->container['vuln_risk'] = isset($data['vuln_risk']) ? $data['vuln_risk'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets baseline_risk
     *
     * @return \Volcengine\Seccenter20240508\Model\BaselineRiskForGetSecurityOverviewOutput
     */
    public function getBaselineRisk()
    {
        return $this->container['baseline_risk'];
    }

    /**
     * Sets baseline_risk
     *
     * @param \Volcengine\Seccenter20240508\Model\BaselineRiskForGetSecurityOverviewOutput $baseline_risk baseline_risk
     *
     * @return $this
     */
    public function setBaselineRisk($baseline_risk)
    {
        $this->container['baseline_risk'] = $baseline_risk;

        return $this;
    }

    /**
     * Gets container_intrusion
     *
     * @return \Volcengine\Seccenter20240508\Model\ContainerIntrusionForGetSecurityOverviewOutput
     */
    public function getContainerIntrusion()
    {
        return $this->container['container_intrusion'];
    }

    /**
     * Sets container_intrusion
     *
     * @param \Volcengine\Seccenter20240508\Model\ContainerIntrusionForGetSecurityOverviewOutput $container_intrusion container_intrusion
     *
     * @return $this
     */
    public function setContainerIntrusion($container_intrusion)
    {
        $this->container['container_intrusion'] = $container_intrusion;

        return $this;
    }

    /**
     * Gets host_intrusion
     *
     * @return \Volcengine\Seccenter20240508\Model\HostIntrusionForGetSecurityOverviewOutput
     */
    public function getHostIntrusion()
    {
        return $this->container['host_intrusion'];
    }

    /**
     * Sets host_intrusion
     *
     * @param \Volcengine\Seccenter20240508\Model\HostIntrusionForGetSecurityOverviewOutput $host_intrusion host_intrusion
     *
     * @return $this
     */
    public function setHostIntrusion($host_intrusion)
    {
        $this->container['host_intrusion'] = $host_intrusion;

        return $this;
    }

    /**
     * Gets rasp_intrusion
     *
     * @return \Volcengine\Seccenter20240508\Model\RaspIntrusionForGetSecurityOverviewOutput
     */
    public function getRaspIntrusion()
    {
        return $this->container['rasp_intrusion'];
    }

    /**
     * Sets rasp_intrusion
     *
     * @param \Volcengine\Seccenter20240508\Model\RaspIntrusionForGetSecurityOverviewOutput $rasp_intrusion rasp_intrusion
     *
     * @return $this
     */
    public function setRaspIntrusion($rasp_intrusion)
    {
        $this->container['rasp_intrusion'] = $rasp_intrusion;

        return $this;
    }

    /**
     * Gets virus_file
     *
     * @return \Volcengine\Seccenter20240508\Model\VirusFileForGetSecurityOverviewOutput
     */
    public function getVirusFile()
    {
        return $this->container['virus_file'];
    }

    /**
     * Sets virus_file
     *
     * @param \Volcengine\Seccenter20240508\Model\VirusFileForGetSecurityOverviewOutput $virus_file virus_file
     *
     * @return $this
     */
    public function setVirusFile($virus_file)
    {
        $this->container['virus_file'] = $virus_file;

        return $this;
    }

    /**
     * Gets vuln_risk
     *
     * @return \Volcengine\Seccenter20240508\Model\VulnRiskForGetSecurityOverviewOutput
     */
    public function getVulnRisk()
    {
        return $this->container['vuln_risk'];
    }

    /**
     * Sets vuln_risk
     *
     * @param \Volcengine\Seccenter20240508\Model\VulnRiskForGetSecurityOverviewOutput $vuln_risk vuln_risk
     *
     * @return $this
     */
    public function setVulnRisk($vuln_risk)
    {
        $this->container['vuln_risk'] = $vuln_risk;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

