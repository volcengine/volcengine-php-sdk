<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Seccenter20240508\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class BaselineListForListBaselinesOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'BaselineListForListBaselinesOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'affected_host' => 'int',
        'baseline_id' => 'int',
        'baseline_name' => 'string',
        'baseline_name_en' => 'string',
        'check_list_num' => 'int',
        'detect_progress' => 'int',
        'detect_status' => 'string',
        'last_detected_time' => 'int',
        'risk_num' => '\Volcengine\Seccenter20240508\Model\RiskNumForListBaselinesOutput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'affected_host' => 'int32',
        'baseline_id' => 'int32',
        'baseline_name' => null,
        'baseline_name_en' => null,
        'check_list_num' => 'int32',
        'detect_progress' => 'int32',
        'detect_status' => null,
        'last_detected_time' => 'int32',
        'risk_num' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'affected_host' => 'AffectedHost',
        'baseline_id' => 'BaselineID',
        'baseline_name' => 'BaselineName',
        'baseline_name_en' => 'BaselineNameEn',
        'check_list_num' => 'CheckListNum',
        'detect_progress' => 'DetectProgress',
        'detect_status' => 'DetectStatus',
        'last_detected_time' => 'LastDetectedTime',
        'risk_num' => 'RiskNum'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'affected_host' => 'setAffectedHost',
        'baseline_id' => 'setBaselineId',
        'baseline_name' => 'setBaselineName',
        'baseline_name_en' => 'setBaselineNameEn',
        'check_list_num' => 'setCheckListNum',
        'detect_progress' => 'setDetectProgress',
        'detect_status' => 'setDetectStatus',
        'last_detected_time' => 'setLastDetectedTime',
        'risk_num' => 'setRiskNum'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'affected_host' => 'getAffectedHost',
        'baseline_id' => 'getBaselineId',
        'baseline_name' => 'getBaselineName',
        'baseline_name_en' => 'getBaselineNameEn',
        'check_list_num' => 'getCheckListNum',
        'detect_progress' => 'getDetectProgress',
        'detect_status' => 'getDetectStatus',
        'last_detected_time' => 'getLastDetectedTime',
        'risk_num' => 'getRiskNum'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['affected_host'] = isset($data['affected_host']) ? $data['affected_host'] : null;
        $this->container['baseline_id'] = isset($data['baseline_id']) ? $data['baseline_id'] : null;
        $this->container['baseline_name'] = isset($data['baseline_name']) ? $data['baseline_name'] : null;
        $this->container['baseline_name_en'] = isset($data['baseline_name_en']) ? $data['baseline_name_en'] : null;
        $this->container['check_list_num'] = isset($data['check_list_num']) ? $data['check_list_num'] : null;
        $this->container['detect_progress'] = isset($data['detect_progress']) ? $data['detect_progress'] : null;
        $this->container['detect_status'] = isset($data['detect_status']) ? $data['detect_status'] : null;
        $this->container['last_detected_time'] = isset($data['last_detected_time']) ? $data['last_detected_time'] : null;
        $this->container['risk_num'] = isset($data['risk_num']) ? $data['risk_num'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets affected_host
     *
     * @return int
     */
    public function getAffectedHost()
    {
        return $this->container['affected_host'];
    }

    /**
     * Sets affected_host
     *
     * @param int $affected_host affected_host
     *
     * @return $this
     */
    public function setAffectedHost($affected_host)
    {
        $this->container['affected_host'] = $affected_host;

        return $this;
    }

    /**
     * Gets baseline_id
     *
     * @return int
     */
    public function getBaselineId()
    {
        return $this->container['baseline_id'];
    }

    /**
     * Sets baseline_id
     *
     * @param int $baseline_id baseline_id
     *
     * @return $this
     */
    public function setBaselineId($baseline_id)
    {
        $this->container['baseline_id'] = $baseline_id;

        return $this;
    }

    /**
     * Gets baseline_name
     *
     * @return string
     */
    public function getBaselineName()
    {
        return $this->container['baseline_name'];
    }

    /**
     * Sets baseline_name
     *
     * @param string $baseline_name baseline_name
     *
     * @return $this
     */
    public function setBaselineName($baseline_name)
    {
        $this->container['baseline_name'] = $baseline_name;

        return $this;
    }

    /**
     * Gets baseline_name_en
     *
     * @return string
     */
    public function getBaselineNameEn()
    {
        return $this->container['baseline_name_en'];
    }

    /**
     * Sets baseline_name_en
     *
     * @param string $baseline_name_en baseline_name_en
     *
     * @return $this
     */
    public function setBaselineNameEn($baseline_name_en)
    {
        $this->container['baseline_name_en'] = $baseline_name_en;

        return $this;
    }

    /**
     * Gets check_list_num
     *
     * @return int
     */
    public function getCheckListNum()
    {
        return $this->container['check_list_num'];
    }

    /**
     * Sets check_list_num
     *
     * @param int $check_list_num check_list_num
     *
     * @return $this
     */
    public function setCheckListNum($check_list_num)
    {
        $this->container['check_list_num'] = $check_list_num;

        return $this;
    }

    /**
     * Gets detect_progress
     *
     * @return int
     */
    public function getDetectProgress()
    {
        return $this->container['detect_progress'];
    }

    /**
     * Sets detect_progress
     *
     * @param int $detect_progress detect_progress
     *
     * @return $this
     */
    public function setDetectProgress($detect_progress)
    {
        $this->container['detect_progress'] = $detect_progress;

        return $this;
    }

    /**
     * Gets detect_status
     *
     * @return string
     */
    public function getDetectStatus()
    {
        return $this->container['detect_status'];
    }

    /**
     * Sets detect_status
     *
     * @param string $detect_status detect_status
     *
     * @return $this
     */
    public function setDetectStatus($detect_status)
    {
        $this->container['detect_status'] = $detect_status;

        return $this;
    }

    /**
     * Gets last_detected_time
     *
     * @return int
     */
    public function getLastDetectedTime()
    {
        return $this->container['last_detected_time'];
    }

    /**
     * Sets last_detected_time
     *
     * @param int $last_detected_time last_detected_time
     *
     * @return $this
     */
    public function setLastDetectedTime($last_detected_time)
    {
        $this->container['last_detected_time'] = $last_detected_time;

        return $this;
    }

    /**
     * Gets risk_num
     *
     * @return \Volcengine\Seccenter20240508\Model\RiskNumForListBaselinesOutput
     */
    public function getRiskNum()
    {
        return $this->container['risk_num'];
    }

    /**
     * Sets risk_num
     *
     * @param \Volcengine\Seccenter20240508\Model\RiskNumForListBaselinesOutput $risk_num risk_num
     *
     * @return $this
     */
    public function setRiskNum($risk_num)
    {
        $this->container['risk_num'] = $risk_num;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

