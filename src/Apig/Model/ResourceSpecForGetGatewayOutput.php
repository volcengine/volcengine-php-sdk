<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Apig\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ResourceSpecForGetGatewayOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ResourceSpecForGetGatewayOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'clb_spec_code' => 'string',
        'instance_spec_code' => 'string',
        'network_type' => '\Volcengine\Apig\Model\NetworkTypeForGetGatewayOutput',
        'public_network_bandwidth' => 'int',
        'public_network_billing_type' => 'string',
        'replicas' => 'int'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'clb_spec_code' => null,
        'instance_spec_code' => null,
        'network_type' => null,
        'public_network_bandwidth' => 'int32',
        'public_network_billing_type' => null,
        'replicas' => 'int32'
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'clb_spec_code' => 'CLBSpecCode',
        'instance_spec_code' => 'InstanceSpecCode',
        'network_type' => 'NetworkType',
        'public_network_bandwidth' => 'PublicNetworkBandwidth',
        'public_network_billing_type' => 'PublicNetworkBillingType',
        'replicas' => 'Replicas'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'clb_spec_code' => 'setClbSpecCode',
        'instance_spec_code' => 'setInstanceSpecCode',
        'network_type' => 'setNetworkType',
        'public_network_bandwidth' => 'setPublicNetworkBandwidth',
        'public_network_billing_type' => 'setPublicNetworkBillingType',
        'replicas' => 'setReplicas'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'clb_spec_code' => 'getClbSpecCode',
        'instance_spec_code' => 'getInstanceSpecCode',
        'network_type' => 'getNetworkType',
        'public_network_bandwidth' => 'getPublicNetworkBandwidth',
        'public_network_billing_type' => 'getPublicNetworkBillingType',
        'replicas' => 'getReplicas'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['clb_spec_code'] = isset($data['clb_spec_code']) ? $data['clb_spec_code'] : null;
        $this->container['instance_spec_code'] = isset($data['instance_spec_code']) ? $data['instance_spec_code'] : null;
        $this->container['network_type'] = isset($data['network_type']) ? $data['network_type'] : null;
        $this->container['public_network_bandwidth'] = isset($data['public_network_bandwidth']) ? $data['public_network_bandwidth'] : null;
        $this->container['public_network_billing_type'] = isset($data['public_network_billing_type']) ? $data['public_network_billing_type'] : null;
        $this->container['replicas'] = isset($data['replicas']) ? $data['replicas'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets clb_spec_code
     *
     * @return string
     */
    public function getClbSpecCode()
    {
        return $this->container['clb_spec_code'];
    }

    /**
     * Sets clb_spec_code
     *
     * @param string $clb_spec_code clb_spec_code
     *
     * @return $this
     */
    public function setClbSpecCode($clb_spec_code)
    {
        $this->container['clb_spec_code'] = $clb_spec_code;

        return $this;
    }

    /**
     * Gets instance_spec_code
     *
     * @return string
     */
    public function getInstanceSpecCode()
    {
        return $this->container['instance_spec_code'];
    }

    /**
     * Sets instance_spec_code
     *
     * @param string $instance_spec_code instance_spec_code
     *
     * @return $this
     */
    public function setInstanceSpecCode($instance_spec_code)
    {
        $this->container['instance_spec_code'] = $instance_spec_code;

        return $this;
    }

    /**
     * Gets network_type
     *
     * @return \Volcengine\Apig\Model\NetworkTypeForGetGatewayOutput
     */
    public function getNetworkType()
    {
        return $this->container['network_type'];
    }

    /**
     * Sets network_type
     *
     * @param \Volcengine\Apig\Model\NetworkTypeForGetGatewayOutput $network_type network_type
     *
     * @return $this
     */
    public function setNetworkType($network_type)
    {
        $this->container['network_type'] = $network_type;

        return $this;
    }

    /**
     * Gets public_network_bandwidth
     *
     * @return int
     */
    public function getPublicNetworkBandwidth()
    {
        return $this->container['public_network_bandwidth'];
    }

    /**
     * Sets public_network_bandwidth
     *
     * @param int $public_network_bandwidth public_network_bandwidth
     *
     * @return $this
     */
    public function setPublicNetworkBandwidth($public_network_bandwidth)
    {
        $this->container['public_network_bandwidth'] = $public_network_bandwidth;

        return $this;
    }

    /**
     * Gets public_network_billing_type
     *
     * @return string
     */
    public function getPublicNetworkBillingType()
    {
        return $this->container['public_network_billing_type'];
    }

    /**
     * Sets public_network_billing_type
     *
     * @param string $public_network_billing_type public_network_billing_type
     *
     * @return $this
     */
    public function setPublicNetworkBillingType($public_network_billing_type)
    {
        $this->container['public_network_billing_type'] = $public_network_billing_type;

        return $this;
    }

    /**
     * Gets replicas
     *
     * @return int
     */
    public function getReplicas()
    {
        return $this->container['replicas'];
    }

    /**
     * Sets replicas
     *
     * @param int $replicas replicas
     *
     * @return $this
     */
    public function setReplicas($replicas)
    {
        $this->container['replicas'] = $replicas;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

