<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Rdsmysqlv2\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class InstanceForDescribeDBInstancesOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InstanceForDescribeDBInstancesOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'address_object' => '\Volcengine\Rdsmysqlv2\Model\AddressObjectForDescribeDBInstancesOutput[]',
        'allow_list_version' => 'string',
        'charge_detail' => '\Volcengine\Rdsmysqlv2\Model\ChargeDetailForDescribeDBInstancesOutput',
        'create_time' => 'string',
        'current_kernel_version' => 'string',
        'db_engine_version' => 'string',
        'deletion_protection' => 'string',
        'dr_dts_task_id' => 'string',
        'instance_id' => 'string',
        'instance_name' => 'string',
        'instance_status' => 'string',
        'instance_type' => 'string',
        'lower_case_table_names' => 'string',
        'maintenance_window' => '\Volcengine\Rdsmysqlv2\Model\MaintenanceWindowForDescribeDBInstancesOutput',
        'node_cpu_used_percentage' => 'double',
        'node_memory_used_percentage' => 'double',
        'node_number' => 'int',
        'node_space_used_percentage' => 'double',
        'node_spec' => 'string',
        'project_name' => 'string',
        'region_id' => 'string',
        'storage_space' => 'int',
        'storage_type' => 'string',
        'subnet_id' => 'string',
        'tags' => '\Volcengine\Rdsmysqlv2\Model\TagForDescribeDBInstancesOutput[]',
        'time_zone' => 'string',
        'vpc_id' => 'string',
        'zone_id' => 'string',
        'zone_ids' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'address_object' => null,
        'allow_list_version' => null,
        'charge_detail' => null,
        'create_time' => null,
        'current_kernel_version' => null,
        'db_engine_version' => null,
        'deletion_protection' => null,
        'dr_dts_task_id' => null,
        'instance_id' => null,
        'instance_name' => null,
        'instance_status' => null,
        'instance_type' => null,
        'lower_case_table_names' => null,
        'maintenance_window' => null,
        'node_cpu_used_percentage' => 'double',
        'node_memory_used_percentage' => 'double',
        'node_number' => 'int32',
        'node_space_used_percentage' => 'double',
        'node_spec' => null,
        'project_name' => null,
        'region_id' => null,
        'storage_space' => 'int32',
        'storage_type' => null,
        'subnet_id' => null,
        'tags' => null,
        'time_zone' => null,
        'vpc_id' => null,
        'zone_id' => null,
        'zone_ids' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address_object' => 'AddressObject',
        'allow_list_version' => 'AllowListVersion',
        'charge_detail' => 'ChargeDetail',
        'create_time' => 'CreateTime',
        'current_kernel_version' => 'CurrentKernelVersion',
        'db_engine_version' => 'DBEngineVersion',
        'deletion_protection' => 'DeletionProtection',
        'dr_dts_task_id' => 'DrDtsTaskId',
        'instance_id' => 'InstanceId',
        'instance_name' => 'InstanceName',
        'instance_status' => 'InstanceStatus',
        'instance_type' => 'InstanceType',
        'lower_case_table_names' => 'LowerCaseTableNames',
        'maintenance_window' => 'MaintenanceWindow',
        'node_cpu_used_percentage' => 'NodeCPUUsedPercentage',
        'node_memory_used_percentage' => 'NodeMemoryUsedPercentage',
        'node_number' => 'NodeNumber',
        'node_space_used_percentage' => 'NodeSpaceUsedPercentage',
        'node_spec' => 'NodeSpec',
        'project_name' => 'ProjectName',
        'region_id' => 'RegionId',
        'storage_space' => 'StorageSpace',
        'storage_type' => 'StorageType',
        'subnet_id' => 'SubnetId',
        'tags' => 'Tags',
        'time_zone' => 'TimeZone',
        'vpc_id' => 'VpcId',
        'zone_id' => 'ZoneId',
        'zone_ids' => 'ZoneIds'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address_object' => 'setAddressObject',
        'allow_list_version' => 'setAllowListVersion',
        'charge_detail' => 'setChargeDetail',
        'create_time' => 'setCreateTime',
        'current_kernel_version' => 'setCurrentKernelVersion',
        'db_engine_version' => 'setDbEngineVersion',
        'deletion_protection' => 'setDeletionProtection',
        'dr_dts_task_id' => 'setDrDtsTaskId',
        'instance_id' => 'setInstanceId',
        'instance_name' => 'setInstanceName',
        'instance_status' => 'setInstanceStatus',
        'instance_type' => 'setInstanceType',
        'lower_case_table_names' => 'setLowerCaseTableNames',
        'maintenance_window' => 'setMaintenanceWindow',
        'node_cpu_used_percentage' => 'setNodeCpuUsedPercentage',
        'node_memory_used_percentage' => 'setNodeMemoryUsedPercentage',
        'node_number' => 'setNodeNumber',
        'node_space_used_percentage' => 'setNodeSpaceUsedPercentage',
        'node_spec' => 'setNodeSpec',
        'project_name' => 'setProjectName',
        'region_id' => 'setRegionId',
        'storage_space' => 'setStorageSpace',
        'storage_type' => 'setStorageType',
        'subnet_id' => 'setSubnetId',
        'tags' => 'setTags',
        'time_zone' => 'setTimeZone',
        'vpc_id' => 'setVpcId',
        'zone_id' => 'setZoneId',
        'zone_ids' => 'setZoneIds'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address_object' => 'getAddressObject',
        'allow_list_version' => 'getAllowListVersion',
        'charge_detail' => 'getChargeDetail',
        'create_time' => 'getCreateTime',
        'current_kernel_version' => 'getCurrentKernelVersion',
        'db_engine_version' => 'getDbEngineVersion',
        'deletion_protection' => 'getDeletionProtection',
        'dr_dts_task_id' => 'getDrDtsTaskId',
        'instance_id' => 'getInstanceId',
        'instance_name' => 'getInstanceName',
        'instance_status' => 'getInstanceStatus',
        'instance_type' => 'getInstanceType',
        'lower_case_table_names' => 'getLowerCaseTableNames',
        'maintenance_window' => 'getMaintenanceWindow',
        'node_cpu_used_percentage' => 'getNodeCpuUsedPercentage',
        'node_memory_used_percentage' => 'getNodeMemoryUsedPercentage',
        'node_number' => 'getNodeNumber',
        'node_space_used_percentage' => 'getNodeSpaceUsedPercentage',
        'node_spec' => 'getNodeSpec',
        'project_name' => 'getProjectName',
        'region_id' => 'getRegionId',
        'storage_space' => 'getStorageSpace',
        'storage_type' => 'getStorageType',
        'subnet_id' => 'getSubnetId',
        'tags' => 'getTags',
        'time_zone' => 'getTimeZone',
        'vpc_id' => 'getVpcId',
        'zone_id' => 'getZoneId',
        'zone_ids' => 'getZoneIds'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['address_object'] = isset($data['address_object']) ? $data['address_object'] : null;
        $this->container['allow_list_version'] = isset($data['allow_list_version']) ? $data['allow_list_version'] : null;
        $this->container['charge_detail'] = isset($data['charge_detail']) ? $data['charge_detail'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['current_kernel_version'] = isset($data['current_kernel_version']) ? $data['current_kernel_version'] : null;
        $this->container['db_engine_version'] = isset($data['db_engine_version']) ? $data['db_engine_version'] : null;
        $this->container['deletion_protection'] = isset($data['deletion_protection']) ? $data['deletion_protection'] : null;
        $this->container['dr_dts_task_id'] = isset($data['dr_dts_task_id']) ? $data['dr_dts_task_id'] : null;
        $this->container['instance_id'] = isset($data['instance_id']) ? $data['instance_id'] : null;
        $this->container['instance_name'] = isset($data['instance_name']) ? $data['instance_name'] : null;
        $this->container['instance_status'] = isset($data['instance_status']) ? $data['instance_status'] : null;
        $this->container['instance_type'] = isset($data['instance_type']) ? $data['instance_type'] : null;
        $this->container['lower_case_table_names'] = isset($data['lower_case_table_names']) ? $data['lower_case_table_names'] : null;
        $this->container['maintenance_window'] = isset($data['maintenance_window']) ? $data['maintenance_window'] : null;
        $this->container['node_cpu_used_percentage'] = isset($data['node_cpu_used_percentage']) ? $data['node_cpu_used_percentage'] : null;
        $this->container['node_memory_used_percentage'] = isset($data['node_memory_used_percentage']) ? $data['node_memory_used_percentage'] : null;
        $this->container['node_number'] = isset($data['node_number']) ? $data['node_number'] : null;
        $this->container['node_space_used_percentage'] = isset($data['node_space_used_percentage']) ? $data['node_space_used_percentage'] : null;
        $this->container['node_spec'] = isset($data['node_spec']) ? $data['node_spec'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['region_id'] = isset($data['region_id']) ? $data['region_id'] : null;
        $this->container['storage_space'] = isset($data['storage_space']) ? $data['storage_space'] : null;
        $this->container['storage_type'] = isset($data['storage_type']) ? $data['storage_type'] : null;
        $this->container['subnet_id'] = isset($data['subnet_id']) ? $data['subnet_id'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['time_zone'] = isset($data['time_zone']) ? $data['time_zone'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
        $this->container['zone_id'] = isset($data['zone_id']) ? $data['zone_id'] : null;
        $this->container['zone_ids'] = isset($data['zone_ids']) ? $data['zone_ids'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address_object
     *
     * @return \Volcengine\Rdsmysqlv2\Model\AddressObjectForDescribeDBInstancesOutput[]
     */
    public function getAddressObject()
    {
        return $this->container['address_object'];
    }

    /**
     * Sets address_object
     *
     * @param \Volcengine\Rdsmysqlv2\Model\AddressObjectForDescribeDBInstancesOutput[] $address_object address_object
     *
     * @return $this
     */
    public function setAddressObject($address_object)
    {
        $this->container['address_object'] = $address_object;

        return $this;
    }

    /**
     * Gets allow_list_version
     *
     * @return string
     */
    public function getAllowListVersion()
    {
        return $this->container['allow_list_version'];
    }

    /**
     * Sets allow_list_version
     *
     * @param string $allow_list_version allow_list_version
     *
     * @return $this
     */
    public function setAllowListVersion($allow_list_version)
    {
        $this->container['allow_list_version'] = $allow_list_version;

        return $this;
    }

    /**
     * Gets charge_detail
     *
     * @return \Volcengine\Rdsmysqlv2\Model\ChargeDetailForDescribeDBInstancesOutput
     */
    public function getChargeDetail()
    {
        return $this->container['charge_detail'];
    }

    /**
     * Sets charge_detail
     *
     * @param \Volcengine\Rdsmysqlv2\Model\ChargeDetailForDescribeDBInstancesOutput $charge_detail charge_detail
     *
     * @return $this
     */
    public function setChargeDetail($charge_detail)
    {
        $this->container['charge_detail'] = $charge_detail;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets current_kernel_version
     *
     * @return string
     */
    public function getCurrentKernelVersion()
    {
        return $this->container['current_kernel_version'];
    }

    /**
     * Sets current_kernel_version
     *
     * @param string $current_kernel_version current_kernel_version
     *
     * @return $this
     */
    public function setCurrentKernelVersion($current_kernel_version)
    {
        $this->container['current_kernel_version'] = $current_kernel_version;

        return $this;
    }

    /**
     * Gets db_engine_version
     *
     * @return string
     */
    public function getDbEngineVersion()
    {
        return $this->container['db_engine_version'];
    }

    /**
     * Sets db_engine_version
     *
     * @param string $db_engine_version db_engine_version
     *
     * @return $this
     */
    public function setDbEngineVersion($db_engine_version)
    {
        $this->container['db_engine_version'] = $db_engine_version;

        return $this;
    }

    /**
     * Gets deletion_protection
     *
     * @return string
     */
    public function getDeletionProtection()
    {
        return $this->container['deletion_protection'];
    }

    /**
     * Sets deletion_protection
     *
     * @param string $deletion_protection deletion_protection
     *
     * @return $this
     */
    public function setDeletionProtection($deletion_protection)
    {
        $this->container['deletion_protection'] = $deletion_protection;

        return $this;
    }

    /**
     * Gets dr_dts_task_id
     *
     * @return string
     */
    public function getDrDtsTaskId()
    {
        return $this->container['dr_dts_task_id'];
    }

    /**
     * Sets dr_dts_task_id
     *
     * @param string $dr_dts_task_id dr_dts_task_id
     *
     * @return $this
     */
    public function setDrDtsTaskId($dr_dts_task_id)
    {
        $this->container['dr_dts_task_id'] = $dr_dts_task_id;

        return $this;
    }

    /**
     * Gets instance_id
     *
     * @return string
     */
    public function getInstanceId()
    {
        return $this->container['instance_id'];
    }

    /**
     * Sets instance_id
     *
     * @param string $instance_id instance_id
     *
     * @return $this
     */
    public function setInstanceId($instance_id)
    {
        $this->container['instance_id'] = $instance_id;

        return $this;
    }

    /**
     * Gets instance_name
     *
     * @return string
     */
    public function getInstanceName()
    {
        return $this->container['instance_name'];
    }

    /**
     * Sets instance_name
     *
     * @param string $instance_name instance_name
     *
     * @return $this
     */
    public function setInstanceName($instance_name)
    {
        $this->container['instance_name'] = $instance_name;

        return $this;
    }

    /**
     * Gets instance_status
     *
     * @return string
     */
    public function getInstanceStatus()
    {
        return $this->container['instance_status'];
    }

    /**
     * Sets instance_status
     *
     * @param string $instance_status instance_status
     *
     * @return $this
     */
    public function setInstanceStatus($instance_status)
    {
        $this->container['instance_status'] = $instance_status;

        return $this;
    }

    /**
     * Gets instance_type
     *
     * @return string
     */
    public function getInstanceType()
    {
        return $this->container['instance_type'];
    }

    /**
     * Sets instance_type
     *
     * @param string $instance_type instance_type
     *
     * @return $this
     */
    public function setInstanceType($instance_type)
    {
        $this->container['instance_type'] = $instance_type;

        return $this;
    }

    /**
     * Gets lower_case_table_names
     *
     * @return string
     */
    public function getLowerCaseTableNames()
    {
        return $this->container['lower_case_table_names'];
    }

    /**
     * Sets lower_case_table_names
     *
     * @param string $lower_case_table_names lower_case_table_names
     *
     * @return $this
     */
    public function setLowerCaseTableNames($lower_case_table_names)
    {
        $this->container['lower_case_table_names'] = $lower_case_table_names;

        return $this;
    }

    /**
     * Gets maintenance_window
     *
     * @return \Volcengine\Rdsmysqlv2\Model\MaintenanceWindowForDescribeDBInstancesOutput
     */
    public function getMaintenanceWindow()
    {
        return $this->container['maintenance_window'];
    }

    /**
     * Sets maintenance_window
     *
     * @param \Volcengine\Rdsmysqlv2\Model\MaintenanceWindowForDescribeDBInstancesOutput $maintenance_window maintenance_window
     *
     * @return $this
     */
    public function setMaintenanceWindow($maintenance_window)
    {
        $this->container['maintenance_window'] = $maintenance_window;

        return $this;
    }

    /**
     * Gets node_cpu_used_percentage
     *
     * @return double
     */
    public function getNodeCpuUsedPercentage()
    {
        return $this->container['node_cpu_used_percentage'];
    }

    /**
     * Sets node_cpu_used_percentage
     *
     * @param double $node_cpu_used_percentage node_cpu_used_percentage
     *
     * @return $this
     */
    public function setNodeCpuUsedPercentage($node_cpu_used_percentage)
    {
        $this->container['node_cpu_used_percentage'] = $node_cpu_used_percentage;

        return $this;
    }

    /**
     * Gets node_memory_used_percentage
     *
     * @return double
     */
    public function getNodeMemoryUsedPercentage()
    {
        return $this->container['node_memory_used_percentage'];
    }

    /**
     * Sets node_memory_used_percentage
     *
     * @param double $node_memory_used_percentage node_memory_used_percentage
     *
     * @return $this
     */
    public function setNodeMemoryUsedPercentage($node_memory_used_percentage)
    {
        $this->container['node_memory_used_percentage'] = $node_memory_used_percentage;

        return $this;
    }

    /**
     * Gets node_number
     *
     * @return int
     */
    public function getNodeNumber()
    {
        return $this->container['node_number'];
    }

    /**
     * Sets node_number
     *
     * @param int $node_number node_number
     *
     * @return $this
     */
    public function setNodeNumber($node_number)
    {
        $this->container['node_number'] = $node_number;

        return $this;
    }

    /**
     * Gets node_space_used_percentage
     *
     * @return double
     */
    public function getNodeSpaceUsedPercentage()
    {
        return $this->container['node_space_used_percentage'];
    }

    /**
     * Sets node_space_used_percentage
     *
     * @param double $node_space_used_percentage node_space_used_percentage
     *
     * @return $this
     */
    public function setNodeSpaceUsedPercentage($node_space_used_percentage)
    {
        $this->container['node_space_used_percentage'] = $node_space_used_percentage;

        return $this;
    }

    /**
     * Gets node_spec
     *
     * @return string
     */
    public function getNodeSpec()
    {
        return $this->container['node_spec'];
    }

    /**
     * Sets node_spec
     *
     * @param string $node_spec node_spec
     *
     * @return $this
     */
    public function setNodeSpec($node_spec)
    {
        $this->container['node_spec'] = $node_spec;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets region_id
     *
     * @return string
     */
    public function getRegionId()
    {
        return $this->container['region_id'];
    }

    /**
     * Sets region_id
     *
     * @param string $region_id region_id
     *
     * @return $this
     */
    public function setRegionId($region_id)
    {
        $this->container['region_id'] = $region_id;

        return $this;
    }

    /**
     * Gets storage_space
     *
     * @return int
     */
    public function getStorageSpace()
    {
        return $this->container['storage_space'];
    }

    /**
     * Sets storage_space
     *
     * @param int $storage_space storage_space
     *
     * @return $this
     */
    public function setStorageSpace($storage_space)
    {
        $this->container['storage_space'] = $storage_space;

        return $this;
    }

    /**
     * Gets storage_type
     *
     * @return string
     */
    public function getStorageType()
    {
        return $this->container['storage_type'];
    }

    /**
     * Sets storage_type
     *
     * @param string $storage_type storage_type
     *
     * @return $this
     */
    public function setStorageType($storage_type)
    {
        $this->container['storage_type'] = $storage_type;

        return $this;
    }

    /**
     * Gets subnet_id
     *
     * @return string
     */
    public function getSubnetId()
    {
        return $this->container['subnet_id'];
    }

    /**
     * Sets subnet_id
     *
     * @param string $subnet_id subnet_id
     *
     * @return $this
     */
    public function setSubnetId($subnet_id)
    {
        $this->container['subnet_id'] = $subnet_id;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Rdsmysqlv2\Model\TagForDescribeDBInstancesOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Rdsmysqlv2\Model\TagForDescribeDBInstancesOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets time_zone
     *
     * @return string
     */
    public function getTimeZone()
    {
        return $this->container['time_zone'];
    }

    /**
     * Sets time_zone
     *
     * @param string $time_zone time_zone
     *
     * @return $this
     */
    public function setTimeZone($time_zone)
    {
        $this->container['time_zone'] = $time_zone;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return string
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param string $zone_id zone_id
     *
     * @return $this
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }

    /**
     * Gets zone_ids
     *
     * @return string[]
     */
    public function getZoneIds()
    {
        return $this->container['zone_ids'];
    }

    /**
     * Sets zone_ids
     *
     * @param string[] $zone_ids zone_ids
     *
     * @return $this
     */
    public function setZoneIds($zone_ids)
    {
        $this->container['zone_ids'] = $zone_ids;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

