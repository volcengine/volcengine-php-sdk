<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mlplatform20240701\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class CreateResourceQueueRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreateResourceQueueRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'compute_resources' => '\Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceQueueInput[]',
        'description' => 'string',
        'dry_run' => 'bool',
        'name' => 'string',
        'project_name' => 'string',
        'quota' => '\Volcengine\Mlplatform20240701\Model\QuotaForCreateResourceQueueInput',
        'resource_group_id' => 'string',
        'rules' => '\Volcengine\Mlplatform20240701\Model\RulesForCreateResourceQueueInput',
        'shareable' => 'bool',
        'volume_resources' => '\Volcengine\Mlplatform20240701\Model\VolumeResourceForCreateResourceQueueInput[]',
        'workload_infos' => '\Volcengine\Mlplatform20240701\Model\WorkloadInfoForCreateResourceQueueInput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'compute_resources' => null,
        'description' => null,
        'dry_run' => null,
        'name' => null,
        'project_name' => null,
        'quota' => null,
        'resource_group_id' => null,
        'rules' => null,
        'shareable' => null,
        'volume_resources' => null,
        'workload_infos' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'compute_resources' => 'ComputeResources',
        'description' => 'Description',
        'dry_run' => 'DryRun',
        'name' => 'Name',
        'project_name' => 'ProjectName',
        'quota' => 'Quota',
        'resource_group_id' => 'ResourceGroupId',
        'rules' => 'Rules',
        'shareable' => 'Shareable',
        'volume_resources' => 'VolumeResources',
        'workload_infos' => 'WorkloadInfos'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'compute_resources' => 'setComputeResources',
        'description' => 'setDescription',
        'dry_run' => 'setDryRun',
        'name' => 'setName',
        'project_name' => 'setProjectName',
        'quota' => 'setQuota',
        'resource_group_id' => 'setResourceGroupId',
        'rules' => 'setRules',
        'shareable' => 'setShareable',
        'volume_resources' => 'setVolumeResources',
        'workload_infos' => 'setWorkloadInfos'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'compute_resources' => 'getComputeResources',
        'description' => 'getDescription',
        'dry_run' => 'getDryRun',
        'name' => 'getName',
        'project_name' => 'getProjectName',
        'quota' => 'getQuota',
        'resource_group_id' => 'getResourceGroupId',
        'rules' => 'getRules',
        'shareable' => 'getShareable',
        'volume_resources' => 'getVolumeResources',
        'workload_infos' => 'getWorkloadInfos'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['compute_resources'] = isset($data['compute_resources']) ? $data['compute_resources'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dry_run'] = isset($data['dry_run']) ? $data['dry_run'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['quota'] = isset($data['quota']) ? $data['quota'] : null;
        $this->container['resource_group_id'] = isset($data['resource_group_id']) ? $data['resource_group_id'] : null;
        $this->container['rules'] = isset($data['rules']) ? $data['rules'] : null;
        $this->container['shareable'] = isset($data['shareable']) ? $data['shareable'] : null;
        $this->container['volume_resources'] = isset($data['volume_resources']) ? $data['volume_resources'] : null;
        $this->container['workload_infos'] = isset($data['workload_infos']) ? $data['workload_infos'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        if ($this->container['resource_group_id'] === null) {
            $invalidProperties[] = "'resource_group_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets compute_resources
     *
     * @return \Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceQueueInput[]
     */
    public function getComputeResources()
    {
        return $this->container['compute_resources'];
    }

    /**
     * Sets compute_resources
     *
     * @param \Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceQueueInput[] $compute_resources compute_resources
     *
     * @return $this
     */
    public function setComputeResources($compute_resources)
    {
        $this->container['compute_resources'] = $compute_resources;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dry_run
     *
     * @return bool
     */
    public function getDryRun()
    {
        return $this->container['dry_run'];
    }

    /**
     * Sets dry_run
     *
     * @param bool $dry_run dry_run
     *
     * @return $this
     */
    public function setDryRun($dry_run)
    {
        $this->container['dry_run'] = $dry_run;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets quota
     *
     * @return \Volcengine\Mlplatform20240701\Model\QuotaForCreateResourceQueueInput
     */
    public function getQuota()
    {
        return $this->container['quota'];
    }

    /**
     * Sets quota
     *
     * @param \Volcengine\Mlplatform20240701\Model\QuotaForCreateResourceQueueInput $quota quota
     *
     * @return $this
     */
    public function setQuota($quota)
    {
        $this->container['quota'] = $quota;

        return $this;
    }

    /**
     * Gets resource_group_id
     *
     * @return string
     */
    public function getResourceGroupId()
    {
        return $this->container['resource_group_id'];
    }

    /**
     * Sets resource_group_id
     *
     * @param string $resource_group_id resource_group_id
     *
     * @return $this
     */
    public function setResourceGroupId($resource_group_id)
    {
        $this->container['resource_group_id'] = $resource_group_id;

        return $this;
    }

    /**
     * Gets rules
     *
     * @return \Volcengine\Mlplatform20240701\Model\RulesForCreateResourceQueueInput
     */
    public function getRules()
    {
        return $this->container['rules'];
    }

    /**
     * Sets rules
     *
     * @param \Volcengine\Mlplatform20240701\Model\RulesForCreateResourceQueueInput $rules rules
     *
     * @return $this
     */
    public function setRules($rules)
    {
        $this->container['rules'] = $rules;

        return $this;
    }

    /**
     * Gets shareable
     *
     * @return bool
     */
    public function getShareable()
    {
        return $this->container['shareable'];
    }

    /**
     * Sets shareable
     *
     * @param bool $shareable shareable
     *
     * @return $this
     */
    public function setShareable($shareable)
    {
        $this->container['shareable'] = $shareable;

        return $this;
    }

    /**
     * Gets volume_resources
     *
     * @return \Volcengine\Mlplatform20240701\Model\VolumeResourceForCreateResourceQueueInput[]
     */
    public function getVolumeResources()
    {
        return $this->container['volume_resources'];
    }

    /**
     * Sets volume_resources
     *
     * @param \Volcengine\Mlplatform20240701\Model\VolumeResourceForCreateResourceQueueInput[] $volume_resources volume_resources
     *
     * @return $this
     */
    public function setVolumeResources($volume_resources)
    {
        $this->container['volume_resources'] = $volume_resources;

        return $this;
    }

    /**
     * Gets workload_infos
     *
     * @return \Volcengine\Mlplatform20240701\Model\WorkloadInfoForCreateResourceQueueInput[]
     */
    public function getWorkloadInfos()
    {
        return $this->container['workload_infos'];
    }

    /**
     * Sets workload_infos
     *
     * @param \Volcengine\Mlplatform20240701\Model\WorkloadInfoForCreateResourceQueueInput[] $workload_infos workload_infos
     *
     * @return $this
     */
    public function setWorkloadInfos($workload_infos)
    {
        $this->container['workload_infos'] = $workload_infos;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

