<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mlplatform20240701\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class CreateResourceReservationPlanRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CreateResourceReservationPlanRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'compute_resource' => '\Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceReservationPlanInput',
        'description' => 'string',
        'dry_run' => 'bool',
        'name' => 'string',
        'reservation_config' => '\Volcengine\Mlplatform20240701\Model\ReservationConfigForCreateResourceReservationPlanInput',
        'storage_config' => '\Volcengine\Mlplatform20240701\Model\StorageConfigForCreateResourceReservationPlanInput',
        'workload_network_config' => '\Volcengine\Mlplatform20240701\Model\WorkloadNetworkConfigForCreateResourceReservationPlanInput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'compute_resource' => null,
        'description' => null,
        'dry_run' => null,
        'name' => null,
        'reservation_config' => null,
        'storage_config' => null,
        'workload_network_config' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'compute_resource' => 'ComputeResource',
        'description' => 'Description',
        'dry_run' => 'DryRun',
        'name' => 'Name',
        'reservation_config' => 'ReservationConfig',
        'storage_config' => 'StorageConfig',
        'workload_network_config' => 'WorkloadNetworkConfig'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'compute_resource' => 'setComputeResource',
        'description' => 'setDescription',
        'dry_run' => 'setDryRun',
        'name' => 'setName',
        'reservation_config' => 'setReservationConfig',
        'storage_config' => 'setStorageConfig',
        'workload_network_config' => 'setWorkloadNetworkConfig'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'compute_resource' => 'getComputeResource',
        'description' => 'getDescription',
        'dry_run' => 'getDryRun',
        'name' => 'getName',
        'reservation_config' => 'getReservationConfig',
        'storage_config' => 'getStorageConfig',
        'workload_network_config' => 'getWorkloadNetworkConfig'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['compute_resource'] = isset($data['compute_resource']) ? $data['compute_resource'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['dry_run'] = isset($data['dry_run']) ? $data['dry_run'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['reservation_config'] = isset($data['reservation_config']) ? $data['reservation_config'] : null;
        $this->container['storage_config'] = isset($data['storage_config']) ? $data['storage_config'] : null;
        $this->container['workload_network_config'] = isset($data['workload_network_config']) ? $data['workload_network_config'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['name'] === null) {
            $invalidProperties[] = "'name' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets compute_resource
     *
     * @return \Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceReservationPlanInput
     */
    public function getComputeResource()
    {
        return $this->container['compute_resource'];
    }

    /**
     * Sets compute_resource
     *
     * @param \Volcengine\Mlplatform20240701\Model\ComputeResourceForCreateResourceReservationPlanInput $compute_resource compute_resource
     *
     * @return $this
     */
    public function setComputeResource($compute_resource)
    {
        $this->container['compute_resource'] = $compute_resource;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets dry_run
     *
     * @return bool
     */
    public function getDryRun()
    {
        return $this->container['dry_run'];
    }

    /**
     * Sets dry_run
     *
     * @param bool $dry_run dry_run
     *
     * @return $this
     */
    public function setDryRun($dry_run)
    {
        $this->container['dry_run'] = $dry_run;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets reservation_config
     *
     * @return \Volcengine\Mlplatform20240701\Model\ReservationConfigForCreateResourceReservationPlanInput
     */
    public function getReservationConfig()
    {
        return $this->container['reservation_config'];
    }

    /**
     * Sets reservation_config
     *
     * @param \Volcengine\Mlplatform20240701\Model\ReservationConfigForCreateResourceReservationPlanInput $reservation_config reservation_config
     *
     * @return $this
     */
    public function setReservationConfig($reservation_config)
    {
        $this->container['reservation_config'] = $reservation_config;

        return $this;
    }

    /**
     * Gets storage_config
     *
     * @return \Volcengine\Mlplatform20240701\Model\StorageConfigForCreateResourceReservationPlanInput
     */
    public function getStorageConfig()
    {
        return $this->container['storage_config'];
    }

    /**
     * Sets storage_config
     *
     * @param \Volcengine\Mlplatform20240701\Model\StorageConfigForCreateResourceReservationPlanInput $storage_config storage_config
     *
     * @return $this
     */
    public function setStorageConfig($storage_config)
    {
        $this->container['storage_config'] = $storage_config;

        return $this;
    }

    /**
     * Gets workload_network_config
     *
     * @return \Volcengine\Mlplatform20240701\Model\WorkloadNetworkConfigForCreateResourceReservationPlanInput
     */
    public function getWorkloadNetworkConfig()
    {
        return $this->container['workload_network_config'];
    }

    /**
     * Sets workload_network_config
     *
     * @param \Volcengine\Mlplatform20240701\Model\WorkloadNetworkConfigForCreateResourceReservationPlanInput $workload_network_config workload_network_config
     *
     * @return $this
     */
    public function setWorkloadNetworkConfig($workload_network_config)
    {
        $this->container['workload_network_config'] = $workload_network_config;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

