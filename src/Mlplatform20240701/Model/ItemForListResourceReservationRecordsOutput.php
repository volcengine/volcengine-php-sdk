<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mlplatform20240701\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ItemForListResourceReservationRecordsOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ItemForListResourceReservationRecordsOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'activation_time' => 'string',
        'allocated_compute_resource' => '\Volcengine\Mlplatform20240701\Model\AllocatedComputeResourceForListResourceReservationRecordsOutput',
        'delivered_compute_resource' => '\Volcengine\Mlplatform20240701\Model\DeliveredComputeResourceForListResourceReservationRecordsOutput',
        'desired_compute_resource' => '\Volcengine\Mlplatform20240701\Model\DesiredComputeResourceForListResourceReservationRecordsOutput',
        'id' => 'string',
        'resource_end_time' => 'string',
        'resource_start_time' => 'string',
        'resource_zone_id' => 'string',
        'status' => '\Volcengine\Mlplatform20240701\Model\StatusForListResourceReservationRecordsOutput'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'activation_time' => null,
        'allocated_compute_resource' => null,
        'delivered_compute_resource' => null,
        'desired_compute_resource' => null,
        'id' => null,
        'resource_end_time' => null,
        'resource_start_time' => null,
        'resource_zone_id' => null,
        'status' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'activation_time' => 'ActivationTime',
        'allocated_compute_resource' => 'AllocatedComputeResource',
        'delivered_compute_resource' => 'DeliveredComputeResource',
        'desired_compute_resource' => 'DesiredComputeResource',
        'id' => 'Id',
        'resource_end_time' => 'ResourceEndTime',
        'resource_start_time' => 'ResourceStartTime',
        'resource_zone_id' => 'ResourceZoneId',
        'status' => 'Status'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'activation_time' => 'setActivationTime',
        'allocated_compute_resource' => 'setAllocatedComputeResource',
        'delivered_compute_resource' => 'setDeliveredComputeResource',
        'desired_compute_resource' => 'setDesiredComputeResource',
        'id' => 'setId',
        'resource_end_time' => 'setResourceEndTime',
        'resource_start_time' => 'setResourceStartTime',
        'resource_zone_id' => 'setResourceZoneId',
        'status' => 'setStatus'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'activation_time' => 'getActivationTime',
        'allocated_compute_resource' => 'getAllocatedComputeResource',
        'delivered_compute_resource' => 'getDeliveredComputeResource',
        'desired_compute_resource' => 'getDesiredComputeResource',
        'id' => 'getId',
        'resource_end_time' => 'getResourceEndTime',
        'resource_start_time' => 'getResourceStartTime',
        'resource_zone_id' => 'getResourceZoneId',
        'status' => 'getStatus'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['activation_time'] = isset($data['activation_time']) ? $data['activation_time'] : null;
        $this->container['allocated_compute_resource'] = isset($data['allocated_compute_resource']) ? $data['allocated_compute_resource'] : null;
        $this->container['delivered_compute_resource'] = isset($data['delivered_compute_resource']) ? $data['delivered_compute_resource'] : null;
        $this->container['desired_compute_resource'] = isset($data['desired_compute_resource']) ? $data['desired_compute_resource'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['resource_end_time'] = isset($data['resource_end_time']) ? $data['resource_end_time'] : null;
        $this->container['resource_start_time'] = isset($data['resource_start_time']) ? $data['resource_start_time'] : null;
        $this->container['resource_zone_id'] = isset($data['resource_zone_id']) ? $data['resource_zone_id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets activation_time
     *
     * @return string
     */
    public function getActivationTime()
    {
        return $this->container['activation_time'];
    }

    /**
     * Sets activation_time
     *
     * @param string $activation_time activation_time
     *
     * @return $this
     */
    public function setActivationTime($activation_time)
    {
        $this->container['activation_time'] = $activation_time;

        return $this;
    }

    /**
     * Gets allocated_compute_resource
     *
     * @return \Volcengine\Mlplatform20240701\Model\AllocatedComputeResourceForListResourceReservationRecordsOutput
     */
    public function getAllocatedComputeResource()
    {
        return $this->container['allocated_compute_resource'];
    }

    /**
     * Sets allocated_compute_resource
     *
     * @param \Volcengine\Mlplatform20240701\Model\AllocatedComputeResourceForListResourceReservationRecordsOutput $allocated_compute_resource allocated_compute_resource
     *
     * @return $this
     */
    public function setAllocatedComputeResource($allocated_compute_resource)
    {
        $this->container['allocated_compute_resource'] = $allocated_compute_resource;

        return $this;
    }

    /**
     * Gets delivered_compute_resource
     *
     * @return \Volcengine\Mlplatform20240701\Model\DeliveredComputeResourceForListResourceReservationRecordsOutput
     */
    public function getDeliveredComputeResource()
    {
        return $this->container['delivered_compute_resource'];
    }

    /**
     * Sets delivered_compute_resource
     *
     * @param \Volcengine\Mlplatform20240701\Model\DeliveredComputeResourceForListResourceReservationRecordsOutput $delivered_compute_resource delivered_compute_resource
     *
     * @return $this
     */
    public function setDeliveredComputeResource($delivered_compute_resource)
    {
        $this->container['delivered_compute_resource'] = $delivered_compute_resource;

        return $this;
    }

    /**
     * Gets desired_compute_resource
     *
     * @return \Volcengine\Mlplatform20240701\Model\DesiredComputeResourceForListResourceReservationRecordsOutput
     */
    public function getDesiredComputeResource()
    {
        return $this->container['desired_compute_resource'];
    }

    /**
     * Sets desired_compute_resource
     *
     * @param \Volcengine\Mlplatform20240701\Model\DesiredComputeResourceForListResourceReservationRecordsOutput $desired_compute_resource desired_compute_resource
     *
     * @return $this
     */
    public function setDesiredComputeResource($desired_compute_resource)
    {
        $this->container['desired_compute_resource'] = $desired_compute_resource;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets resource_end_time
     *
     * @return string
     */
    public function getResourceEndTime()
    {
        return $this->container['resource_end_time'];
    }

    /**
     * Sets resource_end_time
     *
     * @param string $resource_end_time resource_end_time
     *
     * @return $this
     */
    public function setResourceEndTime($resource_end_time)
    {
        $this->container['resource_end_time'] = $resource_end_time;

        return $this;
    }

    /**
     * Gets resource_start_time
     *
     * @return string
     */
    public function getResourceStartTime()
    {
        return $this->container['resource_start_time'];
    }

    /**
     * Sets resource_start_time
     *
     * @param string $resource_start_time resource_start_time
     *
     * @return $this
     */
    public function setResourceStartTime($resource_start_time)
    {
        $this->container['resource_start_time'] = $resource_start_time;

        return $this;
    }

    /**
     * Gets resource_zone_id
     *
     * @return string
     */
    public function getResourceZoneId()
    {
        return $this->container['resource_zone_id'];
    }

    /**
     * Sets resource_zone_id
     *
     * @param string $resource_zone_id resource_zone_id
     *
     * @return $this
     */
    public function setResourceZoneId($resource_zone_id)
    {
        $this->container['resource_zone_id'] = $resource_zone_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return \Volcengine\Mlplatform20240701\Model\StatusForListResourceReservationRecordsOutput
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param \Volcengine\Mlplatform20240701\Model\StatusForListResourceReservationRecordsOutput $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

