<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mlplatform20240701\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ListResourceReservationPlanAvailableResourcesRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListResourceReservationPlanAvailableResourcesRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'compute_resource' => '\Volcengine\Mlplatform20240701\Model\ComputeResourceForListResourceReservationPlanAvailableResourcesInput',
        'max_hours_to_use' => 'int',
        'min_hours_to_use' => 'int',
        'time_range_end' => 'string',
        'time_range_start' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'compute_resource' => null,
        'max_hours_to_use' => 'int64',
        'min_hours_to_use' => 'int64',
        'time_range_end' => null,
        'time_range_start' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'compute_resource' => 'ComputeResource',
        'max_hours_to_use' => 'MaxHoursToUse',
        'min_hours_to_use' => 'MinHoursToUse',
        'time_range_end' => 'TimeRangeEnd',
        'time_range_start' => 'TimeRangeStart'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'compute_resource' => 'setComputeResource',
        'max_hours_to_use' => 'setMaxHoursToUse',
        'min_hours_to_use' => 'setMinHoursToUse',
        'time_range_end' => 'setTimeRangeEnd',
        'time_range_start' => 'setTimeRangeStart'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'compute_resource' => 'getComputeResource',
        'max_hours_to_use' => 'getMaxHoursToUse',
        'min_hours_to_use' => 'getMinHoursToUse',
        'time_range_end' => 'getTimeRangeEnd',
        'time_range_start' => 'getTimeRangeStart'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['compute_resource'] = isset($data['compute_resource']) ? $data['compute_resource'] : null;
        $this->container['max_hours_to_use'] = isset($data['max_hours_to_use']) ? $data['max_hours_to_use'] : null;
        $this->container['min_hours_to_use'] = isset($data['min_hours_to_use']) ? $data['min_hours_to_use'] : null;
        $this->container['time_range_end'] = isset($data['time_range_end']) ? $data['time_range_end'] : null;
        $this->container['time_range_start'] = isset($data['time_range_start']) ? $data['time_range_start'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['max_hours_to_use'] === null) {
            $invalidProperties[] = "'max_hours_to_use' can't be null";
        }
        if ($this->container['min_hours_to_use'] === null) {
            $invalidProperties[] = "'min_hours_to_use' can't be null";
        }
        if ($this->container['time_range_end'] === null) {
            $invalidProperties[] = "'time_range_end' can't be null";
        }
        if ($this->container['time_range_start'] === null) {
            $invalidProperties[] = "'time_range_start' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets compute_resource
     *
     * @return \Volcengine\Mlplatform20240701\Model\ComputeResourceForListResourceReservationPlanAvailableResourcesInput
     */
    public function getComputeResource()
    {
        return $this->container['compute_resource'];
    }

    /**
     * Sets compute_resource
     *
     * @param \Volcengine\Mlplatform20240701\Model\ComputeResourceForListResourceReservationPlanAvailableResourcesInput $compute_resource compute_resource
     *
     * @return $this
     */
    public function setComputeResource($compute_resource)
    {
        $this->container['compute_resource'] = $compute_resource;

        return $this;
    }

    /**
     * Gets max_hours_to_use
     *
     * @return int
     */
    public function getMaxHoursToUse()
    {
        return $this->container['max_hours_to_use'];
    }

    /**
     * Sets max_hours_to_use
     *
     * @param int $max_hours_to_use max_hours_to_use
     *
     * @return $this
     */
    public function setMaxHoursToUse($max_hours_to_use)
    {
        $this->container['max_hours_to_use'] = $max_hours_to_use;

        return $this;
    }

    /**
     * Gets min_hours_to_use
     *
     * @return int
     */
    public function getMinHoursToUse()
    {
        return $this->container['min_hours_to_use'];
    }

    /**
     * Sets min_hours_to_use
     *
     * @param int $min_hours_to_use min_hours_to_use
     *
     * @return $this
     */
    public function setMinHoursToUse($min_hours_to_use)
    {
        $this->container['min_hours_to_use'] = $min_hours_to_use;

        return $this;
    }

    /**
     * Gets time_range_end
     *
     * @return string
     */
    public function getTimeRangeEnd()
    {
        return $this->container['time_range_end'];
    }

    /**
     * Sets time_range_end
     *
     * @param string $time_range_end time_range_end
     *
     * @return $this
     */
    public function setTimeRangeEnd($time_range_end)
    {
        $this->container['time_range_end'] = $time_range_end;

        return $this;
    }

    /**
     * Gets time_range_start
     *
     * @return string
     */
    public function getTimeRangeStart()
    {
        return $this->container['time_range_start'];
    }

    /**
     * Sets time_range_start
     *
     * @param string $time_range_start time_range_start
     *
     * @return $this
     */
    public function setTimeRangeStart($time_range_start)
    {
        $this->container['time_range_start'] = $time_range_start;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

