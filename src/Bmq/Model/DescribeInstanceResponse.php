<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Bmq\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class DescribeInstanceResponse implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'DescribeInstanceResponse';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'billing_type' => 'string',
        'create_time' => 'string',
        'description' => 'string',
        'endpoints' => '\Volcengine\Bmq\Model\EndpointsForDescribeInstanceOutput',
        'expiration_time' => 'string',
        'group_limit' => 'int',
        'instance_id' => 'string',
        'message_retention' => 'int',
        'name' => 'string',
        'partition_limit' => 'int',
        'project_name' => 'string',
        'region_id' => 'string',
        'resource_tags' => '\Volcengine\Bmq\Model\ResourceTagForDescribeInstanceOutput[]',
        'resources' => '\Volcengine\Bmq\Model\ResourcesForDescribeInstanceOutput',
        'security_group_id_list' => 'string[]',
        'specification' => 'string',
        'status' => 'string',
        'subnet_id_list' => 'string[]',
        'tags' => '\Volcengine\Bmq\Model\TagForDescribeInstanceOutput[]',
        'topic_limit' => 'int',
        'vpc_id' => 'string',
        'zone_id_list' => 'string[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'billing_type' => null,
        'create_time' => null,
        'description' => null,
        'endpoints' => null,
        'expiration_time' => null,
        'group_limit' => 'int32',
        'instance_id' => null,
        'message_retention' => 'int32',
        'name' => null,
        'partition_limit' => 'int32',
        'project_name' => null,
        'region_id' => null,
        'resource_tags' => null,
        'resources' => null,
        'security_group_id_list' => null,
        'specification' => null,
        'status' => null,
        'subnet_id_list' => null,
        'tags' => null,
        'topic_limit' => 'int32',
        'vpc_id' => null,
        'zone_id_list' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'billing_type' => 'BillingType',
        'create_time' => 'CreateTime',
        'description' => 'Description',
        'endpoints' => 'Endpoints',
        'expiration_time' => 'ExpirationTime',
        'group_limit' => 'GroupLimit',
        'instance_id' => 'InstanceId',
        'message_retention' => 'MessageRetention',
        'name' => 'Name',
        'partition_limit' => 'PartitionLimit',
        'project_name' => 'ProjectName',
        'region_id' => 'RegionId',
        'resource_tags' => 'ResourceTags',
        'resources' => 'Resources',
        'security_group_id_list' => 'SecurityGroupIdList',
        'specification' => 'Specification',
        'status' => 'Status',
        'subnet_id_list' => 'SubnetIdList',
        'tags' => 'Tags',
        'topic_limit' => 'TopicLimit',
        'vpc_id' => 'VpcId',
        'zone_id_list' => 'ZoneIdList'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'billing_type' => 'setBillingType',
        'create_time' => 'setCreateTime',
        'description' => 'setDescription',
        'endpoints' => 'setEndpoints',
        'expiration_time' => 'setExpirationTime',
        'group_limit' => 'setGroupLimit',
        'instance_id' => 'setInstanceId',
        'message_retention' => 'setMessageRetention',
        'name' => 'setName',
        'partition_limit' => 'setPartitionLimit',
        'project_name' => 'setProjectName',
        'region_id' => 'setRegionId',
        'resource_tags' => 'setResourceTags',
        'resources' => 'setResources',
        'security_group_id_list' => 'setSecurityGroupIdList',
        'specification' => 'setSpecification',
        'status' => 'setStatus',
        'subnet_id_list' => 'setSubnetIdList',
        'tags' => 'setTags',
        'topic_limit' => 'setTopicLimit',
        'vpc_id' => 'setVpcId',
        'zone_id_list' => 'setZoneIdList'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'billing_type' => 'getBillingType',
        'create_time' => 'getCreateTime',
        'description' => 'getDescription',
        'endpoints' => 'getEndpoints',
        'expiration_time' => 'getExpirationTime',
        'group_limit' => 'getGroupLimit',
        'instance_id' => 'getInstanceId',
        'message_retention' => 'getMessageRetention',
        'name' => 'getName',
        'partition_limit' => 'getPartitionLimit',
        'project_name' => 'getProjectName',
        'region_id' => 'getRegionId',
        'resource_tags' => 'getResourceTags',
        'resources' => 'getResources',
        'security_group_id_list' => 'getSecurityGroupIdList',
        'specification' => 'getSpecification',
        'status' => 'getStatus',
        'subnet_id_list' => 'getSubnetIdList',
        'tags' => 'getTags',
        'topic_limit' => 'getTopicLimit',
        'vpc_id' => 'getVpcId',
        'zone_id_list' => 'getZoneIdList'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['billing_type'] = isset($data['billing_type']) ? $data['billing_type'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['endpoints'] = isset($data['endpoints']) ? $data['endpoints'] : null;
        $this->container['expiration_time'] = isset($data['expiration_time']) ? $data['expiration_time'] : null;
        $this->container['group_limit'] = isset($data['group_limit']) ? $data['group_limit'] : null;
        $this->container['instance_id'] = isset($data['instance_id']) ? $data['instance_id'] : null;
        $this->container['message_retention'] = isset($data['message_retention']) ? $data['message_retention'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['partition_limit'] = isset($data['partition_limit']) ? $data['partition_limit'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['region_id'] = isset($data['region_id']) ? $data['region_id'] : null;
        $this->container['resource_tags'] = isset($data['resource_tags']) ? $data['resource_tags'] : null;
        $this->container['resources'] = isset($data['resources']) ? $data['resources'] : null;
        $this->container['security_group_id_list'] = isset($data['security_group_id_list']) ? $data['security_group_id_list'] : null;
        $this->container['specification'] = isset($data['specification']) ? $data['specification'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['subnet_id_list'] = isset($data['subnet_id_list']) ? $data['subnet_id_list'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['topic_limit'] = isset($data['topic_limit']) ? $data['topic_limit'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
        $this->container['zone_id_list'] = isset($data['zone_id_list']) ? $data['zone_id_list'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets billing_type
     *
     * @return string
     */
    public function getBillingType()
    {
        return $this->container['billing_type'];
    }

    /**
     * Sets billing_type
     *
     * @param string $billing_type billing_type
     *
     * @return $this
     */
    public function setBillingType($billing_type)
    {
        $this->container['billing_type'] = $billing_type;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets endpoints
     *
     * @return \Volcengine\Bmq\Model\EndpointsForDescribeInstanceOutput
     */
    public function getEndpoints()
    {
        return $this->container['endpoints'];
    }

    /**
     * Sets endpoints
     *
     * @param \Volcengine\Bmq\Model\EndpointsForDescribeInstanceOutput $endpoints endpoints
     *
     * @return $this
     */
    public function setEndpoints($endpoints)
    {
        $this->container['endpoints'] = $endpoints;

        return $this;
    }

    /**
     * Gets expiration_time
     *
     * @return string
     */
    public function getExpirationTime()
    {
        return $this->container['expiration_time'];
    }

    /**
     * Sets expiration_time
     *
     * @param string $expiration_time expiration_time
     *
     * @return $this
     */
    public function setExpirationTime($expiration_time)
    {
        $this->container['expiration_time'] = $expiration_time;

        return $this;
    }

    /**
     * Gets group_limit
     *
     * @return int
     */
    public function getGroupLimit()
    {
        return $this->container['group_limit'];
    }

    /**
     * Sets group_limit
     *
     * @param int $group_limit group_limit
     *
     * @return $this
     */
    public function setGroupLimit($group_limit)
    {
        $this->container['group_limit'] = $group_limit;

        return $this;
    }

    /**
     * Gets instance_id
     *
     * @return string
     */
    public function getInstanceId()
    {
        return $this->container['instance_id'];
    }

    /**
     * Sets instance_id
     *
     * @param string $instance_id instance_id
     *
     * @return $this
     */
    public function setInstanceId($instance_id)
    {
        $this->container['instance_id'] = $instance_id;

        return $this;
    }

    /**
     * Gets message_retention
     *
     * @return int
     */
    public function getMessageRetention()
    {
        return $this->container['message_retention'];
    }

    /**
     * Sets message_retention
     *
     * @param int $message_retention message_retention
     *
     * @return $this
     */
    public function setMessageRetention($message_retention)
    {
        $this->container['message_retention'] = $message_retention;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets partition_limit
     *
     * @return int
     */
    public function getPartitionLimit()
    {
        return $this->container['partition_limit'];
    }

    /**
     * Sets partition_limit
     *
     * @param int $partition_limit partition_limit
     *
     * @return $this
     */
    public function setPartitionLimit($partition_limit)
    {
        $this->container['partition_limit'] = $partition_limit;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets region_id
     *
     * @return string
     */
    public function getRegionId()
    {
        return $this->container['region_id'];
    }

    /**
     * Sets region_id
     *
     * @param string $region_id region_id
     *
     * @return $this
     */
    public function setRegionId($region_id)
    {
        $this->container['region_id'] = $region_id;

        return $this;
    }

    /**
     * Gets resource_tags
     *
     * @return \Volcengine\Bmq\Model\ResourceTagForDescribeInstanceOutput[]
     */
    public function getResourceTags()
    {
        return $this->container['resource_tags'];
    }

    /**
     * Sets resource_tags
     *
     * @param \Volcengine\Bmq\Model\ResourceTagForDescribeInstanceOutput[] $resource_tags resource_tags
     *
     * @return $this
     */
    public function setResourceTags($resource_tags)
    {
        $this->container['resource_tags'] = $resource_tags;

        return $this;
    }

    /**
     * Gets resources
     *
     * @return \Volcengine\Bmq\Model\ResourcesForDescribeInstanceOutput
     */
    public function getResources()
    {
        return $this->container['resources'];
    }

    /**
     * Sets resources
     *
     * @param \Volcengine\Bmq\Model\ResourcesForDescribeInstanceOutput $resources resources
     *
     * @return $this
     */
    public function setResources($resources)
    {
        $this->container['resources'] = $resources;

        return $this;
    }

    /**
     * Gets security_group_id_list
     *
     * @return string[]
     */
    public function getSecurityGroupIdList()
    {
        return $this->container['security_group_id_list'];
    }

    /**
     * Sets security_group_id_list
     *
     * @param string[] $security_group_id_list security_group_id_list
     *
     * @return $this
     */
    public function setSecurityGroupIdList($security_group_id_list)
    {
        $this->container['security_group_id_list'] = $security_group_id_list;

        return $this;
    }

    /**
     * Gets specification
     *
     * @return string
     */
    public function getSpecification()
    {
        return $this->container['specification'];
    }

    /**
     * Sets specification
     *
     * @param string $specification specification
     *
     * @return $this
     */
    public function setSpecification($specification)
    {
        $this->container['specification'] = $specification;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets subnet_id_list
     *
     * @return string[]
     */
    public function getSubnetIdList()
    {
        return $this->container['subnet_id_list'];
    }

    /**
     * Sets subnet_id_list
     *
     * @param string[] $subnet_id_list subnet_id_list
     *
     * @return $this
     */
    public function setSubnetIdList($subnet_id_list)
    {
        $this->container['subnet_id_list'] = $subnet_id_list;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Bmq\Model\TagForDescribeInstanceOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Bmq\Model\TagForDescribeInstanceOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets topic_limit
     *
     * @return int
     */
    public function getTopicLimit()
    {
        return $this->container['topic_limit'];
    }

    /**
     * Sets topic_limit
     *
     * @param int $topic_limit topic_limit
     *
     * @return $this
     */
    public function setTopicLimit($topic_limit)
    {
        $this->container['topic_limit'] = $topic_limit;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }

    /**
     * Gets zone_id_list
     *
     * @return string[]
     */
    public function getZoneIdList()
    {
        return $this->container['zone_id_list'];
    }

    /**
     * Sets zone_id_list
     *
     * @param string[] $zone_id_list zone_id_list
     *
     * @return $this
     */
    public function setZoneIdList($zone_id_list)
    {
        $this->container['zone_id_list'] = $zone_id_list;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

