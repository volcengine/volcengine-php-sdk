<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Mcdn\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class CloudAccountForListCloudAccountsOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'CloudAccountForListCloudAccountsOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'cloud_account_vendor_permission' => 'string',
        'content_settings' => '\Volcengine\Mcdn\Model\ContentSettingsForListCloudAccountsOutput',
        'created_at' => 'int',
        'domain_settings' => '\Volcengine\Mcdn\Model\DomainSettingsForListCloudAccountsOutput',
        'extra' => '\Volcengine\Mcdn\Model\ExtraForListCloudAccountsOutput',
        'id' => 'string',
        'last_sync_at' => 'int',
        'name' => 'string',
        'permission_state' => '\Volcengine\Mcdn\Model\PermissionStateForListCloudAccountsOutput',
        'read_only' => 'bool',
        'self_host_proxy_endpoint' => 'string',
        'stat_settings' => '\Volcengine\Mcdn\Model\StatSettingsForListCloudAccountsOutput',
        'sub_products' => 'string[]',
        'sync_status' => 'string',
        'sync_status_state' => '\Volcengine\Mcdn\Model\SyncStatusStateForListCloudAccountsOutput',
        'top_account_id' => 'string',
        'updated_at' => 'int',
        'vendor' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'cloud_account_vendor_permission' => null,
        'content_settings' => null,
        'created_at' => 'int64',
        'domain_settings' => null,
        'extra' => null,
        'id' => null,
        'last_sync_at' => 'int64',
        'name' => null,
        'permission_state' => null,
        'read_only' => null,
        'self_host_proxy_endpoint' => null,
        'stat_settings' => null,
        'sub_products' => null,
        'sync_status' => null,
        'sync_status_state' => null,
        'top_account_id' => null,
        'updated_at' => 'int64',
        'vendor' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'cloud_account_vendor_permission' => 'CloudAccountVendorPermission',
        'content_settings' => 'ContentSettings',
        'created_at' => 'CreatedAt',
        'domain_settings' => 'DomainSettings',
        'extra' => 'Extra',
        'id' => 'Id',
        'last_sync_at' => 'LastSyncAt',
        'name' => 'Name',
        'permission_state' => 'PermissionState',
        'read_only' => 'ReadOnly',
        'self_host_proxy_endpoint' => 'SelfHostProxyEndpoint',
        'stat_settings' => 'StatSettings',
        'sub_products' => 'SubProducts',
        'sync_status' => 'SyncStatus',
        'sync_status_state' => 'SyncStatusState',
        'top_account_id' => 'TopAccountId',
        'updated_at' => 'UpdatedAt',
        'vendor' => 'Vendor'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'cloud_account_vendor_permission' => 'setCloudAccountVendorPermission',
        'content_settings' => 'setContentSettings',
        'created_at' => 'setCreatedAt',
        'domain_settings' => 'setDomainSettings',
        'extra' => 'setExtra',
        'id' => 'setId',
        'last_sync_at' => 'setLastSyncAt',
        'name' => 'setName',
        'permission_state' => 'setPermissionState',
        'read_only' => 'setReadOnly',
        'self_host_proxy_endpoint' => 'setSelfHostProxyEndpoint',
        'stat_settings' => 'setStatSettings',
        'sub_products' => 'setSubProducts',
        'sync_status' => 'setSyncStatus',
        'sync_status_state' => 'setSyncStatusState',
        'top_account_id' => 'setTopAccountId',
        'updated_at' => 'setUpdatedAt',
        'vendor' => 'setVendor'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'cloud_account_vendor_permission' => 'getCloudAccountVendorPermission',
        'content_settings' => 'getContentSettings',
        'created_at' => 'getCreatedAt',
        'domain_settings' => 'getDomainSettings',
        'extra' => 'getExtra',
        'id' => 'getId',
        'last_sync_at' => 'getLastSyncAt',
        'name' => 'getName',
        'permission_state' => 'getPermissionState',
        'read_only' => 'getReadOnly',
        'self_host_proxy_endpoint' => 'getSelfHostProxyEndpoint',
        'stat_settings' => 'getStatSettings',
        'sub_products' => 'getSubProducts',
        'sync_status' => 'getSyncStatus',
        'sync_status_state' => 'getSyncStatusState',
        'top_account_id' => 'getTopAccountId',
        'updated_at' => 'getUpdatedAt',
        'vendor' => 'getVendor'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['cloud_account_vendor_permission'] = isset($data['cloud_account_vendor_permission']) ? $data['cloud_account_vendor_permission'] : null;
        $this->container['content_settings'] = isset($data['content_settings']) ? $data['content_settings'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['domain_settings'] = isset($data['domain_settings']) ? $data['domain_settings'] : null;
        $this->container['extra'] = isset($data['extra']) ? $data['extra'] : null;
        $this->container['id'] = isset($data['id']) ? $data['id'] : null;
        $this->container['last_sync_at'] = isset($data['last_sync_at']) ? $data['last_sync_at'] : null;
        $this->container['name'] = isset($data['name']) ? $data['name'] : null;
        $this->container['permission_state'] = isset($data['permission_state']) ? $data['permission_state'] : null;
        $this->container['read_only'] = isset($data['read_only']) ? $data['read_only'] : null;
        $this->container['self_host_proxy_endpoint'] = isset($data['self_host_proxy_endpoint']) ? $data['self_host_proxy_endpoint'] : null;
        $this->container['stat_settings'] = isset($data['stat_settings']) ? $data['stat_settings'] : null;
        $this->container['sub_products'] = isset($data['sub_products']) ? $data['sub_products'] : null;
        $this->container['sync_status'] = isset($data['sync_status']) ? $data['sync_status'] : null;
        $this->container['sync_status_state'] = isset($data['sync_status_state']) ? $data['sync_status_state'] : null;
        $this->container['top_account_id'] = isset($data['top_account_id']) ? $data['top_account_id'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['vendor'] = isset($data['vendor']) ? $data['vendor'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets cloud_account_vendor_permission
     *
     * @return string
     */
    public function getCloudAccountVendorPermission()
    {
        return $this->container['cloud_account_vendor_permission'];
    }

    /**
     * Sets cloud_account_vendor_permission
     *
     * @param string $cloud_account_vendor_permission cloud_account_vendor_permission
     *
     * @return $this
     */
    public function setCloudAccountVendorPermission($cloud_account_vendor_permission)
    {
        $this->container['cloud_account_vendor_permission'] = $cloud_account_vendor_permission;

        return $this;
    }

    /**
     * Gets content_settings
     *
     * @return \Volcengine\Mcdn\Model\ContentSettingsForListCloudAccountsOutput
     */
    public function getContentSettings()
    {
        return $this->container['content_settings'];
    }

    /**
     * Sets content_settings
     *
     * @param \Volcengine\Mcdn\Model\ContentSettingsForListCloudAccountsOutput $content_settings content_settings
     *
     * @return $this
     */
    public function setContentSettings($content_settings)
    {
        $this->container['content_settings'] = $content_settings;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return int
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param int $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets domain_settings
     *
     * @return \Volcengine\Mcdn\Model\DomainSettingsForListCloudAccountsOutput
     */
    public function getDomainSettings()
    {
        return $this->container['domain_settings'];
    }

    /**
     * Sets domain_settings
     *
     * @param \Volcengine\Mcdn\Model\DomainSettingsForListCloudAccountsOutput $domain_settings domain_settings
     *
     * @return $this
     */
    public function setDomainSettings($domain_settings)
    {
        $this->container['domain_settings'] = $domain_settings;

        return $this;
    }

    /**
     * Gets extra
     *
     * @return \Volcengine\Mcdn\Model\ExtraForListCloudAccountsOutput
     */
    public function getExtra()
    {
        return $this->container['extra'];
    }

    /**
     * Sets extra
     *
     * @param \Volcengine\Mcdn\Model\ExtraForListCloudAccountsOutput $extra extra
     *
     * @return $this
     */
    public function setExtra($extra)
    {
        $this->container['extra'] = $extra;

        return $this;
    }

    /**
     * Gets id
     *
     * @return string
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param string $id id
     *
     * @return $this
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets last_sync_at
     *
     * @return int
     */
    public function getLastSyncAt()
    {
        return $this->container['last_sync_at'];
    }

    /**
     * Sets last_sync_at
     *
     * @param int $last_sync_at last_sync_at
     *
     * @return $this
     */
    public function setLastSyncAt($last_sync_at)
    {
        $this->container['last_sync_at'] = $last_sync_at;

        return $this;
    }

    /**
     * Gets name
     *
     * @return string
     */
    public function getName()
    {
        return $this->container['name'];
    }

    /**
     * Sets name
     *
     * @param string $name name
     *
     * @return $this
     */
    public function setName($name)
    {
        $this->container['name'] = $name;

        return $this;
    }

    /**
     * Gets permission_state
     *
     * @return \Volcengine\Mcdn\Model\PermissionStateForListCloudAccountsOutput
     */
    public function getPermissionState()
    {
        return $this->container['permission_state'];
    }

    /**
     * Sets permission_state
     *
     * @param \Volcengine\Mcdn\Model\PermissionStateForListCloudAccountsOutput $permission_state permission_state
     *
     * @return $this
     */
    public function setPermissionState($permission_state)
    {
        $this->container['permission_state'] = $permission_state;

        return $this;
    }

    /**
     * Gets read_only
     *
     * @return bool
     */
    public function getReadOnly()
    {
        return $this->container['read_only'];
    }

    /**
     * Sets read_only
     *
     * @param bool $read_only read_only
     *
     * @return $this
     */
    public function setReadOnly($read_only)
    {
        $this->container['read_only'] = $read_only;

        return $this;
    }

    /**
     * Gets self_host_proxy_endpoint
     *
     * @return string
     */
    public function getSelfHostProxyEndpoint()
    {
        return $this->container['self_host_proxy_endpoint'];
    }

    /**
     * Sets self_host_proxy_endpoint
     *
     * @param string $self_host_proxy_endpoint self_host_proxy_endpoint
     *
     * @return $this
     */
    public function setSelfHostProxyEndpoint($self_host_proxy_endpoint)
    {
        $this->container['self_host_proxy_endpoint'] = $self_host_proxy_endpoint;

        return $this;
    }

    /**
     * Gets stat_settings
     *
     * @return \Volcengine\Mcdn\Model\StatSettingsForListCloudAccountsOutput
     */
    public function getStatSettings()
    {
        return $this->container['stat_settings'];
    }

    /**
     * Sets stat_settings
     *
     * @param \Volcengine\Mcdn\Model\StatSettingsForListCloudAccountsOutput $stat_settings stat_settings
     *
     * @return $this
     */
    public function setStatSettings($stat_settings)
    {
        $this->container['stat_settings'] = $stat_settings;

        return $this;
    }

    /**
     * Gets sub_products
     *
     * @return string[]
     */
    public function getSubProducts()
    {
        return $this->container['sub_products'];
    }

    /**
     * Sets sub_products
     *
     * @param string[] $sub_products sub_products
     *
     * @return $this
     */
    public function setSubProducts($sub_products)
    {
        $this->container['sub_products'] = $sub_products;

        return $this;
    }

    /**
     * Gets sync_status
     *
     * @return string
     */
    public function getSyncStatus()
    {
        return $this->container['sync_status'];
    }

    /**
     * Sets sync_status
     *
     * @param string $sync_status sync_status
     *
     * @return $this
     */
    public function setSyncStatus($sync_status)
    {
        $this->container['sync_status'] = $sync_status;

        return $this;
    }

    /**
     * Gets sync_status_state
     *
     * @return \Volcengine\Mcdn\Model\SyncStatusStateForListCloudAccountsOutput
     */
    public function getSyncStatusState()
    {
        return $this->container['sync_status_state'];
    }

    /**
     * Sets sync_status_state
     *
     * @param \Volcengine\Mcdn\Model\SyncStatusStateForListCloudAccountsOutput $sync_status_state sync_status_state
     *
     * @return $this
     */
    public function setSyncStatusState($sync_status_state)
    {
        $this->container['sync_status_state'] = $sync_status_state;

        return $this;
    }

    /**
     * Gets top_account_id
     *
     * @return string
     */
    public function getTopAccountId()
    {
        return $this->container['top_account_id'];
    }

    /**
     * Sets top_account_id
     *
     * @param string $top_account_id top_account_id
     *
     * @return $this
     */
    public function setTopAccountId($top_account_id)
    {
        $this->container['top_account_id'] = $top_account_id;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return int
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param int $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets vendor
     *
     * @return string
     */
    public function getVendor()
    {
        return $this->container['vendor'];
    }

    /**
     * Sets vendor
     *
     * @param string $vendor vendor
     *
     * @return $this
     */
    public function setVendor($vendor)
    {
        $this->container['vendor'] = $vendor;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

