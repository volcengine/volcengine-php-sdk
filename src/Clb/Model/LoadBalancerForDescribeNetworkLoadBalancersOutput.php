<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Clb\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class LoadBalancerForDescribeNetworkLoadBalancersOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LoadBalancerForDescribeNetworkLoadBalancersOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'string',
        'billing_status' => 'string',
        'billing_type' => 'int',
        'create_time' => 'string',
        'cross_zone_enabled' => 'bool',
        'dns_name' => 'string',
        'description' => 'string',
        'expected_overdue_time' => 'string',
        'ip_address_version' => 'string',
        'ipv4_bandwidth_package_id' => 'string',
        'ipv4_network_type' => 'string',
        'ipv6_bandwidth_package_id' => 'string',
        'ipv6_network_type' => 'string',
        'load_balancer_id' => 'string',
        'load_balancer_name' => 'string',
        'managed_security_group_id' => 'string',
        'modification_protection_status' => 'string',
        'overdue_time' => 'string',
        'project_name' => 'string',
        'reclaimed_time' => 'string',
        'security_group_ids' => 'string[]',
        'status' => 'string',
        'tags' => '\Volcengine\Clb\Model\TagForDescribeNetworkLoadBalancersOutput[]',
        'update_time' => 'string',
        'vpc_id' => 'string',
        'zone_mappings' => '\Volcengine\Clb\Model\ZoneMappingForDescribeNetworkLoadBalancersOutput[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => null,
        'billing_status' => null,
        'billing_type' => null,
        'create_time' => null,
        'cross_zone_enabled' => null,
        'dns_name' => null,
        'description' => null,
        'expected_overdue_time' => null,
        'ip_address_version' => null,
        'ipv4_bandwidth_package_id' => null,
        'ipv4_network_type' => null,
        'ipv6_bandwidth_package_id' => null,
        'ipv6_network_type' => null,
        'load_balancer_id' => null,
        'load_balancer_name' => null,
        'managed_security_group_id' => null,
        'modification_protection_status' => null,
        'overdue_time' => null,
        'project_name' => null,
        'reclaimed_time' => null,
        'security_group_ids' => null,
        'status' => null,
        'tags' => null,
        'update_time' => null,
        'vpc_id' => null,
        'zone_mappings' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'AccountId',
        'billing_status' => 'BillingStatus',
        'billing_type' => 'BillingType',
        'create_time' => 'CreateTime',
        'cross_zone_enabled' => 'CrossZoneEnabled',
        'dns_name' => 'DNSName',
        'description' => 'Description',
        'expected_overdue_time' => 'ExpectedOverdueTime',
        'ip_address_version' => 'IpAddressVersion',
        'ipv4_bandwidth_package_id' => 'Ipv4BandwidthPackageId',
        'ipv4_network_type' => 'Ipv4NetworkType',
        'ipv6_bandwidth_package_id' => 'Ipv6BandwidthPackageId',
        'ipv6_network_type' => 'Ipv6NetworkType',
        'load_balancer_id' => 'LoadBalancerId',
        'load_balancer_name' => 'LoadBalancerName',
        'managed_security_group_id' => 'ManagedSecurityGroupId',
        'modification_protection_status' => 'ModificationProtectionStatus',
        'overdue_time' => 'OverdueTime',
        'project_name' => 'ProjectName',
        'reclaimed_time' => 'ReclaimedTime',
        'security_group_ids' => 'SecurityGroupIds',
        'status' => 'Status',
        'tags' => 'Tags',
        'update_time' => 'UpdateTime',
        'vpc_id' => 'VpcId',
        'zone_mappings' => 'ZoneMappings'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'billing_status' => 'setBillingStatus',
        'billing_type' => 'setBillingType',
        'create_time' => 'setCreateTime',
        'cross_zone_enabled' => 'setCrossZoneEnabled',
        'dns_name' => 'setDnsName',
        'description' => 'setDescription',
        'expected_overdue_time' => 'setExpectedOverdueTime',
        'ip_address_version' => 'setIpAddressVersion',
        'ipv4_bandwidth_package_id' => 'setIpv4BandwidthPackageId',
        'ipv4_network_type' => 'setIpv4NetworkType',
        'ipv6_bandwidth_package_id' => 'setIpv6BandwidthPackageId',
        'ipv6_network_type' => 'setIpv6NetworkType',
        'load_balancer_id' => 'setLoadBalancerId',
        'load_balancer_name' => 'setLoadBalancerName',
        'managed_security_group_id' => 'setManagedSecurityGroupId',
        'modification_protection_status' => 'setModificationProtectionStatus',
        'overdue_time' => 'setOverdueTime',
        'project_name' => 'setProjectName',
        'reclaimed_time' => 'setReclaimedTime',
        'security_group_ids' => 'setSecurityGroupIds',
        'status' => 'setStatus',
        'tags' => 'setTags',
        'update_time' => 'setUpdateTime',
        'vpc_id' => 'setVpcId',
        'zone_mappings' => 'setZoneMappings'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'billing_status' => 'getBillingStatus',
        'billing_type' => 'getBillingType',
        'create_time' => 'getCreateTime',
        'cross_zone_enabled' => 'getCrossZoneEnabled',
        'dns_name' => 'getDnsName',
        'description' => 'getDescription',
        'expected_overdue_time' => 'getExpectedOverdueTime',
        'ip_address_version' => 'getIpAddressVersion',
        'ipv4_bandwidth_package_id' => 'getIpv4BandwidthPackageId',
        'ipv4_network_type' => 'getIpv4NetworkType',
        'ipv6_bandwidth_package_id' => 'getIpv6BandwidthPackageId',
        'ipv6_network_type' => 'getIpv6NetworkType',
        'load_balancer_id' => 'getLoadBalancerId',
        'load_balancer_name' => 'getLoadBalancerName',
        'managed_security_group_id' => 'getManagedSecurityGroupId',
        'modification_protection_status' => 'getModificationProtectionStatus',
        'overdue_time' => 'getOverdueTime',
        'project_name' => 'getProjectName',
        'reclaimed_time' => 'getReclaimedTime',
        'security_group_ids' => 'getSecurityGroupIds',
        'status' => 'getStatus',
        'tags' => 'getTags',
        'update_time' => 'getUpdateTime',
        'vpc_id' => 'getVpcId',
        'zone_mappings' => 'getZoneMappings'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['billing_status'] = isset($data['billing_status']) ? $data['billing_status'] : null;
        $this->container['billing_type'] = isset($data['billing_type']) ? $data['billing_type'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['cross_zone_enabled'] = isset($data['cross_zone_enabled']) ? $data['cross_zone_enabled'] : null;
        $this->container['dns_name'] = isset($data['dns_name']) ? $data['dns_name'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['expected_overdue_time'] = isset($data['expected_overdue_time']) ? $data['expected_overdue_time'] : null;
        $this->container['ip_address_version'] = isset($data['ip_address_version']) ? $data['ip_address_version'] : null;
        $this->container['ipv4_bandwidth_package_id'] = isset($data['ipv4_bandwidth_package_id']) ? $data['ipv4_bandwidth_package_id'] : null;
        $this->container['ipv4_network_type'] = isset($data['ipv4_network_type']) ? $data['ipv4_network_type'] : null;
        $this->container['ipv6_bandwidth_package_id'] = isset($data['ipv6_bandwidth_package_id']) ? $data['ipv6_bandwidth_package_id'] : null;
        $this->container['ipv6_network_type'] = isset($data['ipv6_network_type']) ? $data['ipv6_network_type'] : null;
        $this->container['load_balancer_id'] = isset($data['load_balancer_id']) ? $data['load_balancer_id'] : null;
        $this->container['load_balancer_name'] = isset($data['load_balancer_name']) ? $data['load_balancer_name'] : null;
        $this->container['managed_security_group_id'] = isset($data['managed_security_group_id']) ? $data['managed_security_group_id'] : null;
        $this->container['modification_protection_status'] = isset($data['modification_protection_status']) ? $data['modification_protection_status'] : null;
        $this->container['overdue_time'] = isset($data['overdue_time']) ? $data['overdue_time'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['reclaimed_time'] = isset($data['reclaimed_time']) ? $data['reclaimed_time'] : null;
        $this->container['security_group_ids'] = isset($data['security_group_ids']) ? $data['security_group_ids'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
        $this->container['zone_mappings'] = isset($data['zone_mappings']) ? $data['zone_mappings'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets billing_status
     *
     * @return string
     */
    public function getBillingStatus()
    {
        return $this->container['billing_status'];
    }

    /**
     * Sets billing_status
     *
     * @param string $billing_status billing_status
     *
     * @return $this
     */
    public function setBillingStatus($billing_status)
    {
        $this->container['billing_status'] = $billing_status;

        return $this;
    }

    /**
     * Gets billing_type
     *
     * @return int
     */
    public function getBillingType()
    {
        return $this->container['billing_type'];
    }

    /**
     * Sets billing_type
     *
     * @param int $billing_type billing_type
     *
     * @return $this
     */
    public function setBillingType($billing_type)
    {
        $this->container['billing_type'] = $billing_type;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets cross_zone_enabled
     *
     * @return bool
     */
    public function getCrossZoneEnabled()
    {
        return $this->container['cross_zone_enabled'];
    }

    /**
     * Sets cross_zone_enabled
     *
     * @param bool $cross_zone_enabled cross_zone_enabled
     *
     * @return $this
     */
    public function setCrossZoneEnabled($cross_zone_enabled)
    {
        $this->container['cross_zone_enabled'] = $cross_zone_enabled;

        return $this;
    }

    /**
     * Gets dns_name
     *
     * @return string
     */
    public function getDnsName()
    {
        return $this->container['dns_name'];
    }

    /**
     * Sets dns_name
     *
     * @param string $dns_name dns_name
     *
     * @return $this
     */
    public function setDnsName($dns_name)
    {
        $this->container['dns_name'] = $dns_name;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets expected_overdue_time
     *
     * @return string
     */
    public function getExpectedOverdueTime()
    {
        return $this->container['expected_overdue_time'];
    }

    /**
     * Sets expected_overdue_time
     *
     * @param string $expected_overdue_time expected_overdue_time
     *
     * @return $this
     */
    public function setExpectedOverdueTime($expected_overdue_time)
    {
        $this->container['expected_overdue_time'] = $expected_overdue_time;

        return $this;
    }

    /**
     * Gets ip_address_version
     *
     * @return string
     */
    public function getIpAddressVersion()
    {
        return $this->container['ip_address_version'];
    }

    /**
     * Sets ip_address_version
     *
     * @param string $ip_address_version ip_address_version
     *
     * @return $this
     */
    public function setIpAddressVersion($ip_address_version)
    {
        $this->container['ip_address_version'] = $ip_address_version;

        return $this;
    }

    /**
     * Gets ipv4_bandwidth_package_id
     *
     * @return string
     */
    public function getIpv4BandwidthPackageId()
    {
        return $this->container['ipv4_bandwidth_package_id'];
    }

    /**
     * Sets ipv4_bandwidth_package_id
     *
     * @param string $ipv4_bandwidth_package_id ipv4_bandwidth_package_id
     *
     * @return $this
     */
    public function setIpv4BandwidthPackageId($ipv4_bandwidth_package_id)
    {
        $this->container['ipv4_bandwidth_package_id'] = $ipv4_bandwidth_package_id;

        return $this;
    }

    /**
     * Gets ipv4_network_type
     *
     * @return string
     */
    public function getIpv4NetworkType()
    {
        return $this->container['ipv4_network_type'];
    }

    /**
     * Sets ipv4_network_type
     *
     * @param string $ipv4_network_type ipv4_network_type
     *
     * @return $this
     */
    public function setIpv4NetworkType($ipv4_network_type)
    {
        $this->container['ipv4_network_type'] = $ipv4_network_type;

        return $this;
    }

    /**
     * Gets ipv6_bandwidth_package_id
     *
     * @return string
     */
    public function getIpv6BandwidthPackageId()
    {
        return $this->container['ipv6_bandwidth_package_id'];
    }

    /**
     * Sets ipv6_bandwidth_package_id
     *
     * @param string $ipv6_bandwidth_package_id ipv6_bandwidth_package_id
     *
     * @return $this
     */
    public function setIpv6BandwidthPackageId($ipv6_bandwidth_package_id)
    {
        $this->container['ipv6_bandwidth_package_id'] = $ipv6_bandwidth_package_id;

        return $this;
    }

    /**
     * Gets ipv6_network_type
     *
     * @return string
     */
    public function getIpv6NetworkType()
    {
        return $this->container['ipv6_network_type'];
    }

    /**
     * Sets ipv6_network_type
     *
     * @param string $ipv6_network_type ipv6_network_type
     *
     * @return $this
     */
    public function setIpv6NetworkType($ipv6_network_type)
    {
        $this->container['ipv6_network_type'] = $ipv6_network_type;

        return $this;
    }

    /**
     * Gets load_balancer_id
     *
     * @return string
     */
    public function getLoadBalancerId()
    {
        return $this->container['load_balancer_id'];
    }

    /**
     * Sets load_balancer_id
     *
     * @param string $load_balancer_id load_balancer_id
     *
     * @return $this
     */
    public function setLoadBalancerId($load_balancer_id)
    {
        $this->container['load_balancer_id'] = $load_balancer_id;

        return $this;
    }

    /**
     * Gets load_balancer_name
     *
     * @return string
     */
    public function getLoadBalancerName()
    {
        return $this->container['load_balancer_name'];
    }

    /**
     * Sets load_balancer_name
     *
     * @param string $load_balancer_name load_balancer_name
     *
     * @return $this
     */
    public function setLoadBalancerName($load_balancer_name)
    {
        $this->container['load_balancer_name'] = $load_balancer_name;

        return $this;
    }

    /**
     * Gets managed_security_group_id
     *
     * @return string
     */
    public function getManagedSecurityGroupId()
    {
        return $this->container['managed_security_group_id'];
    }

    /**
     * Sets managed_security_group_id
     *
     * @param string $managed_security_group_id managed_security_group_id
     *
     * @return $this
     */
    public function setManagedSecurityGroupId($managed_security_group_id)
    {
        $this->container['managed_security_group_id'] = $managed_security_group_id;

        return $this;
    }

    /**
     * Gets modification_protection_status
     *
     * @return string
     */
    public function getModificationProtectionStatus()
    {
        return $this->container['modification_protection_status'];
    }

    /**
     * Sets modification_protection_status
     *
     * @param string $modification_protection_status modification_protection_status
     *
     * @return $this
     */
    public function setModificationProtectionStatus($modification_protection_status)
    {
        $this->container['modification_protection_status'] = $modification_protection_status;

        return $this;
    }

    /**
     * Gets overdue_time
     *
     * @return string
     */
    public function getOverdueTime()
    {
        return $this->container['overdue_time'];
    }

    /**
     * Sets overdue_time
     *
     * @param string $overdue_time overdue_time
     *
     * @return $this
     */
    public function setOverdueTime($overdue_time)
    {
        $this->container['overdue_time'] = $overdue_time;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets reclaimed_time
     *
     * @return string
     */
    public function getReclaimedTime()
    {
        return $this->container['reclaimed_time'];
    }

    /**
     * Sets reclaimed_time
     *
     * @param string $reclaimed_time reclaimed_time
     *
     * @return $this
     */
    public function setReclaimedTime($reclaimed_time)
    {
        $this->container['reclaimed_time'] = $reclaimed_time;

        return $this;
    }

    /**
     * Gets security_group_ids
     *
     * @return string[]
     */
    public function getSecurityGroupIds()
    {
        return $this->container['security_group_ids'];
    }

    /**
     * Sets security_group_ids
     *
     * @param string[] $security_group_ids security_group_ids
     *
     * @return $this
     */
    public function setSecurityGroupIds($security_group_ids)
    {
        $this->container['security_group_ids'] = $security_group_ids;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Clb\Model\TagForDescribeNetworkLoadBalancersOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Clb\Model\TagForDescribeNetworkLoadBalancersOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return string
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param string $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }

    /**
     * Gets zone_mappings
     *
     * @return \Volcengine\Clb\Model\ZoneMappingForDescribeNetworkLoadBalancersOutput[]
     */
    public function getZoneMappings()
    {
        return $this->container['zone_mappings'];
    }

    /**
     * Sets zone_mappings
     *
     * @param \Volcengine\Clb\Model\ZoneMappingForDescribeNetworkLoadBalancersOutput[] $zone_mappings zone_mappings
     *
     * @return $this
     */
    public function setZoneMappings($zone_mappings)
    {
        $this->container['zone_mappings'] = $zone_mappings;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

