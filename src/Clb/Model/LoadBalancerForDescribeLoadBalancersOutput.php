<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Clb\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class LoadBalancerForDescribeLoadBalancersOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LoadBalancerForDescribeLoadBalancersOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'account_id' => 'string',
        'address_ip_version' => 'string',
        'business_status' => 'string',
        'bypass_security_group_enabled' => 'string',
        'create_time' => 'string',
        'deleted_time' => 'string',
        'description' => 'string',
        'eip_address' => 'string',
        'eip_id' => 'string',
        'eni_address' => 'string',
        'eni_address_num' => 'int',
        'eni_addresses' => '\Volcengine\Clb\Model\EniAddressForDescribeLoadBalancersOutput[]',
        'eni_id' => 'string',
        'eni_ipv6_address' => 'string',
        'exclusive_cluster_id' => 'string',
        'expired_time' => 'string',
        'ipv6_eip_id' => 'string',
        'load_balancer_billing_type' => 'int',
        'load_balancer_id' => 'string',
        'load_balancer_name' => 'string',
        'load_balancer_spec' => 'string',
        'lock_reason' => 'string',
        'master_zone_id' => 'string',
        'modification_protection_reason' => 'string',
        'modification_protection_status' => 'string',
        'new_arch' => 'bool',
        'overdue_time' => 'string',
        'project_name' => 'string',
        'service_managed' => 'bool',
        'slave_zone_id' => 'string',
        'status' => 'string',
        'subnet_id' => 'string',
        'tags' => '\Volcengine\Clb\Model\TagForDescribeLoadBalancersOutput[]',
        'timestamp_remove_enabled' => 'string',
        'type' => 'string',
        'update_time' => 'string',
        'vpc_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'account_id' => null,
        'address_ip_version' => null,
        'business_status' => null,
        'bypass_security_group_enabled' => null,
        'create_time' => null,
        'deleted_time' => null,
        'description' => null,
        'eip_address' => null,
        'eip_id' => null,
        'eni_address' => null,
        'eni_address_num' => null,
        'eni_addresses' => null,
        'eni_id' => null,
        'eni_ipv6_address' => null,
        'exclusive_cluster_id' => null,
        'expired_time' => null,
        'ipv6_eip_id' => null,
        'load_balancer_billing_type' => null,
        'load_balancer_id' => null,
        'load_balancer_name' => null,
        'load_balancer_spec' => null,
        'lock_reason' => null,
        'master_zone_id' => null,
        'modification_protection_reason' => null,
        'modification_protection_status' => null,
        'new_arch' => null,
        'overdue_time' => null,
        'project_name' => null,
        'service_managed' => null,
        'slave_zone_id' => null,
        'status' => null,
        'subnet_id' => null,
        'tags' => null,
        'timestamp_remove_enabled' => null,
        'type' => null,
        'update_time' => null,
        'vpc_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'account_id' => 'AccountId',
        'address_ip_version' => 'AddressIpVersion',
        'business_status' => 'BusinessStatus',
        'bypass_security_group_enabled' => 'BypassSecurityGroupEnabled',
        'create_time' => 'CreateTime',
        'deleted_time' => 'DeletedTime',
        'description' => 'Description',
        'eip_address' => 'EipAddress',
        'eip_id' => 'EipID',
        'eni_address' => 'EniAddress',
        'eni_address_num' => 'EniAddressNum',
        'eni_addresses' => 'EniAddresses',
        'eni_id' => 'EniID',
        'eni_ipv6_address' => 'EniIpv6Address',
        'exclusive_cluster_id' => 'ExclusiveClusterId',
        'expired_time' => 'ExpiredTime',
        'ipv6_eip_id' => 'Ipv6EipId',
        'load_balancer_billing_type' => 'LoadBalancerBillingType',
        'load_balancer_id' => 'LoadBalancerId',
        'load_balancer_name' => 'LoadBalancerName',
        'load_balancer_spec' => 'LoadBalancerSpec',
        'lock_reason' => 'LockReason',
        'master_zone_id' => 'MasterZoneId',
        'modification_protection_reason' => 'ModificationProtectionReason',
        'modification_protection_status' => 'ModificationProtectionStatus',
        'new_arch' => 'NewArch',
        'overdue_time' => 'OverdueTime',
        'project_name' => 'ProjectName',
        'service_managed' => 'ServiceManaged',
        'slave_zone_id' => 'SlaveZoneId',
        'status' => 'Status',
        'subnet_id' => 'SubnetId',
        'tags' => 'Tags',
        'timestamp_remove_enabled' => 'TimestampRemoveEnabled',
        'type' => 'Type',
        'update_time' => 'UpdateTime',
        'vpc_id' => 'VpcId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'account_id' => 'setAccountId',
        'address_ip_version' => 'setAddressIpVersion',
        'business_status' => 'setBusinessStatus',
        'bypass_security_group_enabled' => 'setBypassSecurityGroupEnabled',
        'create_time' => 'setCreateTime',
        'deleted_time' => 'setDeletedTime',
        'description' => 'setDescription',
        'eip_address' => 'setEipAddress',
        'eip_id' => 'setEipId',
        'eni_address' => 'setEniAddress',
        'eni_address_num' => 'setEniAddressNum',
        'eni_addresses' => 'setEniAddresses',
        'eni_id' => 'setEniId',
        'eni_ipv6_address' => 'setEniIpv6Address',
        'exclusive_cluster_id' => 'setExclusiveClusterId',
        'expired_time' => 'setExpiredTime',
        'ipv6_eip_id' => 'setIpv6EipId',
        'load_balancer_billing_type' => 'setLoadBalancerBillingType',
        'load_balancer_id' => 'setLoadBalancerId',
        'load_balancer_name' => 'setLoadBalancerName',
        'load_balancer_spec' => 'setLoadBalancerSpec',
        'lock_reason' => 'setLockReason',
        'master_zone_id' => 'setMasterZoneId',
        'modification_protection_reason' => 'setModificationProtectionReason',
        'modification_protection_status' => 'setModificationProtectionStatus',
        'new_arch' => 'setNewArch',
        'overdue_time' => 'setOverdueTime',
        'project_name' => 'setProjectName',
        'service_managed' => 'setServiceManaged',
        'slave_zone_id' => 'setSlaveZoneId',
        'status' => 'setStatus',
        'subnet_id' => 'setSubnetId',
        'tags' => 'setTags',
        'timestamp_remove_enabled' => 'setTimestampRemoveEnabled',
        'type' => 'setType',
        'update_time' => 'setUpdateTime',
        'vpc_id' => 'setVpcId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'account_id' => 'getAccountId',
        'address_ip_version' => 'getAddressIpVersion',
        'business_status' => 'getBusinessStatus',
        'bypass_security_group_enabled' => 'getBypassSecurityGroupEnabled',
        'create_time' => 'getCreateTime',
        'deleted_time' => 'getDeletedTime',
        'description' => 'getDescription',
        'eip_address' => 'getEipAddress',
        'eip_id' => 'getEipId',
        'eni_address' => 'getEniAddress',
        'eni_address_num' => 'getEniAddressNum',
        'eni_addresses' => 'getEniAddresses',
        'eni_id' => 'getEniId',
        'eni_ipv6_address' => 'getEniIpv6Address',
        'exclusive_cluster_id' => 'getExclusiveClusterId',
        'expired_time' => 'getExpiredTime',
        'ipv6_eip_id' => 'getIpv6EipId',
        'load_balancer_billing_type' => 'getLoadBalancerBillingType',
        'load_balancer_id' => 'getLoadBalancerId',
        'load_balancer_name' => 'getLoadBalancerName',
        'load_balancer_spec' => 'getLoadBalancerSpec',
        'lock_reason' => 'getLockReason',
        'master_zone_id' => 'getMasterZoneId',
        'modification_protection_reason' => 'getModificationProtectionReason',
        'modification_protection_status' => 'getModificationProtectionStatus',
        'new_arch' => 'getNewArch',
        'overdue_time' => 'getOverdueTime',
        'project_name' => 'getProjectName',
        'service_managed' => 'getServiceManaged',
        'slave_zone_id' => 'getSlaveZoneId',
        'status' => 'getStatus',
        'subnet_id' => 'getSubnetId',
        'tags' => 'getTags',
        'timestamp_remove_enabled' => 'getTimestampRemoveEnabled',
        'type' => 'getType',
        'update_time' => 'getUpdateTime',
        'vpc_id' => 'getVpcId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['account_id'] = isset($data['account_id']) ? $data['account_id'] : null;
        $this->container['address_ip_version'] = isset($data['address_ip_version']) ? $data['address_ip_version'] : null;
        $this->container['business_status'] = isset($data['business_status']) ? $data['business_status'] : null;
        $this->container['bypass_security_group_enabled'] = isset($data['bypass_security_group_enabled']) ? $data['bypass_security_group_enabled'] : null;
        $this->container['create_time'] = isset($data['create_time']) ? $data['create_time'] : null;
        $this->container['deleted_time'] = isset($data['deleted_time']) ? $data['deleted_time'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['eip_address'] = isset($data['eip_address']) ? $data['eip_address'] : null;
        $this->container['eip_id'] = isset($data['eip_id']) ? $data['eip_id'] : null;
        $this->container['eni_address'] = isset($data['eni_address']) ? $data['eni_address'] : null;
        $this->container['eni_address_num'] = isset($data['eni_address_num']) ? $data['eni_address_num'] : null;
        $this->container['eni_addresses'] = isset($data['eni_addresses']) ? $data['eni_addresses'] : null;
        $this->container['eni_id'] = isset($data['eni_id']) ? $data['eni_id'] : null;
        $this->container['eni_ipv6_address'] = isset($data['eni_ipv6_address']) ? $data['eni_ipv6_address'] : null;
        $this->container['exclusive_cluster_id'] = isset($data['exclusive_cluster_id']) ? $data['exclusive_cluster_id'] : null;
        $this->container['expired_time'] = isset($data['expired_time']) ? $data['expired_time'] : null;
        $this->container['ipv6_eip_id'] = isset($data['ipv6_eip_id']) ? $data['ipv6_eip_id'] : null;
        $this->container['load_balancer_billing_type'] = isset($data['load_balancer_billing_type']) ? $data['load_balancer_billing_type'] : null;
        $this->container['load_balancer_id'] = isset($data['load_balancer_id']) ? $data['load_balancer_id'] : null;
        $this->container['load_balancer_name'] = isset($data['load_balancer_name']) ? $data['load_balancer_name'] : null;
        $this->container['load_balancer_spec'] = isset($data['load_balancer_spec']) ? $data['load_balancer_spec'] : null;
        $this->container['lock_reason'] = isset($data['lock_reason']) ? $data['lock_reason'] : null;
        $this->container['master_zone_id'] = isset($data['master_zone_id']) ? $data['master_zone_id'] : null;
        $this->container['modification_protection_reason'] = isset($data['modification_protection_reason']) ? $data['modification_protection_reason'] : null;
        $this->container['modification_protection_status'] = isset($data['modification_protection_status']) ? $data['modification_protection_status'] : null;
        $this->container['new_arch'] = isset($data['new_arch']) ? $data['new_arch'] : null;
        $this->container['overdue_time'] = isset($data['overdue_time']) ? $data['overdue_time'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['service_managed'] = isset($data['service_managed']) ? $data['service_managed'] : null;
        $this->container['slave_zone_id'] = isset($data['slave_zone_id']) ? $data['slave_zone_id'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['subnet_id'] = isset($data['subnet_id']) ? $data['subnet_id'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['timestamp_remove_enabled'] = isset($data['timestamp_remove_enabled']) ? $data['timestamp_remove_enabled'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
        $this->container['update_time'] = isset($data['update_time']) ? $data['update_time'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets account_id
     *
     * @return string
     */
    public function getAccountId()
    {
        return $this->container['account_id'];
    }

    /**
     * Sets account_id
     *
     * @param string $account_id account_id
     *
     * @return $this
     */
    public function setAccountId($account_id)
    {
        $this->container['account_id'] = $account_id;

        return $this;
    }

    /**
     * Gets address_ip_version
     *
     * @return string
     */
    public function getAddressIpVersion()
    {
        return $this->container['address_ip_version'];
    }

    /**
     * Sets address_ip_version
     *
     * @param string $address_ip_version address_ip_version
     *
     * @return $this
     */
    public function setAddressIpVersion($address_ip_version)
    {
        $this->container['address_ip_version'] = $address_ip_version;

        return $this;
    }

    /**
     * Gets business_status
     *
     * @return string
     */
    public function getBusinessStatus()
    {
        return $this->container['business_status'];
    }

    /**
     * Sets business_status
     *
     * @param string $business_status business_status
     *
     * @return $this
     */
    public function setBusinessStatus($business_status)
    {
        $this->container['business_status'] = $business_status;

        return $this;
    }

    /**
     * Gets bypass_security_group_enabled
     *
     * @return string
     */
    public function getBypassSecurityGroupEnabled()
    {
        return $this->container['bypass_security_group_enabled'];
    }

    /**
     * Sets bypass_security_group_enabled
     *
     * @param string $bypass_security_group_enabled bypass_security_group_enabled
     *
     * @return $this
     */
    public function setBypassSecurityGroupEnabled($bypass_security_group_enabled)
    {
        $this->container['bypass_security_group_enabled'] = $bypass_security_group_enabled;

        return $this;
    }

    /**
     * Gets create_time
     *
     * @return string
     */
    public function getCreateTime()
    {
        return $this->container['create_time'];
    }

    /**
     * Sets create_time
     *
     * @param string $create_time create_time
     *
     * @return $this
     */
    public function setCreateTime($create_time)
    {
        $this->container['create_time'] = $create_time;

        return $this;
    }

    /**
     * Gets deleted_time
     *
     * @return string
     */
    public function getDeletedTime()
    {
        return $this->container['deleted_time'];
    }

    /**
     * Sets deleted_time
     *
     * @param string $deleted_time deleted_time
     *
     * @return $this
     */
    public function setDeletedTime($deleted_time)
    {
        $this->container['deleted_time'] = $deleted_time;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets eip_address
     *
     * @return string
     */
    public function getEipAddress()
    {
        return $this->container['eip_address'];
    }

    /**
     * Sets eip_address
     *
     * @param string $eip_address eip_address
     *
     * @return $this
     */
    public function setEipAddress($eip_address)
    {
        $this->container['eip_address'] = $eip_address;

        return $this;
    }

    /**
     * Gets eip_id
     *
     * @return string
     */
    public function getEipId()
    {
        return $this->container['eip_id'];
    }

    /**
     * Sets eip_id
     *
     * @param string $eip_id eip_id
     *
     * @return $this
     */
    public function setEipId($eip_id)
    {
        $this->container['eip_id'] = $eip_id;

        return $this;
    }

    /**
     * Gets eni_address
     *
     * @return string
     */
    public function getEniAddress()
    {
        return $this->container['eni_address'];
    }

    /**
     * Sets eni_address
     *
     * @param string $eni_address eni_address
     *
     * @return $this
     */
    public function setEniAddress($eni_address)
    {
        $this->container['eni_address'] = $eni_address;

        return $this;
    }

    /**
     * Gets eni_address_num
     *
     * @return int
     */
    public function getEniAddressNum()
    {
        return $this->container['eni_address_num'];
    }

    /**
     * Sets eni_address_num
     *
     * @param int $eni_address_num eni_address_num
     *
     * @return $this
     */
    public function setEniAddressNum($eni_address_num)
    {
        $this->container['eni_address_num'] = $eni_address_num;

        return $this;
    }

    /**
     * Gets eni_addresses
     *
     * @return \Volcengine\Clb\Model\EniAddressForDescribeLoadBalancersOutput[]
     */
    public function getEniAddresses()
    {
        return $this->container['eni_addresses'];
    }

    /**
     * Sets eni_addresses
     *
     * @param \Volcengine\Clb\Model\EniAddressForDescribeLoadBalancersOutput[] $eni_addresses eni_addresses
     *
     * @return $this
     */
    public function setEniAddresses($eni_addresses)
    {
        $this->container['eni_addresses'] = $eni_addresses;

        return $this;
    }

    /**
     * Gets eni_id
     *
     * @return string
     */
    public function getEniId()
    {
        return $this->container['eni_id'];
    }

    /**
     * Sets eni_id
     *
     * @param string $eni_id eni_id
     *
     * @return $this
     */
    public function setEniId($eni_id)
    {
        $this->container['eni_id'] = $eni_id;

        return $this;
    }

    /**
     * Gets eni_ipv6_address
     *
     * @return string
     */
    public function getEniIpv6Address()
    {
        return $this->container['eni_ipv6_address'];
    }

    /**
     * Sets eni_ipv6_address
     *
     * @param string $eni_ipv6_address eni_ipv6_address
     *
     * @return $this
     */
    public function setEniIpv6Address($eni_ipv6_address)
    {
        $this->container['eni_ipv6_address'] = $eni_ipv6_address;

        return $this;
    }

    /**
     * Gets exclusive_cluster_id
     *
     * @return string
     */
    public function getExclusiveClusterId()
    {
        return $this->container['exclusive_cluster_id'];
    }

    /**
     * Sets exclusive_cluster_id
     *
     * @param string $exclusive_cluster_id exclusive_cluster_id
     *
     * @return $this
     */
    public function setExclusiveClusterId($exclusive_cluster_id)
    {
        $this->container['exclusive_cluster_id'] = $exclusive_cluster_id;

        return $this;
    }

    /**
     * Gets expired_time
     *
     * @return string
     */
    public function getExpiredTime()
    {
        return $this->container['expired_time'];
    }

    /**
     * Sets expired_time
     *
     * @param string $expired_time expired_time
     *
     * @return $this
     */
    public function setExpiredTime($expired_time)
    {
        $this->container['expired_time'] = $expired_time;

        return $this;
    }

    /**
     * Gets ipv6_eip_id
     *
     * @return string
     */
    public function getIpv6EipId()
    {
        return $this->container['ipv6_eip_id'];
    }

    /**
     * Sets ipv6_eip_id
     *
     * @param string $ipv6_eip_id ipv6_eip_id
     *
     * @return $this
     */
    public function setIpv6EipId($ipv6_eip_id)
    {
        $this->container['ipv6_eip_id'] = $ipv6_eip_id;

        return $this;
    }

    /**
     * Gets load_balancer_billing_type
     *
     * @return int
     */
    public function getLoadBalancerBillingType()
    {
        return $this->container['load_balancer_billing_type'];
    }

    /**
     * Sets load_balancer_billing_type
     *
     * @param int $load_balancer_billing_type load_balancer_billing_type
     *
     * @return $this
     */
    public function setLoadBalancerBillingType($load_balancer_billing_type)
    {
        $this->container['load_balancer_billing_type'] = $load_balancer_billing_type;

        return $this;
    }

    /**
     * Gets load_balancer_id
     *
     * @return string
     */
    public function getLoadBalancerId()
    {
        return $this->container['load_balancer_id'];
    }

    /**
     * Sets load_balancer_id
     *
     * @param string $load_balancer_id load_balancer_id
     *
     * @return $this
     */
    public function setLoadBalancerId($load_balancer_id)
    {
        $this->container['load_balancer_id'] = $load_balancer_id;

        return $this;
    }

    /**
     * Gets load_balancer_name
     *
     * @return string
     */
    public function getLoadBalancerName()
    {
        return $this->container['load_balancer_name'];
    }

    /**
     * Sets load_balancer_name
     *
     * @param string $load_balancer_name load_balancer_name
     *
     * @return $this
     */
    public function setLoadBalancerName($load_balancer_name)
    {
        $this->container['load_balancer_name'] = $load_balancer_name;

        return $this;
    }

    /**
     * Gets load_balancer_spec
     *
     * @return string
     */
    public function getLoadBalancerSpec()
    {
        return $this->container['load_balancer_spec'];
    }

    /**
     * Sets load_balancer_spec
     *
     * @param string $load_balancer_spec load_balancer_spec
     *
     * @return $this
     */
    public function setLoadBalancerSpec($load_balancer_spec)
    {
        $this->container['load_balancer_spec'] = $load_balancer_spec;

        return $this;
    }

    /**
     * Gets lock_reason
     *
     * @return string
     */
    public function getLockReason()
    {
        return $this->container['lock_reason'];
    }

    /**
     * Sets lock_reason
     *
     * @param string $lock_reason lock_reason
     *
     * @return $this
     */
    public function setLockReason($lock_reason)
    {
        $this->container['lock_reason'] = $lock_reason;

        return $this;
    }

    /**
     * Gets master_zone_id
     *
     * @return string
     */
    public function getMasterZoneId()
    {
        return $this->container['master_zone_id'];
    }

    /**
     * Sets master_zone_id
     *
     * @param string $master_zone_id master_zone_id
     *
     * @return $this
     */
    public function setMasterZoneId($master_zone_id)
    {
        $this->container['master_zone_id'] = $master_zone_id;

        return $this;
    }

    /**
     * Gets modification_protection_reason
     *
     * @return string
     */
    public function getModificationProtectionReason()
    {
        return $this->container['modification_protection_reason'];
    }

    /**
     * Sets modification_protection_reason
     *
     * @param string $modification_protection_reason modification_protection_reason
     *
     * @return $this
     */
    public function setModificationProtectionReason($modification_protection_reason)
    {
        $this->container['modification_protection_reason'] = $modification_protection_reason;

        return $this;
    }

    /**
     * Gets modification_protection_status
     *
     * @return string
     */
    public function getModificationProtectionStatus()
    {
        return $this->container['modification_protection_status'];
    }

    /**
     * Sets modification_protection_status
     *
     * @param string $modification_protection_status modification_protection_status
     *
     * @return $this
     */
    public function setModificationProtectionStatus($modification_protection_status)
    {
        $this->container['modification_protection_status'] = $modification_protection_status;

        return $this;
    }

    /**
     * Gets new_arch
     *
     * @return bool
     */
    public function getNewArch()
    {
        return $this->container['new_arch'];
    }

    /**
     * Sets new_arch
     *
     * @param bool $new_arch new_arch
     *
     * @return $this
     */
    public function setNewArch($new_arch)
    {
        $this->container['new_arch'] = $new_arch;

        return $this;
    }

    /**
     * Gets overdue_time
     *
     * @return string
     */
    public function getOverdueTime()
    {
        return $this->container['overdue_time'];
    }

    /**
     * Sets overdue_time
     *
     * @param string $overdue_time overdue_time
     *
     * @return $this
     */
    public function setOverdueTime($overdue_time)
    {
        $this->container['overdue_time'] = $overdue_time;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets service_managed
     *
     * @return bool
     */
    public function getServiceManaged()
    {
        return $this->container['service_managed'];
    }

    /**
     * Sets service_managed
     *
     * @param bool $service_managed service_managed
     *
     * @return $this
     */
    public function setServiceManaged($service_managed)
    {
        $this->container['service_managed'] = $service_managed;

        return $this;
    }

    /**
     * Gets slave_zone_id
     *
     * @return string
     */
    public function getSlaveZoneId()
    {
        return $this->container['slave_zone_id'];
    }

    /**
     * Sets slave_zone_id
     *
     * @param string $slave_zone_id slave_zone_id
     *
     * @return $this
     */
    public function setSlaveZoneId($slave_zone_id)
    {
        $this->container['slave_zone_id'] = $slave_zone_id;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets subnet_id
     *
     * @return string
     */
    public function getSubnetId()
    {
        return $this->container['subnet_id'];
    }

    /**
     * Sets subnet_id
     *
     * @param string $subnet_id subnet_id
     *
     * @return $this
     */
    public function setSubnetId($subnet_id)
    {
        $this->container['subnet_id'] = $subnet_id;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Clb\Model\TagForDescribeLoadBalancersOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Clb\Model\TagForDescribeLoadBalancersOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets timestamp_remove_enabled
     *
     * @return string
     */
    public function getTimestampRemoveEnabled()
    {
        return $this->container['timestamp_remove_enabled'];
    }

    /**
     * Sets timestamp_remove_enabled
     *
     * @param string $timestamp_remove_enabled timestamp_remove_enabled
     *
     * @return $this
     */
    public function setTimestampRemoveEnabled($timestamp_remove_enabled)
    {
        $this->container['timestamp_remove_enabled'] = $timestamp_remove_enabled;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }

    /**
     * Gets update_time
     *
     * @return string
     */
    public function getUpdateTime()
    {
        return $this->container['update_time'];
    }

    /**
     * Sets update_time
     *
     * @param string $update_time update_time
     *
     * @return $this
     */
    public function setUpdateTime($update_time)
    {
        $this->container['update_time'] = $update_time;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

