<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Clb\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ModifyLoadBalancerAttributesRequest implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ModifyLoadBalancerAttributesRequest';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'address_ip_version' => 'string',
        'allowed_ports' => 'string[]',
        'bypass_security_group_enabled' => 'string',
        'description' => 'string',
        'eni_ipv6_address' => 'string',
        'load_balancer_id' => 'string',
        'load_balancer_name' => 'string',
        'load_balancer_spec' => 'string',
        'modification_protection_reason' => 'string',
        'modification_protection_status' => 'string',
        'type' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'address_ip_version' => null,
        'allowed_ports' => null,
        'bypass_security_group_enabled' => null,
        'description' => null,
        'eni_ipv6_address' => null,
        'load_balancer_id' => null,
        'load_balancer_name' => null,
        'load_balancer_spec' => null,
        'modification_protection_reason' => null,
        'modification_protection_status' => null,
        'type' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'address_ip_version' => 'AddressIpVersion',
        'allowed_ports' => 'AllowedPorts',
        'bypass_security_group_enabled' => 'BypassSecurityGroupEnabled',
        'description' => 'Description',
        'eni_ipv6_address' => 'EniIpv6Address',
        'load_balancer_id' => 'LoadBalancerId',
        'load_balancer_name' => 'LoadBalancerName',
        'load_balancer_spec' => 'LoadBalancerSpec',
        'modification_protection_reason' => 'ModificationProtectionReason',
        'modification_protection_status' => 'ModificationProtectionStatus',
        'type' => 'Type'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'address_ip_version' => 'setAddressIpVersion',
        'allowed_ports' => 'setAllowedPorts',
        'bypass_security_group_enabled' => 'setBypassSecurityGroupEnabled',
        'description' => 'setDescription',
        'eni_ipv6_address' => 'setEniIpv6Address',
        'load_balancer_id' => 'setLoadBalancerId',
        'load_balancer_name' => 'setLoadBalancerName',
        'load_balancer_spec' => 'setLoadBalancerSpec',
        'modification_protection_reason' => 'setModificationProtectionReason',
        'modification_protection_status' => 'setModificationProtectionStatus',
        'type' => 'setType'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'address_ip_version' => 'getAddressIpVersion',
        'allowed_ports' => 'getAllowedPorts',
        'bypass_security_group_enabled' => 'getBypassSecurityGroupEnabled',
        'description' => 'getDescription',
        'eni_ipv6_address' => 'getEniIpv6Address',
        'load_balancer_id' => 'getLoadBalancerId',
        'load_balancer_name' => 'getLoadBalancerName',
        'load_balancer_spec' => 'getLoadBalancerSpec',
        'modification_protection_reason' => 'getModificationProtectionReason',
        'modification_protection_status' => 'getModificationProtectionStatus',
        'type' => 'getType'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['address_ip_version'] = isset($data['address_ip_version']) ? $data['address_ip_version'] : null;
        $this->container['allowed_ports'] = isset($data['allowed_ports']) ? $data['allowed_ports'] : null;
        $this->container['bypass_security_group_enabled'] = isset($data['bypass_security_group_enabled']) ? $data['bypass_security_group_enabled'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['eni_ipv6_address'] = isset($data['eni_ipv6_address']) ? $data['eni_ipv6_address'] : null;
        $this->container['load_balancer_id'] = isset($data['load_balancer_id']) ? $data['load_balancer_id'] : null;
        $this->container['load_balancer_name'] = isset($data['load_balancer_name']) ? $data['load_balancer_name'] : null;
        $this->container['load_balancer_spec'] = isset($data['load_balancer_spec']) ? $data['load_balancer_spec'] : null;
        $this->container['modification_protection_reason'] = isset($data['modification_protection_reason']) ? $data['modification_protection_reason'] : null;
        $this->container['modification_protection_status'] = isset($data['modification_protection_status']) ? $data['modification_protection_status'] : null;
        $this->container['type'] = isset($data['type']) ? $data['type'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['load_balancer_id'] === null) {
            $invalidProperties[] = "'load_balancer_id' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets address_ip_version
     *
     * @return string
     */
    public function getAddressIpVersion()
    {
        return $this->container['address_ip_version'];
    }

    /**
     * Sets address_ip_version
     *
     * @param string $address_ip_version address_ip_version
     *
     * @return $this
     */
    public function setAddressIpVersion($address_ip_version)
    {
        $this->container['address_ip_version'] = $address_ip_version;

        return $this;
    }

    /**
     * Gets allowed_ports
     *
     * @return string[]
     */
    public function getAllowedPorts()
    {
        return $this->container['allowed_ports'];
    }

    /**
     * Sets allowed_ports
     *
     * @param string[] $allowed_ports allowed_ports
     *
     * @return $this
     */
    public function setAllowedPorts($allowed_ports)
    {
        $this->container['allowed_ports'] = $allowed_ports;

        return $this;
    }

    /**
     * Gets bypass_security_group_enabled
     *
     * @return string
     */
    public function getBypassSecurityGroupEnabled()
    {
        return $this->container['bypass_security_group_enabled'];
    }

    /**
     * Sets bypass_security_group_enabled
     *
     * @param string $bypass_security_group_enabled bypass_security_group_enabled
     *
     * @return $this
     */
    public function setBypassSecurityGroupEnabled($bypass_security_group_enabled)
    {
        $this->container['bypass_security_group_enabled'] = $bypass_security_group_enabled;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets eni_ipv6_address
     *
     * @return string
     */
    public function getEniIpv6Address()
    {
        return $this->container['eni_ipv6_address'];
    }

    /**
     * Sets eni_ipv6_address
     *
     * @param string $eni_ipv6_address eni_ipv6_address
     *
     * @return $this
     */
    public function setEniIpv6Address($eni_ipv6_address)
    {
        $this->container['eni_ipv6_address'] = $eni_ipv6_address;

        return $this;
    }

    /**
     * Gets load_balancer_id
     *
     * @return string
     */
    public function getLoadBalancerId()
    {
        return $this->container['load_balancer_id'];
    }

    /**
     * Sets load_balancer_id
     *
     * @param string $load_balancer_id load_balancer_id
     *
     * @return $this
     */
    public function setLoadBalancerId($load_balancer_id)
    {
        $this->container['load_balancer_id'] = $load_balancer_id;

        return $this;
    }

    /**
     * Gets load_balancer_name
     *
     * @return string
     */
    public function getLoadBalancerName()
    {
        return $this->container['load_balancer_name'];
    }

    /**
     * Sets load_balancer_name
     *
     * @param string $load_balancer_name load_balancer_name
     *
     * @return $this
     */
    public function setLoadBalancerName($load_balancer_name)
    {
        $this->container['load_balancer_name'] = $load_balancer_name;

        return $this;
    }

    /**
     * Gets load_balancer_spec
     *
     * @return string
     */
    public function getLoadBalancerSpec()
    {
        return $this->container['load_balancer_spec'];
    }

    /**
     * Sets load_balancer_spec
     *
     * @param string $load_balancer_spec load_balancer_spec
     *
     * @return $this
     */
    public function setLoadBalancerSpec($load_balancer_spec)
    {
        $this->container['load_balancer_spec'] = $load_balancer_spec;

        return $this;
    }

    /**
     * Gets modification_protection_reason
     *
     * @return string
     */
    public function getModificationProtectionReason()
    {
        return $this->container['modification_protection_reason'];
    }

    /**
     * Sets modification_protection_reason
     *
     * @param string $modification_protection_reason modification_protection_reason
     *
     * @return $this
     */
    public function setModificationProtectionReason($modification_protection_reason)
    {
        $this->container['modification_protection_reason'] = $modification_protection_reason;

        return $this;
    }

    /**
     * Gets modification_protection_status
     *
     * @return string
     */
    public function getModificationProtectionStatus()
    {
        return $this->container['modification_protection_status'];
    }

    /**
     * Sets modification_protection_status
     *
     * @param string $modification_protection_status modification_protection_status
     *
     * @return $this
     */
    public function setModificationProtectionStatus($modification_protection_status)
    {
        $this->container['modification_protection_status'] = $modification_protection_status;

        return $this;
    }

    /**
     * Gets type
     *
     * @return string
     */
    public function getType()
    {
        return $this->container['type'];
    }

    /**
     * Sets type
     *
     * @param string $type type
     *
     * @return $this
     */
    public function setType($type)
    {
        $this->container['type'] = $type;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

