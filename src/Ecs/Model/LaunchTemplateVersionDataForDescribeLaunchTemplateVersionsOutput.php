<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Ecs\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class LaunchTemplateVersionDataForDescribeLaunchTemplateVersionsOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'LaunchTemplateVersionDataForDescribeLaunchTemplateVersionsOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'deployment_set_group_number' => 'int',
        'deployment_set_id' => 'string',
        'description' => 'string',
        'eip' => '\Volcengine\Ecs\Model\EipForDescribeLaunchTemplateVersionsOutput',
        'host_name' => 'string',
        'hpc_cluster_id' => 'string',
        'image_id' => 'string',
        'instance_charge_type' => 'string',
        'instance_name' => 'string',
        'instance_type_id' => 'string',
        'keep_image_credential' => 'bool',
        'key_pair_name' => 'string',
        'network_interfaces' => '\Volcengine\Ecs\Model\NetworkInterfaceForDescribeLaunchTemplateVersionsOutput[]',
        'project_name' => 'string',
        'scheduled_instance' => '\Volcengine\Ecs\Model\ScheduledInstanceForDescribeLaunchTemplateVersionsOutput',
        'security_enhancement_strategy' => 'string',
        'spot_price_limit' => 'float',
        'spot_strategy' => 'string',
        'suffix_index' => 'int',
        'tags' => '\Volcengine\Ecs\Model\TagForDescribeLaunchTemplateVersionsOutput[]',
        'unique_suffix' => 'bool',
        'user_data' => 'string',
        'volumes' => '\Volcengine\Ecs\Model\VolumeForDescribeLaunchTemplateVersionsOutput[]',
        'vpc_id' => 'string',
        'zone_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'deployment_set_group_number' => 'int32',
        'deployment_set_id' => null,
        'description' => null,
        'eip' => null,
        'host_name' => null,
        'hpc_cluster_id' => null,
        'image_id' => null,
        'instance_charge_type' => null,
        'instance_name' => null,
        'instance_type_id' => null,
        'keep_image_credential' => null,
        'key_pair_name' => null,
        'network_interfaces' => null,
        'project_name' => null,
        'scheduled_instance' => null,
        'security_enhancement_strategy' => null,
        'spot_price_limit' => 'float',
        'spot_strategy' => null,
        'suffix_index' => 'int32',
        'tags' => null,
        'unique_suffix' => null,
        'user_data' => null,
        'volumes' => null,
        'vpc_id' => null,
        'zone_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'deployment_set_group_number' => 'DeploymentSetGroupNumber',
        'deployment_set_id' => 'DeploymentSetId',
        'description' => 'Description',
        'eip' => 'Eip',
        'host_name' => 'HostName',
        'hpc_cluster_id' => 'HpcClusterId',
        'image_id' => 'ImageId',
        'instance_charge_type' => 'InstanceChargeType',
        'instance_name' => 'InstanceName',
        'instance_type_id' => 'InstanceTypeId',
        'keep_image_credential' => 'KeepImageCredential',
        'key_pair_name' => 'KeyPairName',
        'network_interfaces' => 'NetworkInterfaces',
        'project_name' => 'ProjectName',
        'scheduled_instance' => 'ScheduledInstance',
        'security_enhancement_strategy' => 'SecurityEnhancementStrategy',
        'spot_price_limit' => 'SpotPriceLimit',
        'spot_strategy' => 'SpotStrategy',
        'suffix_index' => 'SuffixIndex',
        'tags' => 'Tags',
        'unique_suffix' => 'UniqueSuffix',
        'user_data' => 'UserData',
        'volumes' => 'Volumes',
        'vpc_id' => 'VpcId',
        'zone_id' => 'ZoneId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'deployment_set_group_number' => 'setDeploymentSetGroupNumber',
        'deployment_set_id' => 'setDeploymentSetId',
        'description' => 'setDescription',
        'eip' => 'setEip',
        'host_name' => 'setHostName',
        'hpc_cluster_id' => 'setHpcClusterId',
        'image_id' => 'setImageId',
        'instance_charge_type' => 'setInstanceChargeType',
        'instance_name' => 'setInstanceName',
        'instance_type_id' => 'setInstanceTypeId',
        'keep_image_credential' => 'setKeepImageCredential',
        'key_pair_name' => 'setKeyPairName',
        'network_interfaces' => 'setNetworkInterfaces',
        'project_name' => 'setProjectName',
        'scheduled_instance' => 'setScheduledInstance',
        'security_enhancement_strategy' => 'setSecurityEnhancementStrategy',
        'spot_price_limit' => 'setSpotPriceLimit',
        'spot_strategy' => 'setSpotStrategy',
        'suffix_index' => 'setSuffixIndex',
        'tags' => 'setTags',
        'unique_suffix' => 'setUniqueSuffix',
        'user_data' => 'setUserData',
        'volumes' => 'setVolumes',
        'vpc_id' => 'setVpcId',
        'zone_id' => 'setZoneId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'deployment_set_group_number' => 'getDeploymentSetGroupNumber',
        'deployment_set_id' => 'getDeploymentSetId',
        'description' => 'getDescription',
        'eip' => 'getEip',
        'host_name' => 'getHostName',
        'hpc_cluster_id' => 'getHpcClusterId',
        'image_id' => 'getImageId',
        'instance_charge_type' => 'getInstanceChargeType',
        'instance_name' => 'getInstanceName',
        'instance_type_id' => 'getInstanceTypeId',
        'keep_image_credential' => 'getKeepImageCredential',
        'key_pair_name' => 'getKeyPairName',
        'network_interfaces' => 'getNetworkInterfaces',
        'project_name' => 'getProjectName',
        'scheduled_instance' => 'getScheduledInstance',
        'security_enhancement_strategy' => 'getSecurityEnhancementStrategy',
        'spot_price_limit' => 'getSpotPriceLimit',
        'spot_strategy' => 'getSpotStrategy',
        'suffix_index' => 'getSuffixIndex',
        'tags' => 'getTags',
        'unique_suffix' => 'getUniqueSuffix',
        'user_data' => 'getUserData',
        'volumes' => 'getVolumes',
        'vpc_id' => 'getVpcId',
        'zone_id' => 'getZoneId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['deployment_set_group_number'] = isset($data['deployment_set_group_number']) ? $data['deployment_set_group_number'] : null;
        $this->container['deployment_set_id'] = isset($data['deployment_set_id']) ? $data['deployment_set_id'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['eip'] = isset($data['eip']) ? $data['eip'] : null;
        $this->container['host_name'] = isset($data['host_name']) ? $data['host_name'] : null;
        $this->container['hpc_cluster_id'] = isset($data['hpc_cluster_id']) ? $data['hpc_cluster_id'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['instance_charge_type'] = isset($data['instance_charge_type']) ? $data['instance_charge_type'] : null;
        $this->container['instance_name'] = isset($data['instance_name']) ? $data['instance_name'] : null;
        $this->container['instance_type_id'] = isset($data['instance_type_id']) ? $data['instance_type_id'] : null;
        $this->container['keep_image_credential'] = isset($data['keep_image_credential']) ? $data['keep_image_credential'] : null;
        $this->container['key_pair_name'] = isset($data['key_pair_name']) ? $data['key_pair_name'] : null;
        $this->container['network_interfaces'] = isset($data['network_interfaces']) ? $data['network_interfaces'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['scheduled_instance'] = isset($data['scheduled_instance']) ? $data['scheduled_instance'] : null;
        $this->container['security_enhancement_strategy'] = isset($data['security_enhancement_strategy']) ? $data['security_enhancement_strategy'] : null;
        $this->container['spot_price_limit'] = isset($data['spot_price_limit']) ? $data['spot_price_limit'] : null;
        $this->container['spot_strategy'] = isset($data['spot_strategy']) ? $data['spot_strategy'] : null;
        $this->container['suffix_index'] = isset($data['suffix_index']) ? $data['suffix_index'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['unique_suffix'] = isset($data['unique_suffix']) ? $data['unique_suffix'] : null;
        $this->container['user_data'] = isset($data['user_data']) ? $data['user_data'] : null;
        $this->container['volumes'] = isset($data['volumes']) ? $data['volumes'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
        $this->container['zone_id'] = isset($data['zone_id']) ? $data['zone_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets deployment_set_group_number
     *
     * @return int
     */
    public function getDeploymentSetGroupNumber()
    {
        return $this->container['deployment_set_group_number'];
    }

    /**
     * Sets deployment_set_group_number
     *
     * @param int $deployment_set_group_number deployment_set_group_number
     *
     * @return $this
     */
    public function setDeploymentSetGroupNumber($deployment_set_group_number)
    {
        $this->container['deployment_set_group_number'] = $deployment_set_group_number;

        return $this;
    }

    /**
     * Gets deployment_set_id
     *
     * @return string
     */
    public function getDeploymentSetId()
    {
        return $this->container['deployment_set_id'];
    }

    /**
     * Sets deployment_set_id
     *
     * @param string $deployment_set_id deployment_set_id
     *
     * @return $this
     */
    public function setDeploymentSetId($deployment_set_id)
    {
        $this->container['deployment_set_id'] = $deployment_set_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets eip
     *
     * @return \Volcengine\Ecs\Model\EipForDescribeLaunchTemplateVersionsOutput
     */
    public function getEip()
    {
        return $this->container['eip'];
    }

    /**
     * Sets eip
     *
     * @param \Volcengine\Ecs\Model\EipForDescribeLaunchTemplateVersionsOutput $eip eip
     *
     * @return $this
     */
    public function setEip($eip)
    {
        $this->container['eip'] = $eip;

        return $this;
    }

    /**
     * Gets host_name
     *
     * @return string
     */
    public function getHostName()
    {
        return $this->container['host_name'];
    }

    /**
     * Sets host_name
     *
     * @param string $host_name host_name
     *
     * @return $this
     */
    public function setHostName($host_name)
    {
        $this->container['host_name'] = $host_name;

        return $this;
    }

    /**
     * Gets hpc_cluster_id
     *
     * @return string
     */
    public function getHpcClusterId()
    {
        return $this->container['hpc_cluster_id'];
    }

    /**
     * Sets hpc_cluster_id
     *
     * @param string $hpc_cluster_id hpc_cluster_id
     *
     * @return $this
     */
    public function setHpcClusterId($hpc_cluster_id)
    {
        $this->container['hpc_cluster_id'] = $hpc_cluster_id;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets instance_charge_type
     *
     * @return string
     */
    public function getInstanceChargeType()
    {
        return $this->container['instance_charge_type'];
    }

    /**
     * Sets instance_charge_type
     *
     * @param string $instance_charge_type instance_charge_type
     *
     * @return $this
     */
    public function setInstanceChargeType($instance_charge_type)
    {
        $this->container['instance_charge_type'] = $instance_charge_type;

        return $this;
    }

    /**
     * Gets instance_name
     *
     * @return string
     */
    public function getInstanceName()
    {
        return $this->container['instance_name'];
    }

    /**
     * Sets instance_name
     *
     * @param string $instance_name instance_name
     *
     * @return $this
     */
    public function setInstanceName($instance_name)
    {
        $this->container['instance_name'] = $instance_name;

        return $this;
    }

    /**
     * Gets instance_type_id
     *
     * @return string
     */
    public function getInstanceTypeId()
    {
        return $this->container['instance_type_id'];
    }

    /**
     * Sets instance_type_id
     *
     * @param string $instance_type_id instance_type_id
     *
     * @return $this
     */
    public function setInstanceTypeId($instance_type_id)
    {
        $this->container['instance_type_id'] = $instance_type_id;

        return $this;
    }

    /**
     * Gets keep_image_credential
     *
     * @return bool
     */
    public function getKeepImageCredential()
    {
        return $this->container['keep_image_credential'];
    }

    /**
     * Sets keep_image_credential
     *
     * @param bool $keep_image_credential keep_image_credential
     *
     * @return $this
     */
    public function setKeepImageCredential($keep_image_credential)
    {
        $this->container['keep_image_credential'] = $keep_image_credential;

        return $this;
    }

    /**
     * Gets key_pair_name
     *
     * @return string
     */
    public function getKeyPairName()
    {
        return $this->container['key_pair_name'];
    }

    /**
     * Sets key_pair_name
     *
     * @param string $key_pair_name key_pair_name
     *
     * @return $this
     */
    public function setKeyPairName($key_pair_name)
    {
        $this->container['key_pair_name'] = $key_pair_name;

        return $this;
    }

    /**
     * Gets network_interfaces
     *
     * @return \Volcengine\Ecs\Model\NetworkInterfaceForDescribeLaunchTemplateVersionsOutput[]
     */
    public function getNetworkInterfaces()
    {
        return $this->container['network_interfaces'];
    }

    /**
     * Sets network_interfaces
     *
     * @param \Volcengine\Ecs\Model\NetworkInterfaceForDescribeLaunchTemplateVersionsOutput[] $network_interfaces network_interfaces
     *
     * @return $this
     */
    public function setNetworkInterfaces($network_interfaces)
    {
        $this->container['network_interfaces'] = $network_interfaces;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets scheduled_instance
     *
     * @return \Volcengine\Ecs\Model\ScheduledInstanceForDescribeLaunchTemplateVersionsOutput
     */
    public function getScheduledInstance()
    {
        return $this->container['scheduled_instance'];
    }

    /**
     * Sets scheduled_instance
     *
     * @param \Volcengine\Ecs\Model\ScheduledInstanceForDescribeLaunchTemplateVersionsOutput $scheduled_instance scheduled_instance
     *
     * @return $this
     */
    public function setScheduledInstance($scheduled_instance)
    {
        $this->container['scheduled_instance'] = $scheduled_instance;

        return $this;
    }

    /**
     * Gets security_enhancement_strategy
     *
     * @return string
     */
    public function getSecurityEnhancementStrategy()
    {
        return $this->container['security_enhancement_strategy'];
    }

    /**
     * Sets security_enhancement_strategy
     *
     * @param string $security_enhancement_strategy security_enhancement_strategy
     *
     * @return $this
     */
    public function setSecurityEnhancementStrategy($security_enhancement_strategy)
    {
        $this->container['security_enhancement_strategy'] = $security_enhancement_strategy;

        return $this;
    }

    /**
     * Gets spot_price_limit
     *
     * @return float
     */
    public function getSpotPriceLimit()
    {
        return $this->container['spot_price_limit'];
    }

    /**
     * Sets spot_price_limit
     *
     * @param float $spot_price_limit spot_price_limit
     *
     * @return $this
     */
    public function setSpotPriceLimit($spot_price_limit)
    {
        $this->container['spot_price_limit'] = $spot_price_limit;

        return $this;
    }

    /**
     * Gets spot_strategy
     *
     * @return string
     */
    public function getSpotStrategy()
    {
        return $this->container['spot_strategy'];
    }

    /**
     * Sets spot_strategy
     *
     * @param string $spot_strategy spot_strategy
     *
     * @return $this
     */
    public function setSpotStrategy($spot_strategy)
    {
        $this->container['spot_strategy'] = $spot_strategy;

        return $this;
    }

    /**
     * Gets suffix_index
     *
     * @return int
     */
    public function getSuffixIndex()
    {
        return $this->container['suffix_index'];
    }

    /**
     * Sets suffix_index
     *
     * @param int $suffix_index suffix_index
     *
     * @return $this
     */
    public function setSuffixIndex($suffix_index)
    {
        $this->container['suffix_index'] = $suffix_index;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Ecs\Model\TagForDescribeLaunchTemplateVersionsOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Ecs\Model\TagForDescribeLaunchTemplateVersionsOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets unique_suffix
     *
     * @return bool
     */
    public function getUniqueSuffix()
    {
        return $this->container['unique_suffix'];
    }

    /**
     * Sets unique_suffix
     *
     * @param bool $unique_suffix unique_suffix
     *
     * @return $this
     */
    public function setUniqueSuffix($unique_suffix)
    {
        $this->container['unique_suffix'] = $unique_suffix;

        return $this;
    }

    /**
     * Gets user_data
     *
     * @return string
     */
    public function getUserData()
    {
        return $this->container['user_data'];
    }

    /**
     * Sets user_data
     *
     * @param string $user_data user_data
     *
     * @return $this
     */
    public function setUserData($user_data)
    {
        $this->container['user_data'] = $user_data;

        return $this;
    }

    /**
     * Gets volumes
     *
     * @return \Volcengine\Ecs\Model\VolumeForDescribeLaunchTemplateVersionsOutput[]
     */
    public function getVolumes()
    {
        return $this->container['volumes'];
    }

    /**
     * Sets volumes
     *
     * @param \Volcengine\Ecs\Model\VolumeForDescribeLaunchTemplateVersionsOutput[] $volumes volumes
     *
     * @return $this
     */
    public function setVolumes($volumes)
    {
        $this->container['volumes'] = $volumes;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return string
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param string $zone_id zone_id
     *
     * @return $this
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

