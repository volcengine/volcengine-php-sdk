<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Ecs\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class InstanceForDescribeInstancesOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'InstanceForDescribeInstancesOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'affinity_group_id' => 'string',
        'cpu_options' => '\Volcengine\Ecs\Model\CpuOptionsForDescribeInstancesOutput',
        'cpus' => 'int',
        'created_at' => 'string',
        'deletion_protection' => 'bool',
        'deployment_set_group_number' => 'int',
        'deployment_set_id' => 'string',
        'description' => 'string',
        'eip_address' => '\Volcengine\Ecs\Model\EipAddressForDescribeInstancesOutput',
        'elastic_scheduled_instance_type' => 'string',
        'enable_jumbo_frame' => 'bool',
        'expired_at' => 'string',
        'host_name' => 'string',
        'hostname' => 'string',
        'hpc_cluster_id' => 'string',
        'image_id' => 'string',
        'instance_charge_type' => 'string',
        'instance_id' => 'string',
        'instance_name' => 'string',
        'instance_type_id' => 'string',
        'key_pair_id' => 'string',
        'key_pair_name' => 'string',
        'local_volumes' => '\Volcengine\Ecs\Model\LocalVolumeForDescribeInstancesOutput[]',
        'memory_size' => 'int',
        'metadata_options' => '\Volcengine\Ecs\Model\MetadataOptionsForDescribeInstancesOutput',
        'network_interfaces' => '\Volcengine\Ecs\Model\NetworkInterfaceForDescribeInstancesOutput[]',
        'os_name' => 'string',
        'os_type' => 'string',
        'placement' => '\Volcengine\Ecs\Model\PlacementForDescribeInstancesOutput',
        'project_name' => 'string',
        'rdma_ip_addresses' => 'string[]',
        'scheduled_instance_id' => 'string',
        'spot_price_limit' => 'float',
        'spot_strategy' => 'string',
        'status' => 'string',
        'stopped_mode' => 'string',
        'tags' => '\Volcengine\Ecs\Model\TagForDescribeInstancesOutput[]',
        'updated_at' => 'string',
        'uuid' => 'string',
        'volumes' => '\Volcengine\Ecs\Model\VolumeForDescribeInstancesOutput[]',
        'vpc_id' => 'string',
        'zone_id' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'affinity_group_id' => null,
        'cpu_options' => null,
        'cpus' => 'int32',
        'created_at' => null,
        'deletion_protection' => null,
        'deployment_set_group_number' => 'int32',
        'deployment_set_id' => null,
        'description' => null,
        'eip_address' => null,
        'elastic_scheduled_instance_type' => null,
        'enable_jumbo_frame' => null,
        'expired_at' => null,
        'host_name' => null,
        'hostname' => null,
        'hpc_cluster_id' => null,
        'image_id' => null,
        'instance_charge_type' => null,
        'instance_id' => null,
        'instance_name' => null,
        'instance_type_id' => null,
        'key_pair_id' => null,
        'key_pair_name' => null,
        'local_volumes' => null,
        'memory_size' => 'int32',
        'metadata_options' => null,
        'network_interfaces' => null,
        'os_name' => null,
        'os_type' => null,
        'placement' => null,
        'project_name' => null,
        'rdma_ip_addresses' => null,
        'scheduled_instance_id' => null,
        'spot_price_limit' => 'float',
        'spot_strategy' => null,
        'status' => null,
        'stopped_mode' => null,
        'tags' => null,
        'updated_at' => null,
        'uuid' => null,
        'volumes' => null,
        'vpc_id' => null,
        'zone_id' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'affinity_group_id' => 'AffinityGroupId',
        'cpu_options' => 'CpuOptions',
        'cpus' => 'Cpus',
        'created_at' => 'CreatedAt',
        'deletion_protection' => 'DeletionProtection',
        'deployment_set_group_number' => 'DeploymentSetGroupNumber',
        'deployment_set_id' => 'DeploymentSetId',
        'description' => 'Description',
        'eip_address' => 'EipAddress',
        'elastic_scheduled_instance_type' => 'ElasticScheduledInstanceType',
        'enable_jumbo_frame' => 'EnableJumboFrame',
        'expired_at' => 'ExpiredAt',
        'host_name' => 'HostName',
        'hostname' => 'Hostname',
        'hpc_cluster_id' => 'HpcClusterId',
        'image_id' => 'ImageId',
        'instance_charge_type' => 'InstanceChargeType',
        'instance_id' => 'InstanceId',
        'instance_name' => 'InstanceName',
        'instance_type_id' => 'InstanceTypeId',
        'key_pair_id' => 'KeyPairId',
        'key_pair_name' => 'KeyPairName',
        'local_volumes' => 'LocalVolumes',
        'memory_size' => 'MemorySize',
        'metadata_options' => 'MetadataOptions',
        'network_interfaces' => 'NetworkInterfaces',
        'os_name' => 'OsName',
        'os_type' => 'OsType',
        'placement' => 'Placement',
        'project_name' => 'ProjectName',
        'rdma_ip_addresses' => 'RdmaIpAddresses',
        'scheduled_instance_id' => 'ScheduledInstanceId',
        'spot_price_limit' => 'SpotPriceLimit',
        'spot_strategy' => 'SpotStrategy',
        'status' => 'Status',
        'stopped_mode' => 'StoppedMode',
        'tags' => 'Tags',
        'updated_at' => 'UpdatedAt',
        'uuid' => 'Uuid',
        'volumes' => 'Volumes',
        'vpc_id' => 'VpcId',
        'zone_id' => 'ZoneId'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'affinity_group_id' => 'setAffinityGroupId',
        'cpu_options' => 'setCpuOptions',
        'cpus' => 'setCpus',
        'created_at' => 'setCreatedAt',
        'deletion_protection' => 'setDeletionProtection',
        'deployment_set_group_number' => 'setDeploymentSetGroupNumber',
        'deployment_set_id' => 'setDeploymentSetId',
        'description' => 'setDescription',
        'eip_address' => 'setEipAddress',
        'elastic_scheduled_instance_type' => 'setElasticScheduledInstanceType',
        'enable_jumbo_frame' => 'setEnableJumboFrame',
        'expired_at' => 'setExpiredAt',
        'host_name' => 'setHostName',
        'hostname' => 'setHostname',
        'hpc_cluster_id' => 'setHpcClusterId',
        'image_id' => 'setImageId',
        'instance_charge_type' => 'setInstanceChargeType',
        'instance_id' => 'setInstanceId',
        'instance_name' => 'setInstanceName',
        'instance_type_id' => 'setInstanceTypeId',
        'key_pair_id' => 'setKeyPairId',
        'key_pair_name' => 'setKeyPairName',
        'local_volumes' => 'setLocalVolumes',
        'memory_size' => 'setMemorySize',
        'metadata_options' => 'setMetadataOptions',
        'network_interfaces' => 'setNetworkInterfaces',
        'os_name' => 'setOsName',
        'os_type' => 'setOsType',
        'placement' => 'setPlacement',
        'project_name' => 'setProjectName',
        'rdma_ip_addresses' => 'setRdmaIpAddresses',
        'scheduled_instance_id' => 'setScheduledInstanceId',
        'spot_price_limit' => 'setSpotPriceLimit',
        'spot_strategy' => 'setSpotStrategy',
        'status' => 'setStatus',
        'stopped_mode' => 'setStoppedMode',
        'tags' => 'setTags',
        'updated_at' => 'setUpdatedAt',
        'uuid' => 'setUuid',
        'volumes' => 'setVolumes',
        'vpc_id' => 'setVpcId',
        'zone_id' => 'setZoneId'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'affinity_group_id' => 'getAffinityGroupId',
        'cpu_options' => 'getCpuOptions',
        'cpus' => 'getCpus',
        'created_at' => 'getCreatedAt',
        'deletion_protection' => 'getDeletionProtection',
        'deployment_set_group_number' => 'getDeploymentSetGroupNumber',
        'deployment_set_id' => 'getDeploymentSetId',
        'description' => 'getDescription',
        'eip_address' => 'getEipAddress',
        'elastic_scheduled_instance_type' => 'getElasticScheduledInstanceType',
        'enable_jumbo_frame' => 'getEnableJumboFrame',
        'expired_at' => 'getExpiredAt',
        'host_name' => 'getHostName',
        'hostname' => 'getHostname',
        'hpc_cluster_id' => 'getHpcClusterId',
        'image_id' => 'getImageId',
        'instance_charge_type' => 'getInstanceChargeType',
        'instance_id' => 'getInstanceId',
        'instance_name' => 'getInstanceName',
        'instance_type_id' => 'getInstanceTypeId',
        'key_pair_id' => 'getKeyPairId',
        'key_pair_name' => 'getKeyPairName',
        'local_volumes' => 'getLocalVolumes',
        'memory_size' => 'getMemorySize',
        'metadata_options' => 'getMetadataOptions',
        'network_interfaces' => 'getNetworkInterfaces',
        'os_name' => 'getOsName',
        'os_type' => 'getOsType',
        'placement' => 'getPlacement',
        'project_name' => 'getProjectName',
        'rdma_ip_addresses' => 'getRdmaIpAddresses',
        'scheduled_instance_id' => 'getScheduledInstanceId',
        'spot_price_limit' => 'getSpotPriceLimit',
        'spot_strategy' => 'getSpotStrategy',
        'status' => 'getStatus',
        'stopped_mode' => 'getStoppedMode',
        'tags' => 'getTags',
        'updated_at' => 'getUpdatedAt',
        'uuid' => 'getUuid',
        'volumes' => 'getVolumes',
        'vpc_id' => 'getVpcId',
        'zone_id' => 'getZoneId'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['affinity_group_id'] = isset($data['affinity_group_id']) ? $data['affinity_group_id'] : null;
        $this->container['cpu_options'] = isset($data['cpu_options']) ? $data['cpu_options'] : null;
        $this->container['cpus'] = isset($data['cpus']) ? $data['cpus'] : null;
        $this->container['created_at'] = isset($data['created_at']) ? $data['created_at'] : null;
        $this->container['deletion_protection'] = isset($data['deletion_protection']) ? $data['deletion_protection'] : null;
        $this->container['deployment_set_group_number'] = isset($data['deployment_set_group_number']) ? $data['deployment_set_group_number'] : null;
        $this->container['deployment_set_id'] = isset($data['deployment_set_id']) ? $data['deployment_set_id'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['eip_address'] = isset($data['eip_address']) ? $data['eip_address'] : null;
        $this->container['elastic_scheduled_instance_type'] = isset($data['elastic_scheduled_instance_type']) ? $data['elastic_scheduled_instance_type'] : null;
        $this->container['enable_jumbo_frame'] = isset($data['enable_jumbo_frame']) ? $data['enable_jumbo_frame'] : null;
        $this->container['expired_at'] = isset($data['expired_at']) ? $data['expired_at'] : null;
        $this->container['host_name'] = isset($data['host_name']) ? $data['host_name'] : null;
        $this->container['hostname'] = isset($data['hostname']) ? $data['hostname'] : null;
        $this->container['hpc_cluster_id'] = isset($data['hpc_cluster_id']) ? $data['hpc_cluster_id'] : null;
        $this->container['image_id'] = isset($data['image_id']) ? $data['image_id'] : null;
        $this->container['instance_charge_type'] = isset($data['instance_charge_type']) ? $data['instance_charge_type'] : null;
        $this->container['instance_id'] = isset($data['instance_id']) ? $data['instance_id'] : null;
        $this->container['instance_name'] = isset($data['instance_name']) ? $data['instance_name'] : null;
        $this->container['instance_type_id'] = isset($data['instance_type_id']) ? $data['instance_type_id'] : null;
        $this->container['key_pair_id'] = isset($data['key_pair_id']) ? $data['key_pair_id'] : null;
        $this->container['key_pair_name'] = isset($data['key_pair_name']) ? $data['key_pair_name'] : null;
        $this->container['local_volumes'] = isset($data['local_volumes']) ? $data['local_volumes'] : null;
        $this->container['memory_size'] = isset($data['memory_size']) ? $data['memory_size'] : null;
        $this->container['metadata_options'] = isset($data['metadata_options']) ? $data['metadata_options'] : null;
        $this->container['network_interfaces'] = isset($data['network_interfaces']) ? $data['network_interfaces'] : null;
        $this->container['os_name'] = isset($data['os_name']) ? $data['os_name'] : null;
        $this->container['os_type'] = isset($data['os_type']) ? $data['os_type'] : null;
        $this->container['placement'] = isset($data['placement']) ? $data['placement'] : null;
        $this->container['project_name'] = isset($data['project_name']) ? $data['project_name'] : null;
        $this->container['rdma_ip_addresses'] = isset($data['rdma_ip_addresses']) ? $data['rdma_ip_addresses'] : null;
        $this->container['scheduled_instance_id'] = isset($data['scheduled_instance_id']) ? $data['scheduled_instance_id'] : null;
        $this->container['spot_price_limit'] = isset($data['spot_price_limit']) ? $data['spot_price_limit'] : null;
        $this->container['spot_strategy'] = isset($data['spot_strategy']) ? $data['spot_strategy'] : null;
        $this->container['status'] = isset($data['status']) ? $data['status'] : null;
        $this->container['stopped_mode'] = isset($data['stopped_mode']) ? $data['stopped_mode'] : null;
        $this->container['tags'] = isset($data['tags']) ? $data['tags'] : null;
        $this->container['updated_at'] = isset($data['updated_at']) ? $data['updated_at'] : null;
        $this->container['uuid'] = isset($data['uuid']) ? $data['uuid'] : null;
        $this->container['volumes'] = isset($data['volumes']) ? $data['volumes'] : null;
        $this->container['vpc_id'] = isset($data['vpc_id']) ? $data['vpc_id'] : null;
        $this->container['zone_id'] = isset($data['zone_id']) ? $data['zone_id'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets affinity_group_id
     *
     * @return string
     */
    public function getAffinityGroupId()
    {
        return $this->container['affinity_group_id'];
    }

    /**
     * Sets affinity_group_id
     *
     * @param string $affinity_group_id affinity_group_id
     *
     * @return $this
     */
    public function setAffinityGroupId($affinity_group_id)
    {
        $this->container['affinity_group_id'] = $affinity_group_id;

        return $this;
    }

    /**
     * Gets cpu_options
     *
     * @return \Volcengine\Ecs\Model\CpuOptionsForDescribeInstancesOutput
     */
    public function getCpuOptions()
    {
        return $this->container['cpu_options'];
    }

    /**
     * Sets cpu_options
     *
     * @param \Volcengine\Ecs\Model\CpuOptionsForDescribeInstancesOutput $cpu_options cpu_options
     *
     * @return $this
     */
    public function setCpuOptions($cpu_options)
    {
        $this->container['cpu_options'] = $cpu_options;

        return $this;
    }

    /**
     * Gets cpus
     *
     * @return int
     */
    public function getCpus()
    {
        return $this->container['cpus'];
    }

    /**
     * Sets cpus
     *
     * @param int $cpus cpus
     *
     * @return $this
     */
    public function setCpus($cpus)
    {
        $this->container['cpus'] = $cpus;

        return $this;
    }

    /**
     * Gets created_at
     *
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param string $created_at created_at
     *
     * @return $this
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets deletion_protection
     *
     * @return bool
     */
    public function getDeletionProtection()
    {
        return $this->container['deletion_protection'];
    }

    /**
     * Sets deletion_protection
     *
     * @param bool $deletion_protection deletion_protection
     *
     * @return $this
     */
    public function setDeletionProtection($deletion_protection)
    {
        $this->container['deletion_protection'] = $deletion_protection;

        return $this;
    }

    /**
     * Gets deployment_set_group_number
     *
     * @return int
     */
    public function getDeploymentSetGroupNumber()
    {
        return $this->container['deployment_set_group_number'];
    }

    /**
     * Sets deployment_set_group_number
     *
     * @param int $deployment_set_group_number deployment_set_group_number
     *
     * @return $this
     */
    public function setDeploymentSetGroupNumber($deployment_set_group_number)
    {
        $this->container['deployment_set_group_number'] = $deployment_set_group_number;

        return $this;
    }

    /**
     * Gets deployment_set_id
     *
     * @return string
     */
    public function getDeploymentSetId()
    {
        return $this->container['deployment_set_id'];
    }

    /**
     * Sets deployment_set_id
     *
     * @param string $deployment_set_id deployment_set_id
     *
     * @return $this
     */
    public function setDeploymentSetId($deployment_set_id)
    {
        $this->container['deployment_set_id'] = $deployment_set_id;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets eip_address
     *
     * @return \Volcengine\Ecs\Model\EipAddressForDescribeInstancesOutput
     */
    public function getEipAddress()
    {
        return $this->container['eip_address'];
    }

    /**
     * Sets eip_address
     *
     * @param \Volcengine\Ecs\Model\EipAddressForDescribeInstancesOutput $eip_address eip_address
     *
     * @return $this
     */
    public function setEipAddress($eip_address)
    {
        $this->container['eip_address'] = $eip_address;

        return $this;
    }

    /**
     * Gets elastic_scheduled_instance_type
     *
     * @return string
     */
    public function getElasticScheduledInstanceType()
    {
        return $this->container['elastic_scheduled_instance_type'];
    }

    /**
     * Sets elastic_scheduled_instance_type
     *
     * @param string $elastic_scheduled_instance_type elastic_scheduled_instance_type
     *
     * @return $this
     */
    public function setElasticScheduledInstanceType($elastic_scheduled_instance_type)
    {
        $this->container['elastic_scheduled_instance_type'] = $elastic_scheduled_instance_type;

        return $this;
    }

    /**
     * Gets enable_jumbo_frame
     *
     * @return bool
     */
    public function getEnableJumboFrame()
    {
        return $this->container['enable_jumbo_frame'];
    }

    /**
     * Sets enable_jumbo_frame
     *
     * @param bool $enable_jumbo_frame enable_jumbo_frame
     *
     * @return $this
     */
    public function setEnableJumboFrame($enable_jumbo_frame)
    {
        $this->container['enable_jumbo_frame'] = $enable_jumbo_frame;

        return $this;
    }

    /**
     * Gets expired_at
     *
     * @return string
     */
    public function getExpiredAt()
    {
        return $this->container['expired_at'];
    }

    /**
     * Sets expired_at
     *
     * @param string $expired_at expired_at
     *
     * @return $this
     */
    public function setExpiredAt($expired_at)
    {
        $this->container['expired_at'] = $expired_at;

        return $this;
    }

    /**
     * Gets host_name
     *
     * @return string
     */
    public function getHostName()
    {
        return $this->container['host_name'];
    }

    /**
     * Sets host_name
     *
     * @param string $host_name host_name
     *
     * @return $this
     */
    public function setHostName($host_name)
    {
        $this->container['host_name'] = $host_name;

        return $this;
    }

    /**
     * Gets hostname
     *
     * @return string
     */
    public function getHostname()
    {
        return $this->container['hostname'];
    }

    /**
     * Sets hostname
     *
     * @param string $hostname hostname
     *
     * @return $this
     */
    public function setHostname($hostname)
    {
        $this->container['hostname'] = $hostname;

        return $this;
    }

    /**
     * Gets hpc_cluster_id
     *
     * @return string
     */
    public function getHpcClusterId()
    {
        return $this->container['hpc_cluster_id'];
    }

    /**
     * Sets hpc_cluster_id
     *
     * @param string $hpc_cluster_id hpc_cluster_id
     *
     * @return $this
     */
    public function setHpcClusterId($hpc_cluster_id)
    {
        $this->container['hpc_cluster_id'] = $hpc_cluster_id;

        return $this;
    }

    /**
     * Gets image_id
     *
     * @return string
     */
    public function getImageId()
    {
        return $this->container['image_id'];
    }

    /**
     * Sets image_id
     *
     * @param string $image_id image_id
     *
     * @return $this
     */
    public function setImageId($image_id)
    {
        $this->container['image_id'] = $image_id;

        return $this;
    }

    /**
     * Gets instance_charge_type
     *
     * @return string
     */
    public function getInstanceChargeType()
    {
        return $this->container['instance_charge_type'];
    }

    /**
     * Sets instance_charge_type
     *
     * @param string $instance_charge_type instance_charge_type
     *
     * @return $this
     */
    public function setInstanceChargeType($instance_charge_type)
    {
        $this->container['instance_charge_type'] = $instance_charge_type;

        return $this;
    }

    /**
     * Gets instance_id
     *
     * @return string
     */
    public function getInstanceId()
    {
        return $this->container['instance_id'];
    }

    /**
     * Sets instance_id
     *
     * @param string $instance_id instance_id
     *
     * @return $this
     */
    public function setInstanceId($instance_id)
    {
        $this->container['instance_id'] = $instance_id;

        return $this;
    }

    /**
     * Gets instance_name
     *
     * @return string
     */
    public function getInstanceName()
    {
        return $this->container['instance_name'];
    }

    /**
     * Sets instance_name
     *
     * @param string $instance_name instance_name
     *
     * @return $this
     */
    public function setInstanceName($instance_name)
    {
        $this->container['instance_name'] = $instance_name;

        return $this;
    }

    /**
     * Gets instance_type_id
     *
     * @return string
     */
    public function getInstanceTypeId()
    {
        return $this->container['instance_type_id'];
    }

    /**
     * Sets instance_type_id
     *
     * @param string $instance_type_id instance_type_id
     *
     * @return $this
     */
    public function setInstanceTypeId($instance_type_id)
    {
        $this->container['instance_type_id'] = $instance_type_id;

        return $this;
    }

    /**
     * Gets key_pair_id
     *
     * @return string
     */
    public function getKeyPairId()
    {
        return $this->container['key_pair_id'];
    }

    /**
     * Sets key_pair_id
     *
     * @param string $key_pair_id key_pair_id
     *
     * @return $this
     */
    public function setKeyPairId($key_pair_id)
    {
        $this->container['key_pair_id'] = $key_pair_id;

        return $this;
    }

    /**
     * Gets key_pair_name
     *
     * @return string
     */
    public function getKeyPairName()
    {
        return $this->container['key_pair_name'];
    }

    /**
     * Sets key_pair_name
     *
     * @param string $key_pair_name key_pair_name
     *
     * @return $this
     */
    public function setKeyPairName($key_pair_name)
    {
        $this->container['key_pair_name'] = $key_pair_name;

        return $this;
    }

    /**
     * Gets local_volumes
     *
     * @return \Volcengine\Ecs\Model\LocalVolumeForDescribeInstancesOutput[]
     */
    public function getLocalVolumes()
    {
        return $this->container['local_volumes'];
    }

    /**
     * Sets local_volumes
     *
     * @param \Volcengine\Ecs\Model\LocalVolumeForDescribeInstancesOutput[] $local_volumes local_volumes
     *
     * @return $this
     */
    public function setLocalVolumes($local_volumes)
    {
        $this->container['local_volumes'] = $local_volumes;

        return $this;
    }

    /**
     * Gets memory_size
     *
     * @return int
     */
    public function getMemorySize()
    {
        return $this->container['memory_size'];
    }

    /**
     * Sets memory_size
     *
     * @param int $memory_size memory_size
     *
     * @return $this
     */
    public function setMemorySize($memory_size)
    {
        $this->container['memory_size'] = $memory_size;

        return $this;
    }

    /**
     * Gets metadata_options
     *
     * @return \Volcengine\Ecs\Model\MetadataOptionsForDescribeInstancesOutput
     */
    public function getMetadataOptions()
    {
        return $this->container['metadata_options'];
    }

    /**
     * Sets metadata_options
     *
     * @param \Volcengine\Ecs\Model\MetadataOptionsForDescribeInstancesOutput $metadata_options metadata_options
     *
     * @return $this
     */
    public function setMetadataOptions($metadata_options)
    {
        $this->container['metadata_options'] = $metadata_options;

        return $this;
    }

    /**
     * Gets network_interfaces
     *
     * @return \Volcengine\Ecs\Model\NetworkInterfaceForDescribeInstancesOutput[]
     */
    public function getNetworkInterfaces()
    {
        return $this->container['network_interfaces'];
    }

    /**
     * Sets network_interfaces
     *
     * @param \Volcengine\Ecs\Model\NetworkInterfaceForDescribeInstancesOutput[] $network_interfaces network_interfaces
     *
     * @return $this
     */
    public function setNetworkInterfaces($network_interfaces)
    {
        $this->container['network_interfaces'] = $network_interfaces;

        return $this;
    }

    /**
     * Gets os_name
     *
     * @return string
     */
    public function getOsName()
    {
        return $this->container['os_name'];
    }

    /**
     * Sets os_name
     *
     * @param string $os_name os_name
     *
     * @return $this
     */
    public function setOsName($os_name)
    {
        $this->container['os_name'] = $os_name;

        return $this;
    }

    /**
     * Gets os_type
     *
     * @return string
     */
    public function getOsType()
    {
        return $this->container['os_type'];
    }

    /**
     * Sets os_type
     *
     * @param string $os_type os_type
     *
     * @return $this
     */
    public function setOsType($os_type)
    {
        $this->container['os_type'] = $os_type;

        return $this;
    }

    /**
     * Gets placement
     *
     * @return \Volcengine\Ecs\Model\PlacementForDescribeInstancesOutput
     */
    public function getPlacement()
    {
        return $this->container['placement'];
    }

    /**
     * Sets placement
     *
     * @param \Volcengine\Ecs\Model\PlacementForDescribeInstancesOutput $placement placement
     *
     * @return $this
     */
    public function setPlacement($placement)
    {
        $this->container['placement'] = $placement;

        return $this;
    }

    /**
     * Gets project_name
     *
     * @return string
     */
    public function getProjectName()
    {
        return $this->container['project_name'];
    }

    /**
     * Sets project_name
     *
     * @param string $project_name project_name
     *
     * @return $this
     */
    public function setProjectName($project_name)
    {
        $this->container['project_name'] = $project_name;

        return $this;
    }

    /**
     * Gets rdma_ip_addresses
     *
     * @return string[]
     */
    public function getRdmaIpAddresses()
    {
        return $this->container['rdma_ip_addresses'];
    }

    /**
     * Sets rdma_ip_addresses
     *
     * @param string[] $rdma_ip_addresses rdma_ip_addresses
     *
     * @return $this
     */
    public function setRdmaIpAddresses($rdma_ip_addresses)
    {
        $this->container['rdma_ip_addresses'] = $rdma_ip_addresses;

        return $this;
    }

    /**
     * Gets scheduled_instance_id
     *
     * @return string
     */
    public function getScheduledInstanceId()
    {
        return $this->container['scheduled_instance_id'];
    }

    /**
     * Sets scheduled_instance_id
     *
     * @param string $scheduled_instance_id scheduled_instance_id
     *
     * @return $this
     */
    public function setScheduledInstanceId($scheduled_instance_id)
    {
        $this->container['scheduled_instance_id'] = $scheduled_instance_id;

        return $this;
    }

    /**
     * Gets spot_price_limit
     *
     * @return float
     */
    public function getSpotPriceLimit()
    {
        return $this->container['spot_price_limit'];
    }

    /**
     * Sets spot_price_limit
     *
     * @param float $spot_price_limit spot_price_limit
     *
     * @return $this
     */
    public function setSpotPriceLimit($spot_price_limit)
    {
        $this->container['spot_price_limit'] = $spot_price_limit;

        return $this;
    }

    /**
     * Gets spot_strategy
     *
     * @return string
     */
    public function getSpotStrategy()
    {
        return $this->container['spot_strategy'];
    }

    /**
     * Sets spot_strategy
     *
     * @param string $spot_strategy spot_strategy
     *
     * @return $this
     */
    public function setSpotStrategy($spot_strategy)
    {
        $this->container['spot_strategy'] = $spot_strategy;

        return $this;
    }

    /**
     * Gets status
     *
     * @return string
     */
    public function getStatus()
    {
        return $this->container['status'];
    }

    /**
     * Sets status
     *
     * @param string $status status
     *
     * @return $this
     */
    public function setStatus($status)
    {
        $this->container['status'] = $status;

        return $this;
    }

    /**
     * Gets stopped_mode
     *
     * @return string
     */
    public function getStoppedMode()
    {
        return $this->container['stopped_mode'];
    }

    /**
     * Sets stopped_mode
     *
     * @param string $stopped_mode stopped_mode
     *
     * @return $this
     */
    public function setStoppedMode($stopped_mode)
    {
        $this->container['stopped_mode'] = $stopped_mode;

        return $this;
    }

    /**
     * Gets tags
     *
     * @return \Volcengine\Ecs\Model\TagForDescribeInstancesOutput[]
     */
    public function getTags()
    {
        return $this->container['tags'];
    }

    /**
     * Sets tags
     *
     * @param \Volcengine\Ecs\Model\TagForDescribeInstancesOutput[] $tags tags
     *
     * @return $this
     */
    public function setTags($tags)
    {
        $this->container['tags'] = $tags;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param string $updated_at updated_at
     *
     * @return $this
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets uuid
     *
     * @return string
     */
    public function getUuid()
    {
        return $this->container['uuid'];
    }

    /**
     * Sets uuid
     *
     * @param string $uuid uuid
     *
     * @return $this
     */
    public function setUuid($uuid)
    {
        $this->container['uuid'] = $uuid;

        return $this;
    }

    /**
     * Gets volumes
     *
     * @return \Volcengine\Ecs\Model\VolumeForDescribeInstancesOutput[]
     */
    public function getVolumes()
    {
        return $this->container['volumes'];
    }

    /**
     * Sets volumes
     *
     * @param \Volcengine\Ecs\Model\VolumeForDescribeInstancesOutput[] $volumes volumes
     *
     * @return $this
     */
    public function setVolumes($volumes)
    {
        $this->container['volumes'] = $volumes;

        return $this;
    }

    /**
     * Gets vpc_id
     *
     * @return string
     */
    public function getVpcId()
    {
        return $this->container['vpc_id'];
    }

    /**
     * Sets vpc_id
     *
     * @param string $vpc_id vpc_id
     *
     * @return $this
     */
    public function setVpcId($vpc_id)
    {
        $this->container['vpc_id'] = $vpc_id;

        return $this;
    }

    /**
     * Gets zone_id
     *
     * @return string
     */
    public function getZoneId()
    {
        return $this->container['zone_id'];
    }

    /**
     * Sets zone_id
     *
     * @param string $zone_id zone_id
     *
     * @return $this
     */
    public function setZoneId($zone_id)
    {
        $this->container['zone_id'] = $zone_id;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

