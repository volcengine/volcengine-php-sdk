<?php
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Volcengine\Billing\Model;

use ArrayAccess;
use Volcengine\Common\ObjectSerializer;
use Volcengine\Common\ModelInterface;

class ListForListAmortizedCostBillDetailOutput implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'ListForListAmortizedCostBillDetailOutput';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'amortized_begin_time' => 'string',
        'amortized_day' => 'string',
        'amortized_end_time' => 'string',
        'amortized_month' => 'string',
        'amortized_type' => 'string',
        'bill_category' => 'string',
        'bill_id' => 'string',
        'bill_period' => 'string',
        'billing_function' => 'string',
        'billing_method_code' => 'string',
        'billing_mode' => 'string',
        'busi_period' => 'string',
        'business_mode' => 'string',
        'config_name' => 'string',
        'cost_id' => 'string',
        'count' => 'string',
        'country_area' => 'string',
        'country_region' => 'string',
        'coupon_amount' => 'string',
        'currency' => 'string',
        'currency_settlement' => 'string',
        'daily_amortized_coupon_amount' => 'string',
        'daily_amortized_discount_bill_amount' => 'string',
        'daily_amortized_original_bill_amount' => 'string',
        'daily_amortized_paid_amount' => 'string',
        'daily_amortized_payable_amount' => 'string',
        'daily_amortized_posttax_amount' => 'string',
        'daily_amortized_pre_tax_payable_amount' => 'string',
        'daily_amortized_pre_tax_real_value' => 'string',
        'daily_amortized_preferential_bill_amount' => 'string',
        'daily_amortized_pretax_amount' => 'string',
        'daily_amortized_real_value' => 'string',
        'daily_amortized_round_amount' => 'string',
        'daily_amortized_saving_plan_original_amount' => 'string',
        'daily_amortized_settle_payable_amount' => 'string',
        'daily_amortized_settle_posttax_amount' => 'string',
        'daily_amortized_settle_pre_tax_payable_amount' => 'string',
        'daily_amortized_settle_pre_tax_real_value' => 'string',
        'daily_amortized_settle_pretax_amount' => 'string',
        'daily_amortized_settle_real_value' => 'string',
        'daily_amortized_settle_tax_amount' => 'string',
        'daily_amortized_tax_amount' => 'string',
        'deduction_use_duration' => 'string',
        'discount_bill_amount' => 'string',
        'discount_biz_billing_function' => 'string',
        'discount_biz_measure_interval' => 'string',
        'discount_biz_unit_price' => 'string',
        'discount_biz_unit_price_interval' => 'string',
        'discount_info' => 'string',
        'effective_factor' => 'string',
        'element' => 'string',
        'exchange_rate' => 'string',
        'expand_field' => 'string',
        'expense_begin_time' => 'string',
        'expense_end_time' => 'string',
        'factor' => 'string',
        'instance_name' => 'string',
        'instance_no' => 'string',
        'main_contract_number' => 'string',
        'market_price' => 'string',
        'measure_interval' => 'string',
        'original_bill_amount' => 'string',
        'original_order_no' => 'string',
        'owner_customer_name' => 'string',
        'owner_id' => 'string',
        'owner_user_name' => 'string',
        'paid_amount' => 'string',
        'payable_amount' => 'string',
        'payer_customer_name' => 'string',
        'payer_id' => 'string',
        'payer_user_name' => 'string',
        'posttax_amount' => 'string',
        'pre_tax_payable_amount' => 'string',
        'pre_tax_real_value' => 'string',
        'preferential_bill_amount' => 'string',
        'pretax_amount' => 'string',
        'price' => 'string',
        'price_interval' => 'string',
        'price_unit' => 'string',
        'product' => 'string',
        'product_zh' => 'string',
        'project' => 'string',
        'project_display_name' => 'string',
        'real_value' => 'string',
        'region' => 'string',
        'round_amount' => 'string',
        'saving_plan_deduction_discount_amount' => 'string',
        'saving_plan_deduction_sp_id' => 'string',
        'saving_plan_original_amount' => 'string',
        'seller_customer_name' => 'string',
        'seller_id' => 'string',
        'seller_user_name' => 'string',
        'settle_payable_amount' => 'string',
        'settle_posttax_amount' => 'string',
        'settle_pre_tax_payable_amount' => 'string',
        'settle_pre_tax_real_value' => 'string',
        'settle_pretax_amount' => 'string',
        'settle_real_value' => 'string',
        'settle_tax_amount' => 'string',
        'split_item_id' => 'string',
        'split_item_name' => 'string',
        'subject_name' => 'string',
        'tag' => 'string',
        'tax' => 'string',
        'tax_amount' => 'string',
        'tax_rate' => 'string',
        'trade_time' => 'string',
        'unit' => 'string',
        'use_duration' => 'string',
        'use_duration_unit' => 'string',
        'zone' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'amortized_begin_time' => null,
        'amortized_day' => null,
        'amortized_end_time' => null,
        'amortized_month' => null,
        'amortized_type' => null,
        'bill_category' => null,
        'bill_id' => null,
        'bill_period' => null,
        'billing_function' => null,
        'billing_method_code' => null,
        'billing_mode' => null,
        'busi_period' => null,
        'business_mode' => null,
        'config_name' => null,
        'cost_id' => null,
        'count' => null,
        'country_area' => null,
        'country_region' => null,
        'coupon_amount' => null,
        'currency' => null,
        'currency_settlement' => null,
        'daily_amortized_coupon_amount' => null,
        'daily_amortized_discount_bill_amount' => null,
        'daily_amortized_original_bill_amount' => null,
        'daily_amortized_paid_amount' => null,
        'daily_amortized_payable_amount' => null,
        'daily_amortized_posttax_amount' => null,
        'daily_amortized_pre_tax_payable_amount' => null,
        'daily_amortized_pre_tax_real_value' => null,
        'daily_amortized_preferential_bill_amount' => null,
        'daily_amortized_pretax_amount' => null,
        'daily_amortized_real_value' => null,
        'daily_amortized_round_amount' => null,
        'daily_amortized_saving_plan_original_amount' => null,
        'daily_amortized_settle_payable_amount' => null,
        'daily_amortized_settle_posttax_amount' => null,
        'daily_amortized_settle_pre_tax_payable_amount' => null,
        'daily_amortized_settle_pre_tax_real_value' => null,
        'daily_amortized_settle_pretax_amount' => null,
        'daily_amortized_settle_real_value' => null,
        'daily_amortized_settle_tax_amount' => null,
        'daily_amortized_tax_amount' => null,
        'deduction_use_duration' => null,
        'discount_bill_amount' => null,
        'discount_biz_billing_function' => null,
        'discount_biz_measure_interval' => null,
        'discount_biz_unit_price' => null,
        'discount_biz_unit_price_interval' => null,
        'discount_info' => null,
        'effective_factor' => null,
        'element' => null,
        'exchange_rate' => null,
        'expand_field' => null,
        'expense_begin_time' => null,
        'expense_end_time' => null,
        'factor' => null,
        'instance_name' => null,
        'instance_no' => null,
        'main_contract_number' => null,
        'market_price' => null,
        'measure_interval' => null,
        'original_bill_amount' => null,
        'original_order_no' => null,
        'owner_customer_name' => null,
        'owner_id' => null,
        'owner_user_name' => null,
        'paid_amount' => null,
        'payable_amount' => null,
        'payer_customer_name' => null,
        'payer_id' => null,
        'payer_user_name' => null,
        'posttax_amount' => null,
        'pre_tax_payable_amount' => null,
        'pre_tax_real_value' => null,
        'preferential_bill_amount' => null,
        'pretax_amount' => null,
        'price' => null,
        'price_interval' => null,
        'price_unit' => null,
        'product' => null,
        'product_zh' => null,
        'project' => null,
        'project_display_name' => null,
        'real_value' => null,
        'region' => null,
        'round_amount' => null,
        'saving_plan_deduction_discount_amount' => null,
        'saving_plan_deduction_sp_id' => null,
        'saving_plan_original_amount' => null,
        'seller_customer_name' => null,
        'seller_id' => null,
        'seller_user_name' => null,
        'settle_payable_amount' => null,
        'settle_posttax_amount' => null,
        'settle_pre_tax_payable_amount' => null,
        'settle_pre_tax_real_value' => null,
        'settle_pretax_amount' => null,
        'settle_real_value' => null,
        'settle_tax_amount' => null,
        'split_item_id' => null,
        'split_item_name' => null,
        'subject_name' => null,
        'tag' => null,
        'tax' => null,
        'tax_amount' => null,
        'tax_rate' => null,
        'trade_time' => null,
        'unit' => null,
        'use_duration' => null,
        'use_duration_unit' => null,
        'zone' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'amortized_begin_time' => 'AmortizedBeginTime',
        'amortized_day' => 'AmortizedDay',
        'amortized_end_time' => 'AmortizedEndTime',
        'amortized_month' => 'AmortizedMonth',
        'amortized_type' => 'AmortizedType',
        'bill_category' => 'BillCategory',
        'bill_id' => 'BillID',
        'bill_period' => 'BillPeriod',
        'billing_function' => 'BillingFunction',
        'billing_method_code' => 'BillingMethodCode',
        'billing_mode' => 'BillingMode',
        'busi_period' => 'BusiPeriod',
        'business_mode' => 'BusinessMode',
        'config_name' => 'ConfigName',
        'cost_id' => 'CostID',
        'count' => 'Count',
        'country_area' => 'CountryArea',
        'country_region' => 'CountryRegion',
        'coupon_amount' => 'CouponAmount',
        'currency' => 'Currency',
        'currency_settlement' => 'CurrencySettlement',
        'daily_amortized_coupon_amount' => 'DailyAmortizedCouponAmount',
        'daily_amortized_discount_bill_amount' => 'DailyAmortizedDiscountBillAmount',
        'daily_amortized_original_bill_amount' => 'DailyAmortizedOriginalBillAmount',
        'daily_amortized_paid_amount' => 'DailyAmortizedPaidAmount',
        'daily_amortized_payable_amount' => 'DailyAmortizedPayableAmount',
        'daily_amortized_posttax_amount' => 'DailyAmortizedPosttaxAmount',
        'daily_amortized_pre_tax_payable_amount' => 'DailyAmortizedPreTaxPayableAmount',
        'daily_amortized_pre_tax_real_value' => 'DailyAmortizedPreTaxRealValue',
        'daily_amortized_preferential_bill_amount' => 'DailyAmortizedPreferentialBillAmount',
        'daily_amortized_pretax_amount' => 'DailyAmortizedPretaxAmount',
        'daily_amortized_real_value' => 'DailyAmortizedRealValue',
        'daily_amortized_round_amount' => 'DailyAmortizedRoundAmount',
        'daily_amortized_saving_plan_original_amount' => 'DailyAmortizedSavingPlanOriginalAmount',
        'daily_amortized_settle_payable_amount' => 'DailyAmortizedSettlePayableAmount',
        'daily_amortized_settle_posttax_amount' => 'DailyAmortizedSettlePosttaxAmount',
        'daily_amortized_settle_pre_tax_payable_amount' => 'DailyAmortizedSettlePreTaxPayableAmount',
        'daily_amortized_settle_pre_tax_real_value' => 'DailyAmortizedSettlePreTaxRealValue',
        'daily_amortized_settle_pretax_amount' => 'DailyAmortizedSettlePretaxAmount',
        'daily_amortized_settle_real_value' => 'DailyAmortizedSettleRealValue',
        'daily_amortized_settle_tax_amount' => 'DailyAmortizedSettleTaxAmount',
        'daily_amortized_tax_amount' => 'DailyAmortizedTaxAmount',
        'deduction_use_duration' => 'DeductionUseDuration',
        'discount_bill_amount' => 'DiscountBillAmount',
        'discount_biz_billing_function' => 'DiscountBizBillingFunction',
        'discount_biz_measure_interval' => 'DiscountBizMeasureInterval',
        'discount_biz_unit_price' => 'DiscountBizUnitPrice',
        'discount_biz_unit_price_interval' => 'DiscountBizUnitPriceInterval',
        'discount_info' => 'DiscountInfo',
        'effective_factor' => 'EffectiveFactor',
        'element' => 'Element',
        'exchange_rate' => 'ExchangeRate',
        'expand_field' => 'ExpandField',
        'expense_begin_time' => 'ExpenseBeginTime',
        'expense_end_time' => 'ExpenseEndTime',
        'factor' => 'Factor',
        'instance_name' => 'InstanceName',
        'instance_no' => 'InstanceNo',
        'main_contract_number' => 'MainContractNumber',
        'market_price' => 'MarketPrice',
        'measure_interval' => 'MeasureInterval',
        'original_bill_amount' => 'OriginalBillAmount',
        'original_order_no' => 'OriginalOrderNo',
        'owner_customer_name' => 'OwnerCustomerName',
        'owner_id' => 'OwnerID',
        'owner_user_name' => 'OwnerUserName',
        'paid_amount' => 'PaidAmount',
        'payable_amount' => 'PayableAmount',
        'payer_customer_name' => 'PayerCustomerName',
        'payer_id' => 'PayerID',
        'payer_user_name' => 'PayerUserName',
        'posttax_amount' => 'PosttaxAmount',
        'pre_tax_payable_amount' => 'PreTaxPayableAmount',
        'pre_tax_real_value' => 'PreTaxRealValue',
        'preferential_bill_amount' => 'PreferentialBillAmount',
        'pretax_amount' => 'PretaxAmount',
        'price' => 'Price',
        'price_interval' => 'PriceInterval',
        'price_unit' => 'PriceUnit',
        'product' => 'Product',
        'product_zh' => 'ProductZh',
        'project' => 'Project',
        'project_display_name' => 'ProjectDisplayName',
        'real_value' => 'RealValue',
        'region' => 'Region',
        'round_amount' => 'RoundAmount',
        'saving_plan_deduction_discount_amount' => 'SavingPlanDeductionDiscountAmount',
        'saving_plan_deduction_sp_id' => 'SavingPlanDeductionSpID',
        'saving_plan_original_amount' => 'SavingPlanOriginalAmount',
        'seller_customer_name' => 'SellerCustomerName',
        'seller_id' => 'SellerID',
        'seller_user_name' => 'SellerUserName',
        'settle_payable_amount' => 'SettlePayableAmount',
        'settle_posttax_amount' => 'SettlePosttaxAmount',
        'settle_pre_tax_payable_amount' => 'SettlePreTaxPayableAmount',
        'settle_pre_tax_real_value' => 'SettlePreTaxRealValue',
        'settle_pretax_amount' => 'SettlePretaxAmount',
        'settle_real_value' => 'SettleRealValue',
        'settle_tax_amount' => 'SettleTaxAmount',
        'split_item_id' => 'SplitItemID',
        'split_item_name' => 'SplitItemName',
        'subject_name' => 'SubjectName',
        'tag' => 'Tag',
        'tax' => 'Tax',
        'tax_amount' => 'TaxAmount',
        'tax_rate' => 'TaxRate',
        'trade_time' => 'TradeTime',
        'unit' => 'Unit',
        'use_duration' => 'UseDuration',
        'use_duration_unit' => 'UseDurationUnit',
        'zone' => 'Zone'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'amortized_begin_time' => 'setAmortizedBeginTime',
        'amortized_day' => 'setAmortizedDay',
        'amortized_end_time' => 'setAmortizedEndTime',
        'amortized_month' => 'setAmortizedMonth',
        'amortized_type' => 'setAmortizedType',
        'bill_category' => 'setBillCategory',
        'bill_id' => 'setBillId',
        'bill_period' => 'setBillPeriod',
        'billing_function' => 'setBillingFunction',
        'billing_method_code' => 'setBillingMethodCode',
        'billing_mode' => 'setBillingMode',
        'busi_period' => 'setBusiPeriod',
        'business_mode' => 'setBusinessMode',
        'config_name' => 'setConfigName',
        'cost_id' => 'setCostId',
        'count' => 'setCount',
        'country_area' => 'setCountryArea',
        'country_region' => 'setCountryRegion',
        'coupon_amount' => 'setCouponAmount',
        'currency' => 'setCurrency',
        'currency_settlement' => 'setCurrencySettlement',
        'daily_amortized_coupon_amount' => 'setDailyAmortizedCouponAmount',
        'daily_amortized_discount_bill_amount' => 'setDailyAmortizedDiscountBillAmount',
        'daily_amortized_original_bill_amount' => 'setDailyAmortizedOriginalBillAmount',
        'daily_amortized_paid_amount' => 'setDailyAmortizedPaidAmount',
        'daily_amortized_payable_amount' => 'setDailyAmortizedPayableAmount',
        'daily_amortized_posttax_amount' => 'setDailyAmortizedPosttaxAmount',
        'daily_amortized_pre_tax_payable_amount' => 'setDailyAmortizedPreTaxPayableAmount',
        'daily_amortized_pre_tax_real_value' => 'setDailyAmortizedPreTaxRealValue',
        'daily_amortized_preferential_bill_amount' => 'setDailyAmortizedPreferentialBillAmount',
        'daily_amortized_pretax_amount' => 'setDailyAmortizedPretaxAmount',
        'daily_amortized_real_value' => 'setDailyAmortizedRealValue',
        'daily_amortized_round_amount' => 'setDailyAmortizedRoundAmount',
        'daily_amortized_saving_plan_original_amount' => 'setDailyAmortizedSavingPlanOriginalAmount',
        'daily_amortized_settle_payable_amount' => 'setDailyAmortizedSettlePayableAmount',
        'daily_amortized_settle_posttax_amount' => 'setDailyAmortizedSettlePosttaxAmount',
        'daily_amortized_settle_pre_tax_payable_amount' => 'setDailyAmortizedSettlePreTaxPayableAmount',
        'daily_amortized_settle_pre_tax_real_value' => 'setDailyAmortizedSettlePreTaxRealValue',
        'daily_amortized_settle_pretax_amount' => 'setDailyAmortizedSettlePretaxAmount',
        'daily_amortized_settle_real_value' => 'setDailyAmortizedSettleRealValue',
        'daily_amortized_settle_tax_amount' => 'setDailyAmortizedSettleTaxAmount',
        'daily_amortized_tax_amount' => 'setDailyAmortizedTaxAmount',
        'deduction_use_duration' => 'setDeductionUseDuration',
        'discount_bill_amount' => 'setDiscountBillAmount',
        'discount_biz_billing_function' => 'setDiscountBizBillingFunction',
        'discount_biz_measure_interval' => 'setDiscountBizMeasureInterval',
        'discount_biz_unit_price' => 'setDiscountBizUnitPrice',
        'discount_biz_unit_price_interval' => 'setDiscountBizUnitPriceInterval',
        'discount_info' => 'setDiscountInfo',
        'effective_factor' => 'setEffectiveFactor',
        'element' => 'setElement',
        'exchange_rate' => 'setExchangeRate',
        'expand_field' => 'setExpandField',
        'expense_begin_time' => 'setExpenseBeginTime',
        'expense_end_time' => 'setExpenseEndTime',
        'factor' => 'setFactor',
        'instance_name' => 'setInstanceName',
        'instance_no' => 'setInstanceNo',
        'main_contract_number' => 'setMainContractNumber',
        'market_price' => 'setMarketPrice',
        'measure_interval' => 'setMeasureInterval',
        'original_bill_amount' => 'setOriginalBillAmount',
        'original_order_no' => 'setOriginalOrderNo',
        'owner_customer_name' => 'setOwnerCustomerName',
        'owner_id' => 'setOwnerId',
        'owner_user_name' => 'setOwnerUserName',
        'paid_amount' => 'setPaidAmount',
        'payable_amount' => 'setPayableAmount',
        'payer_customer_name' => 'setPayerCustomerName',
        'payer_id' => 'setPayerId',
        'payer_user_name' => 'setPayerUserName',
        'posttax_amount' => 'setPosttaxAmount',
        'pre_tax_payable_amount' => 'setPreTaxPayableAmount',
        'pre_tax_real_value' => 'setPreTaxRealValue',
        'preferential_bill_amount' => 'setPreferentialBillAmount',
        'pretax_amount' => 'setPretaxAmount',
        'price' => 'setPrice',
        'price_interval' => 'setPriceInterval',
        'price_unit' => 'setPriceUnit',
        'product' => 'setProduct',
        'product_zh' => 'setProductZh',
        'project' => 'setProject',
        'project_display_name' => 'setProjectDisplayName',
        'real_value' => 'setRealValue',
        'region' => 'setRegion',
        'round_amount' => 'setRoundAmount',
        'saving_plan_deduction_discount_amount' => 'setSavingPlanDeductionDiscountAmount',
        'saving_plan_deduction_sp_id' => 'setSavingPlanDeductionSpId',
        'saving_plan_original_amount' => 'setSavingPlanOriginalAmount',
        'seller_customer_name' => 'setSellerCustomerName',
        'seller_id' => 'setSellerId',
        'seller_user_name' => 'setSellerUserName',
        'settle_payable_amount' => 'setSettlePayableAmount',
        'settle_posttax_amount' => 'setSettlePosttaxAmount',
        'settle_pre_tax_payable_amount' => 'setSettlePreTaxPayableAmount',
        'settle_pre_tax_real_value' => 'setSettlePreTaxRealValue',
        'settle_pretax_amount' => 'setSettlePretaxAmount',
        'settle_real_value' => 'setSettleRealValue',
        'settle_tax_amount' => 'setSettleTaxAmount',
        'split_item_id' => 'setSplitItemId',
        'split_item_name' => 'setSplitItemName',
        'subject_name' => 'setSubjectName',
        'tag' => 'setTag',
        'tax' => 'setTax',
        'tax_amount' => 'setTaxAmount',
        'tax_rate' => 'setTaxRate',
        'trade_time' => 'setTradeTime',
        'unit' => 'setUnit',
        'use_duration' => 'setUseDuration',
        'use_duration_unit' => 'setUseDurationUnit',
        'zone' => 'setZone'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'amortized_begin_time' => 'getAmortizedBeginTime',
        'amortized_day' => 'getAmortizedDay',
        'amortized_end_time' => 'getAmortizedEndTime',
        'amortized_month' => 'getAmortizedMonth',
        'amortized_type' => 'getAmortizedType',
        'bill_category' => 'getBillCategory',
        'bill_id' => 'getBillId',
        'bill_period' => 'getBillPeriod',
        'billing_function' => 'getBillingFunction',
        'billing_method_code' => 'getBillingMethodCode',
        'billing_mode' => 'getBillingMode',
        'busi_period' => 'getBusiPeriod',
        'business_mode' => 'getBusinessMode',
        'config_name' => 'getConfigName',
        'cost_id' => 'getCostId',
        'count' => 'getCount',
        'country_area' => 'getCountryArea',
        'country_region' => 'getCountryRegion',
        'coupon_amount' => 'getCouponAmount',
        'currency' => 'getCurrency',
        'currency_settlement' => 'getCurrencySettlement',
        'daily_amortized_coupon_amount' => 'getDailyAmortizedCouponAmount',
        'daily_amortized_discount_bill_amount' => 'getDailyAmortizedDiscountBillAmount',
        'daily_amortized_original_bill_amount' => 'getDailyAmortizedOriginalBillAmount',
        'daily_amortized_paid_amount' => 'getDailyAmortizedPaidAmount',
        'daily_amortized_payable_amount' => 'getDailyAmortizedPayableAmount',
        'daily_amortized_posttax_amount' => 'getDailyAmortizedPosttaxAmount',
        'daily_amortized_pre_tax_payable_amount' => 'getDailyAmortizedPreTaxPayableAmount',
        'daily_amortized_pre_tax_real_value' => 'getDailyAmortizedPreTaxRealValue',
        'daily_amortized_preferential_bill_amount' => 'getDailyAmortizedPreferentialBillAmount',
        'daily_amortized_pretax_amount' => 'getDailyAmortizedPretaxAmount',
        'daily_amortized_real_value' => 'getDailyAmortizedRealValue',
        'daily_amortized_round_amount' => 'getDailyAmortizedRoundAmount',
        'daily_amortized_saving_plan_original_amount' => 'getDailyAmortizedSavingPlanOriginalAmount',
        'daily_amortized_settle_payable_amount' => 'getDailyAmortizedSettlePayableAmount',
        'daily_amortized_settle_posttax_amount' => 'getDailyAmortizedSettlePosttaxAmount',
        'daily_amortized_settle_pre_tax_payable_amount' => 'getDailyAmortizedSettlePreTaxPayableAmount',
        'daily_amortized_settle_pre_tax_real_value' => 'getDailyAmortizedSettlePreTaxRealValue',
        'daily_amortized_settle_pretax_amount' => 'getDailyAmortizedSettlePretaxAmount',
        'daily_amortized_settle_real_value' => 'getDailyAmortizedSettleRealValue',
        'daily_amortized_settle_tax_amount' => 'getDailyAmortizedSettleTaxAmount',
        'daily_amortized_tax_amount' => 'getDailyAmortizedTaxAmount',
        'deduction_use_duration' => 'getDeductionUseDuration',
        'discount_bill_amount' => 'getDiscountBillAmount',
        'discount_biz_billing_function' => 'getDiscountBizBillingFunction',
        'discount_biz_measure_interval' => 'getDiscountBizMeasureInterval',
        'discount_biz_unit_price' => 'getDiscountBizUnitPrice',
        'discount_biz_unit_price_interval' => 'getDiscountBizUnitPriceInterval',
        'discount_info' => 'getDiscountInfo',
        'effective_factor' => 'getEffectiveFactor',
        'element' => 'getElement',
        'exchange_rate' => 'getExchangeRate',
        'expand_field' => 'getExpandField',
        'expense_begin_time' => 'getExpenseBeginTime',
        'expense_end_time' => 'getExpenseEndTime',
        'factor' => 'getFactor',
        'instance_name' => 'getInstanceName',
        'instance_no' => 'getInstanceNo',
        'main_contract_number' => 'getMainContractNumber',
        'market_price' => 'getMarketPrice',
        'measure_interval' => 'getMeasureInterval',
        'original_bill_amount' => 'getOriginalBillAmount',
        'original_order_no' => 'getOriginalOrderNo',
        'owner_customer_name' => 'getOwnerCustomerName',
        'owner_id' => 'getOwnerId',
        'owner_user_name' => 'getOwnerUserName',
        'paid_amount' => 'getPaidAmount',
        'payable_amount' => 'getPayableAmount',
        'payer_customer_name' => 'getPayerCustomerName',
        'payer_id' => 'getPayerId',
        'payer_user_name' => 'getPayerUserName',
        'posttax_amount' => 'getPosttaxAmount',
        'pre_tax_payable_amount' => 'getPreTaxPayableAmount',
        'pre_tax_real_value' => 'getPreTaxRealValue',
        'preferential_bill_amount' => 'getPreferentialBillAmount',
        'pretax_amount' => 'getPretaxAmount',
        'price' => 'getPrice',
        'price_interval' => 'getPriceInterval',
        'price_unit' => 'getPriceUnit',
        'product' => 'getProduct',
        'product_zh' => 'getProductZh',
        'project' => 'getProject',
        'project_display_name' => 'getProjectDisplayName',
        'real_value' => 'getRealValue',
        'region' => 'getRegion',
        'round_amount' => 'getRoundAmount',
        'saving_plan_deduction_discount_amount' => 'getSavingPlanDeductionDiscountAmount',
        'saving_plan_deduction_sp_id' => 'getSavingPlanDeductionSpId',
        'saving_plan_original_amount' => 'getSavingPlanOriginalAmount',
        'seller_customer_name' => 'getSellerCustomerName',
        'seller_id' => 'getSellerId',
        'seller_user_name' => 'getSellerUserName',
        'settle_payable_amount' => 'getSettlePayableAmount',
        'settle_posttax_amount' => 'getSettlePosttaxAmount',
        'settle_pre_tax_payable_amount' => 'getSettlePreTaxPayableAmount',
        'settle_pre_tax_real_value' => 'getSettlePreTaxRealValue',
        'settle_pretax_amount' => 'getSettlePretaxAmount',
        'settle_real_value' => 'getSettleRealValue',
        'settle_tax_amount' => 'getSettleTaxAmount',
        'split_item_id' => 'getSplitItemId',
        'split_item_name' => 'getSplitItemName',
        'subject_name' => 'getSubjectName',
        'tag' => 'getTag',
        'tax' => 'getTax',
        'tax_amount' => 'getTaxAmount',
        'tax_rate' => 'getTaxRate',
        'trade_time' => 'getTradeTime',
        'unit' => 'getUnit',
        'use_duration' => 'getUseDuration',
        'use_duration_unit' => 'getUseDurationUnit',
        'zone' => 'getZone'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['amortized_begin_time'] = isset($data['amortized_begin_time']) ? $data['amortized_begin_time'] : null;
        $this->container['amortized_day'] = isset($data['amortized_day']) ? $data['amortized_day'] : null;
        $this->container['amortized_end_time'] = isset($data['amortized_end_time']) ? $data['amortized_end_time'] : null;
        $this->container['amortized_month'] = isset($data['amortized_month']) ? $data['amortized_month'] : null;
        $this->container['amortized_type'] = isset($data['amortized_type']) ? $data['amortized_type'] : null;
        $this->container['bill_category'] = isset($data['bill_category']) ? $data['bill_category'] : null;
        $this->container['bill_id'] = isset($data['bill_id']) ? $data['bill_id'] : null;
        $this->container['bill_period'] = isset($data['bill_period']) ? $data['bill_period'] : null;
        $this->container['billing_function'] = isset($data['billing_function']) ? $data['billing_function'] : null;
        $this->container['billing_method_code'] = isset($data['billing_method_code']) ? $data['billing_method_code'] : null;
        $this->container['billing_mode'] = isset($data['billing_mode']) ? $data['billing_mode'] : null;
        $this->container['busi_period'] = isset($data['busi_period']) ? $data['busi_period'] : null;
        $this->container['business_mode'] = isset($data['business_mode']) ? $data['business_mode'] : null;
        $this->container['config_name'] = isset($data['config_name']) ? $data['config_name'] : null;
        $this->container['cost_id'] = isset($data['cost_id']) ? $data['cost_id'] : null;
        $this->container['count'] = isset($data['count']) ? $data['count'] : null;
        $this->container['country_area'] = isset($data['country_area']) ? $data['country_area'] : null;
        $this->container['country_region'] = isset($data['country_region']) ? $data['country_region'] : null;
        $this->container['coupon_amount'] = isset($data['coupon_amount']) ? $data['coupon_amount'] : null;
        $this->container['currency'] = isset($data['currency']) ? $data['currency'] : null;
        $this->container['currency_settlement'] = isset($data['currency_settlement']) ? $data['currency_settlement'] : null;
        $this->container['daily_amortized_coupon_amount'] = isset($data['daily_amortized_coupon_amount']) ? $data['daily_amortized_coupon_amount'] : null;
        $this->container['daily_amortized_discount_bill_amount'] = isset($data['daily_amortized_discount_bill_amount']) ? $data['daily_amortized_discount_bill_amount'] : null;
        $this->container['daily_amortized_original_bill_amount'] = isset($data['daily_amortized_original_bill_amount']) ? $data['daily_amortized_original_bill_amount'] : null;
        $this->container['daily_amortized_paid_amount'] = isset($data['daily_amortized_paid_amount']) ? $data['daily_amortized_paid_amount'] : null;
        $this->container['daily_amortized_payable_amount'] = isset($data['daily_amortized_payable_amount']) ? $data['daily_amortized_payable_amount'] : null;
        $this->container['daily_amortized_posttax_amount'] = isset($data['daily_amortized_posttax_amount']) ? $data['daily_amortized_posttax_amount'] : null;
        $this->container['daily_amortized_pre_tax_payable_amount'] = isset($data['daily_amortized_pre_tax_payable_amount']) ? $data['daily_amortized_pre_tax_payable_amount'] : null;
        $this->container['daily_amortized_pre_tax_real_value'] = isset($data['daily_amortized_pre_tax_real_value']) ? $data['daily_amortized_pre_tax_real_value'] : null;
        $this->container['daily_amortized_preferential_bill_amount'] = isset($data['daily_amortized_preferential_bill_amount']) ? $data['daily_amortized_preferential_bill_amount'] : null;
        $this->container['daily_amortized_pretax_amount'] = isset($data['daily_amortized_pretax_amount']) ? $data['daily_amortized_pretax_amount'] : null;
        $this->container['daily_amortized_real_value'] = isset($data['daily_amortized_real_value']) ? $data['daily_amortized_real_value'] : null;
        $this->container['daily_amortized_round_amount'] = isset($data['daily_amortized_round_amount']) ? $data['daily_amortized_round_amount'] : null;
        $this->container['daily_amortized_saving_plan_original_amount'] = isset($data['daily_amortized_saving_plan_original_amount']) ? $data['daily_amortized_saving_plan_original_amount'] : null;
        $this->container['daily_amortized_settle_payable_amount'] = isset($data['daily_amortized_settle_payable_amount']) ? $data['daily_amortized_settle_payable_amount'] : null;
        $this->container['daily_amortized_settle_posttax_amount'] = isset($data['daily_amortized_settle_posttax_amount']) ? $data['daily_amortized_settle_posttax_amount'] : null;
        $this->container['daily_amortized_settle_pre_tax_payable_amount'] = isset($data['daily_amortized_settle_pre_tax_payable_amount']) ? $data['daily_amortized_settle_pre_tax_payable_amount'] : null;
        $this->container['daily_amortized_settle_pre_tax_real_value'] = isset($data['daily_amortized_settle_pre_tax_real_value']) ? $data['daily_amortized_settle_pre_tax_real_value'] : null;
        $this->container['daily_amortized_settle_pretax_amount'] = isset($data['daily_amortized_settle_pretax_amount']) ? $data['daily_amortized_settle_pretax_amount'] : null;
        $this->container['daily_amortized_settle_real_value'] = isset($data['daily_amortized_settle_real_value']) ? $data['daily_amortized_settle_real_value'] : null;
        $this->container['daily_amortized_settle_tax_amount'] = isset($data['daily_amortized_settle_tax_amount']) ? $data['daily_amortized_settle_tax_amount'] : null;
        $this->container['daily_amortized_tax_amount'] = isset($data['daily_amortized_tax_amount']) ? $data['daily_amortized_tax_amount'] : null;
        $this->container['deduction_use_duration'] = isset($data['deduction_use_duration']) ? $data['deduction_use_duration'] : null;
        $this->container['discount_bill_amount'] = isset($data['discount_bill_amount']) ? $data['discount_bill_amount'] : null;
        $this->container['discount_biz_billing_function'] = isset($data['discount_biz_billing_function']) ? $data['discount_biz_billing_function'] : null;
        $this->container['discount_biz_measure_interval'] = isset($data['discount_biz_measure_interval']) ? $data['discount_biz_measure_interval'] : null;
        $this->container['discount_biz_unit_price'] = isset($data['discount_biz_unit_price']) ? $data['discount_biz_unit_price'] : null;
        $this->container['discount_biz_unit_price_interval'] = isset($data['discount_biz_unit_price_interval']) ? $data['discount_biz_unit_price_interval'] : null;
        $this->container['discount_info'] = isset($data['discount_info']) ? $data['discount_info'] : null;
        $this->container['effective_factor'] = isset($data['effective_factor']) ? $data['effective_factor'] : null;
        $this->container['element'] = isset($data['element']) ? $data['element'] : null;
        $this->container['exchange_rate'] = isset($data['exchange_rate']) ? $data['exchange_rate'] : null;
        $this->container['expand_field'] = isset($data['expand_field']) ? $data['expand_field'] : null;
        $this->container['expense_begin_time'] = isset($data['expense_begin_time']) ? $data['expense_begin_time'] : null;
        $this->container['expense_end_time'] = isset($data['expense_end_time']) ? $data['expense_end_time'] : null;
        $this->container['factor'] = isset($data['factor']) ? $data['factor'] : null;
        $this->container['instance_name'] = isset($data['instance_name']) ? $data['instance_name'] : null;
        $this->container['instance_no'] = isset($data['instance_no']) ? $data['instance_no'] : null;
        $this->container['main_contract_number'] = isset($data['main_contract_number']) ? $data['main_contract_number'] : null;
        $this->container['market_price'] = isset($data['market_price']) ? $data['market_price'] : null;
        $this->container['measure_interval'] = isset($data['measure_interval']) ? $data['measure_interval'] : null;
        $this->container['original_bill_amount'] = isset($data['original_bill_amount']) ? $data['original_bill_amount'] : null;
        $this->container['original_order_no'] = isset($data['original_order_no']) ? $data['original_order_no'] : null;
        $this->container['owner_customer_name'] = isset($data['owner_customer_name']) ? $data['owner_customer_name'] : null;
        $this->container['owner_id'] = isset($data['owner_id']) ? $data['owner_id'] : null;
        $this->container['owner_user_name'] = isset($data['owner_user_name']) ? $data['owner_user_name'] : null;
        $this->container['paid_amount'] = isset($data['paid_amount']) ? $data['paid_amount'] : null;
        $this->container['payable_amount'] = isset($data['payable_amount']) ? $data['payable_amount'] : null;
        $this->container['payer_customer_name'] = isset($data['payer_customer_name']) ? $data['payer_customer_name'] : null;
        $this->container['payer_id'] = isset($data['payer_id']) ? $data['payer_id'] : null;
        $this->container['payer_user_name'] = isset($data['payer_user_name']) ? $data['payer_user_name'] : null;
        $this->container['posttax_amount'] = isset($data['posttax_amount']) ? $data['posttax_amount'] : null;
        $this->container['pre_tax_payable_amount'] = isset($data['pre_tax_payable_amount']) ? $data['pre_tax_payable_amount'] : null;
        $this->container['pre_tax_real_value'] = isset($data['pre_tax_real_value']) ? $data['pre_tax_real_value'] : null;
        $this->container['preferential_bill_amount'] = isset($data['preferential_bill_amount']) ? $data['preferential_bill_amount'] : null;
        $this->container['pretax_amount'] = isset($data['pretax_amount']) ? $data['pretax_amount'] : null;
        $this->container['price'] = isset($data['price']) ? $data['price'] : null;
        $this->container['price_interval'] = isset($data['price_interval']) ? $data['price_interval'] : null;
        $this->container['price_unit'] = isset($data['price_unit']) ? $data['price_unit'] : null;
        $this->container['product'] = isset($data['product']) ? $data['product'] : null;
        $this->container['product_zh'] = isset($data['product_zh']) ? $data['product_zh'] : null;
        $this->container['project'] = isset($data['project']) ? $data['project'] : null;
        $this->container['project_display_name'] = isset($data['project_display_name']) ? $data['project_display_name'] : null;
        $this->container['real_value'] = isset($data['real_value']) ? $data['real_value'] : null;
        $this->container['region'] = isset($data['region']) ? $data['region'] : null;
        $this->container['round_amount'] = isset($data['round_amount']) ? $data['round_amount'] : null;
        $this->container['saving_plan_deduction_discount_amount'] = isset($data['saving_plan_deduction_discount_amount']) ? $data['saving_plan_deduction_discount_amount'] : null;
        $this->container['saving_plan_deduction_sp_id'] = isset($data['saving_plan_deduction_sp_id']) ? $data['saving_plan_deduction_sp_id'] : null;
        $this->container['saving_plan_original_amount'] = isset($data['saving_plan_original_amount']) ? $data['saving_plan_original_amount'] : null;
        $this->container['seller_customer_name'] = isset($data['seller_customer_name']) ? $data['seller_customer_name'] : null;
        $this->container['seller_id'] = isset($data['seller_id']) ? $data['seller_id'] : null;
        $this->container['seller_user_name'] = isset($data['seller_user_name']) ? $data['seller_user_name'] : null;
        $this->container['settle_payable_amount'] = isset($data['settle_payable_amount']) ? $data['settle_payable_amount'] : null;
        $this->container['settle_posttax_amount'] = isset($data['settle_posttax_amount']) ? $data['settle_posttax_amount'] : null;
        $this->container['settle_pre_tax_payable_amount'] = isset($data['settle_pre_tax_payable_amount']) ? $data['settle_pre_tax_payable_amount'] : null;
        $this->container['settle_pre_tax_real_value'] = isset($data['settle_pre_tax_real_value']) ? $data['settle_pre_tax_real_value'] : null;
        $this->container['settle_pretax_amount'] = isset($data['settle_pretax_amount']) ? $data['settle_pretax_amount'] : null;
        $this->container['settle_real_value'] = isset($data['settle_real_value']) ? $data['settle_real_value'] : null;
        $this->container['settle_tax_amount'] = isset($data['settle_tax_amount']) ? $data['settle_tax_amount'] : null;
        $this->container['split_item_id'] = isset($data['split_item_id']) ? $data['split_item_id'] : null;
        $this->container['split_item_name'] = isset($data['split_item_name']) ? $data['split_item_name'] : null;
        $this->container['subject_name'] = isset($data['subject_name']) ? $data['subject_name'] : null;
        $this->container['tag'] = isset($data['tag']) ? $data['tag'] : null;
        $this->container['tax'] = isset($data['tax']) ? $data['tax'] : null;
        $this->container['tax_amount'] = isset($data['tax_amount']) ? $data['tax_amount'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['trade_time'] = isset($data['trade_time']) ? $data['trade_time'] : null;
        $this->container['unit'] = isset($data['unit']) ? $data['unit'] : null;
        $this->container['use_duration'] = isset($data['use_duration']) ? $data['use_duration'] : null;
        $this->container['use_duration_unit'] = isset($data['use_duration_unit']) ? $data['use_duration_unit'] : null;
        $this->container['zone'] = isset($data['zone']) ? $data['zone'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets amortized_begin_time
     *
     * @return string
     */
    public function getAmortizedBeginTime()
    {
        return $this->container['amortized_begin_time'];
    }

    /**
     * Sets amortized_begin_time
     *
     * @param string $amortized_begin_time amortized_begin_time
     *
     * @return $this
     */
    public function setAmortizedBeginTime($amortized_begin_time)
    {
        $this->container['amortized_begin_time'] = $amortized_begin_time;

        return $this;
    }

    /**
     * Gets amortized_day
     *
     * @return string
     */
    public function getAmortizedDay()
    {
        return $this->container['amortized_day'];
    }

    /**
     * Sets amortized_day
     *
     * @param string $amortized_day amortized_day
     *
     * @return $this
     */
    public function setAmortizedDay($amortized_day)
    {
        $this->container['amortized_day'] = $amortized_day;

        return $this;
    }

    /**
     * Gets amortized_end_time
     *
     * @return string
     */
    public function getAmortizedEndTime()
    {
        return $this->container['amortized_end_time'];
    }

    /**
     * Sets amortized_end_time
     *
     * @param string $amortized_end_time amortized_end_time
     *
     * @return $this
     */
    public function setAmortizedEndTime($amortized_end_time)
    {
        $this->container['amortized_end_time'] = $amortized_end_time;

        return $this;
    }

    /**
     * Gets amortized_month
     *
     * @return string
     */
    public function getAmortizedMonth()
    {
        return $this->container['amortized_month'];
    }

    /**
     * Sets amortized_month
     *
     * @param string $amortized_month amortized_month
     *
     * @return $this
     */
    public function setAmortizedMonth($amortized_month)
    {
        $this->container['amortized_month'] = $amortized_month;

        return $this;
    }

    /**
     * Gets amortized_type
     *
     * @return string
     */
    public function getAmortizedType()
    {
        return $this->container['amortized_type'];
    }

    /**
     * Sets amortized_type
     *
     * @param string $amortized_type amortized_type
     *
     * @return $this
     */
    public function setAmortizedType($amortized_type)
    {
        $this->container['amortized_type'] = $amortized_type;

        return $this;
    }

    /**
     * Gets bill_category
     *
     * @return string
     */
    public function getBillCategory()
    {
        return $this->container['bill_category'];
    }

    /**
     * Sets bill_category
     *
     * @param string $bill_category bill_category
     *
     * @return $this
     */
    public function setBillCategory($bill_category)
    {
        $this->container['bill_category'] = $bill_category;

        return $this;
    }

    /**
     * Gets bill_id
     *
     * @return string
     */
    public function getBillId()
    {
        return $this->container['bill_id'];
    }

    /**
     * Sets bill_id
     *
     * @param string $bill_id bill_id
     *
     * @return $this
     */
    public function setBillId($bill_id)
    {
        $this->container['bill_id'] = $bill_id;

        return $this;
    }

    /**
     * Gets bill_period
     *
     * @return string
     */
    public function getBillPeriod()
    {
        return $this->container['bill_period'];
    }

    /**
     * Sets bill_period
     *
     * @param string $bill_period bill_period
     *
     * @return $this
     */
    public function setBillPeriod($bill_period)
    {
        $this->container['bill_period'] = $bill_period;

        return $this;
    }

    /**
     * Gets billing_function
     *
     * @return string
     */
    public function getBillingFunction()
    {
        return $this->container['billing_function'];
    }

    /**
     * Sets billing_function
     *
     * @param string $billing_function billing_function
     *
     * @return $this
     */
    public function setBillingFunction($billing_function)
    {
        $this->container['billing_function'] = $billing_function;

        return $this;
    }

    /**
     * Gets billing_method_code
     *
     * @return string
     */
    public function getBillingMethodCode()
    {
        return $this->container['billing_method_code'];
    }

    /**
     * Sets billing_method_code
     *
     * @param string $billing_method_code billing_method_code
     *
     * @return $this
     */
    public function setBillingMethodCode($billing_method_code)
    {
        $this->container['billing_method_code'] = $billing_method_code;

        return $this;
    }

    /**
     * Gets billing_mode
     *
     * @return string
     */
    public function getBillingMode()
    {
        return $this->container['billing_mode'];
    }

    /**
     * Sets billing_mode
     *
     * @param string $billing_mode billing_mode
     *
     * @return $this
     */
    public function setBillingMode($billing_mode)
    {
        $this->container['billing_mode'] = $billing_mode;

        return $this;
    }

    /**
     * Gets busi_period
     *
     * @return string
     */
    public function getBusiPeriod()
    {
        return $this->container['busi_period'];
    }

    /**
     * Sets busi_period
     *
     * @param string $busi_period busi_period
     *
     * @return $this
     */
    public function setBusiPeriod($busi_period)
    {
        $this->container['busi_period'] = $busi_period;

        return $this;
    }

    /**
     * Gets business_mode
     *
     * @return string
     */
    public function getBusinessMode()
    {
        return $this->container['business_mode'];
    }

    /**
     * Sets business_mode
     *
     * @param string $business_mode business_mode
     *
     * @return $this
     */
    public function setBusinessMode($business_mode)
    {
        $this->container['business_mode'] = $business_mode;

        return $this;
    }

    /**
     * Gets config_name
     *
     * @return string
     */
    public function getConfigName()
    {
        return $this->container['config_name'];
    }

    /**
     * Sets config_name
     *
     * @param string $config_name config_name
     *
     * @return $this
     */
    public function setConfigName($config_name)
    {
        $this->container['config_name'] = $config_name;

        return $this;
    }

    /**
     * Gets cost_id
     *
     * @return string
     */
    public function getCostId()
    {
        return $this->container['cost_id'];
    }

    /**
     * Sets cost_id
     *
     * @param string $cost_id cost_id
     *
     * @return $this
     */
    public function setCostId($cost_id)
    {
        $this->container['cost_id'] = $cost_id;

        return $this;
    }

    /**
     * Gets count
     *
     * @return string
     */
    public function getCount()
    {
        return $this->container['count'];
    }

    /**
     * Sets count
     *
     * @param string $count count
     *
     * @return $this
     */
    public function setCount($count)
    {
        $this->container['count'] = $count;

        return $this;
    }

    /**
     * Gets country_area
     *
     * @return string
     */
    public function getCountryArea()
    {
        return $this->container['country_area'];
    }

    /**
     * Sets country_area
     *
     * @param string $country_area country_area
     *
     * @return $this
     */
    public function setCountryArea($country_area)
    {
        $this->container['country_area'] = $country_area;

        return $this;
    }

    /**
     * Gets country_region
     *
     * @return string
     */
    public function getCountryRegion()
    {
        return $this->container['country_region'];
    }

    /**
     * Sets country_region
     *
     * @param string $country_region country_region
     *
     * @return $this
     */
    public function setCountryRegion($country_region)
    {
        $this->container['country_region'] = $country_region;

        return $this;
    }

    /**
     * Gets coupon_amount
     *
     * @return string
     */
    public function getCouponAmount()
    {
        return $this->container['coupon_amount'];
    }

    /**
     * Sets coupon_amount
     *
     * @param string $coupon_amount coupon_amount
     *
     * @return $this
     */
    public function setCouponAmount($coupon_amount)
    {
        $this->container['coupon_amount'] = $coupon_amount;

        return $this;
    }

    /**
     * Gets currency
     *
     * @return string
     */
    public function getCurrency()
    {
        return $this->container['currency'];
    }

    /**
     * Sets currency
     *
     * @param string $currency currency
     *
     * @return $this
     */
    public function setCurrency($currency)
    {
        $this->container['currency'] = $currency;

        return $this;
    }

    /**
     * Gets currency_settlement
     *
     * @return string
     */
    public function getCurrencySettlement()
    {
        return $this->container['currency_settlement'];
    }

    /**
     * Sets currency_settlement
     *
     * @param string $currency_settlement currency_settlement
     *
     * @return $this
     */
    public function setCurrencySettlement($currency_settlement)
    {
        $this->container['currency_settlement'] = $currency_settlement;

        return $this;
    }

    /**
     * Gets daily_amortized_coupon_amount
     *
     * @return string
     */
    public function getDailyAmortizedCouponAmount()
    {
        return $this->container['daily_amortized_coupon_amount'];
    }

    /**
     * Sets daily_amortized_coupon_amount
     *
     * @param string $daily_amortized_coupon_amount daily_amortized_coupon_amount
     *
     * @return $this
     */
    public function setDailyAmortizedCouponAmount($daily_amortized_coupon_amount)
    {
        $this->container['daily_amortized_coupon_amount'] = $daily_amortized_coupon_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_discount_bill_amount
     *
     * @return string
     */
    public function getDailyAmortizedDiscountBillAmount()
    {
        return $this->container['daily_amortized_discount_bill_amount'];
    }

    /**
     * Sets daily_amortized_discount_bill_amount
     *
     * @param string $daily_amortized_discount_bill_amount daily_amortized_discount_bill_amount
     *
     * @return $this
     */
    public function setDailyAmortizedDiscountBillAmount($daily_amortized_discount_bill_amount)
    {
        $this->container['daily_amortized_discount_bill_amount'] = $daily_amortized_discount_bill_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_original_bill_amount
     *
     * @return string
     */
    public function getDailyAmortizedOriginalBillAmount()
    {
        return $this->container['daily_amortized_original_bill_amount'];
    }

    /**
     * Sets daily_amortized_original_bill_amount
     *
     * @param string $daily_amortized_original_bill_amount daily_amortized_original_bill_amount
     *
     * @return $this
     */
    public function setDailyAmortizedOriginalBillAmount($daily_amortized_original_bill_amount)
    {
        $this->container['daily_amortized_original_bill_amount'] = $daily_amortized_original_bill_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_paid_amount
     *
     * @return string
     */
    public function getDailyAmortizedPaidAmount()
    {
        return $this->container['daily_amortized_paid_amount'];
    }

    /**
     * Sets daily_amortized_paid_amount
     *
     * @param string $daily_amortized_paid_amount daily_amortized_paid_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPaidAmount($daily_amortized_paid_amount)
    {
        $this->container['daily_amortized_paid_amount'] = $daily_amortized_paid_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_payable_amount
     *
     * @return string
     */
    public function getDailyAmortizedPayableAmount()
    {
        return $this->container['daily_amortized_payable_amount'];
    }

    /**
     * Sets daily_amortized_payable_amount
     *
     * @param string $daily_amortized_payable_amount daily_amortized_payable_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPayableAmount($daily_amortized_payable_amount)
    {
        $this->container['daily_amortized_payable_amount'] = $daily_amortized_payable_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_posttax_amount
     *
     * @return string
     */
    public function getDailyAmortizedPosttaxAmount()
    {
        return $this->container['daily_amortized_posttax_amount'];
    }

    /**
     * Sets daily_amortized_posttax_amount
     *
     * @param string $daily_amortized_posttax_amount daily_amortized_posttax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPosttaxAmount($daily_amortized_posttax_amount)
    {
        $this->container['daily_amortized_posttax_amount'] = $daily_amortized_posttax_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_pre_tax_payable_amount
     *
     * @return string
     */
    public function getDailyAmortizedPreTaxPayableAmount()
    {
        return $this->container['daily_amortized_pre_tax_payable_amount'];
    }

    /**
     * Sets daily_amortized_pre_tax_payable_amount
     *
     * @param string $daily_amortized_pre_tax_payable_amount daily_amortized_pre_tax_payable_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPreTaxPayableAmount($daily_amortized_pre_tax_payable_amount)
    {
        $this->container['daily_amortized_pre_tax_payable_amount'] = $daily_amortized_pre_tax_payable_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_pre_tax_real_value
     *
     * @return string
     */
    public function getDailyAmortizedPreTaxRealValue()
    {
        return $this->container['daily_amortized_pre_tax_real_value'];
    }

    /**
     * Sets daily_amortized_pre_tax_real_value
     *
     * @param string $daily_amortized_pre_tax_real_value daily_amortized_pre_tax_real_value
     *
     * @return $this
     */
    public function setDailyAmortizedPreTaxRealValue($daily_amortized_pre_tax_real_value)
    {
        $this->container['daily_amortized_pre_tax_real_value'] = $daily_amortized_pre_tax_real_value;

        return $this;
    }

    /**
     * Gets daily_amortized_preferential_bill_amount
     *
     * @return string
     */
    public function getDailyAmortizedPreferentialBillAmount()
    {
        return $this->container['daily_amortized_preferential_bill_amount'];
    }

    /**
     * Sets daily_amortized_preferential_bill_amount
     *
     * @param string $daily_amortized_preferential_bill_amount daily_amortized_preferential_bill_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPreferentialBillAmount($daily_amortized_preferential_bill_amount)
    {
        $this->container['daily_amortized_preferential_bill_amount'] = $daily_amortized_preferential_bill_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_pretax_amount
     *
     * @return string
     */
    public function getDailyAmortizedPretaxAmount()
    {
        return $this->container['daily_amortized_pretax_amount'];
    }

    /**
     * Sets daily_amortized_pretax_amount
     *
     * @param string $daily_amortized_pretax_amount daily_amortized_pretax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedPretaxAmount($daily_amortized_pretax_amount)
    {
        $this->container['daily_amortized_pretax_amount'] = $daily_amortized_pretax_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_real_value
     *
     * @return string
     */
    public function getDailyAmortizedRealValue()
    {
        return $this->container['daily_amortized_real_value'];
    }

    /**
     * Sets daily_amortized_real_value
     *
     * @param string $daily_amortized_real_value daily_amortized_real_value
     *
     * @return $this
     */
    public function setDailyAmortizedRealValue($daily_amortized_real_value)
    {
        $this->container['daily_amortized_real_value'] = $daily_amortized_real_value;

        return $this;
    }

    /**
     * Gets daily_amortized_round_amount
     *
     * @return string
     */
    public function getDailyAmortizedRoundAmount()
    {
        return $this->container['daily_amortized_round_amount'];
    }

    /**
     * Sets daily_amortized_round_amount
     *
     * @param string $daily_amortized_round_amount daily_amortized_round_amount
     *
     * @return $this
     */
    public function setDailyAmortizedRoundAmount($daily_amortized_round_amount)
    {
        $this->container['daily_amortized_round_amount'] = $daily_amortized_round_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_saving_plan_original_amount
     *
     * @return string
     */
    public function getDailyAmortizedSavingPlanOriginalAmount()
    {
        return $this->container['daily_amortized_saving_plan_original_amount'];
    }

    /**
     * Sets daily_amortized_saving_plan_original_amount
     *
     * @param string $daily_amortized_saving_plan_original_amount daily_amortized_saving_plan_original_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSavingPlanOriginalAmount($daily_amortized_saving_plan_original_amount)
    {
        $this->container['daily_amortized_saving_plan_original_amount'] = $daily_amortized_saving_plan_original_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_payable_amount
     *
     * @return string
     */
    public function getDailyAmortizedSettlePayableAmount()
    {
        return $this->container['daily_amortized_settle_payable_amount'];
    }

    /**
     * Sets daily_amortized_settle_payable_amount
     *
     * @param string $daily_amortized_settle_payable_amount daily_amortized_settle_payable_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSettlePayableAmount($daily_amortized_settle_payable_amount)
    {
        $this->container['daily_amortized_settle_payable_amount'] = $daily_amortized_settle_payable_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_posttax_amount
     *
     * @return string
     */
    public function getDailyAmortizedSettlePosttaxAmount()
    {
        return $this->container['daily_amortized_settle_posttax_amount'];
    }

    /**
     * Sets daily_amortized_settle_posttax_amount
     *
     * @param string $daily_amortized_settle_posttax_amount daily_amortized_settle_posttax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSettlePosttaxAmount($daily_amortized_settle_posttax_amount)
    {
        $this->container['daily_amortized_settle_posttax_amount'] = $daily_amortized_settle_posttax_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_pre_tax_payable_amount
     *
     * @return string
     */
    public function getDailyAmortizedSettlePreTaxPayableAmount()
    {
        return $this->container['daily_amortized_settle_pre_tax_payable_amount'];
    }

    /**
     * Sets daily_amortized_settle_pre_tax_payable_amount
     *
     * @param string $daily_amortized_settle_pre_tax_payable_amount daily_amortized_settle_pre_tax_payable_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSettlePreTaxPayableAmount($daily_amortized_settle_pre_tax_payable_amount)
    {
        $this->container['daily_amortized_settle_pre_tax_payable_amount'] = $daily_amortized_settle_pre_tax_payable_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_pre_tax_real_value
     *
     * @return string
     */
    public function getDailyAmortizedSettlePreTaxRealValue()
    {
        return $this->container['daily_amortized_settle_pre_tax_real_value'];
    }

    /**
     * Sets daily_amortized_settle_pre_tax_real_value
     *
     * @param string $daily_amortized_settle_pre_tax_real_value daily_amortized_settle_pre_tax_real_value
     *
     * @return $this
     */
    public function setDailyAmortizedSettlePreTaxRealValue($daily_amortized_settle_pre_tax_real_value)
    {
        $this->container['daily_amortized_settle_pre_tax_real_value'] = $daily_amortized_settle_pre_tax_real_value;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_pretax_amount
     *
     * @return string
     */
    public function getDailyAmortizedSettlePretaxAmount()
    {
        return $this->container['daily_amortized_settle_pretax_amount'];
    }

    /**
     * Sets daily_amortized_settle_pretax_amount
     *
     * @param string $daily_amortized_settle_pretax_amount daily_amortized_settle_pretax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSettlePretaxAmount($daily_amortized_settle_pretax_amount)
    {
        $this->container['daily_amortized_settle_pretax_amount'] = $daily_amortized_settle_pretax_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_real_value
     *
     * @return string
     */
    public function getDailyAmortizedSettleRealValue()
    {
        return $this->container['daily_amortized_settle_real_value'];
    }

    /**
     * Sets daily_amortized_settle_real_value
     *
     * @param string $daily_amortized_settle_real_value daily_amortized_settle_real_value
     *
     * @return $this
     */
    public function setDailyAmortizedSettleRealValue($daily_amortized_settle_real_value)
    {
        $this->container['daily_amortized_settle_real_value'] = $daily_amortized_settle_real_value;

        return $this;
    }

    /**
     * Gets daily_amortized_settle_tax_amount
     *
     * @return string
     */
    public function getDailyAmortizedSettleTaxAmount()
    {
        return $this->container['daily_amortized_settle_tax_amount'];
    }

    /**
     * Sets daily_amortized_settle_tax_amount
     *
     * @param string $daily_amortized_settle_tax_amount daily_amortized_settle_tax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedSettleTaxAmount($daily_amortized_settle_tax_amount)
    {
        $this->container['daily_amortized_settle_tax_amount'] = $daily_amortized_settle_tax_amount;

        return $this;
    }

    /**
     * Gets daily_amortized_tax_amount
     *
     * @return string
     */
    public function getDailyAmortizedTaxAmount()
    {
        return $this->container['daily_amortized_tax_amount'];
    }

    /**
     * Sets daily_amortized_tax_amount
     *
     * @param string $daily_amortized_tax_amount daily_amortized_tax_amount
     *
     * @return $this
     */
    public function setDailyAmortizedTaxAmount($daily_amortized_tax_amount)
    {
        $this->container['daily_amortized_tax_amount'] = $daily_amortized_tax_amount;

        return $this;
    }

    /**
     * Gets deduction_use_duration
     *
     * @return string
     */
    public function getDeductionUseDuration()
    {
        return $this->container['deduction_use_duration'];
    }

    /**
     * Sets deduction_use_duration
     *
     * @param string $deduction_use_duration deduction_use_duration
     *
     * @return $this
     */
    public function setDeductionUseDuration($deduction_use_duration)
    {
        $this->container['deduction_use_duration'] = $deduction_use_duration;

        return $this;
    }

    /**
     * Gets discount_bill_amount
     *
     * @return string
     */
    public function getDiscountBillAmount()
    {
        return $this->container['discount_bill_amount'];
    }

    /**
     * Sets discount_bill_amount
     *
     * @param string $discount_bill_amount discount_bill_amount
     *
     * @return $this
     */
    public function setDiscountBillAmount($discount_bill_amount)
    {
        $this->container['discount_bill_amount'] = $discount_bill_amount;

        return $this;
    }

    /**
     * Gets discount_biz_billing_function
     *
     * @return string
     */
    public function getDiscountBizBillingFunction()
    {
        return $this->container['discount_biz_billing_function'];
    }

    /**
     * Sets discount_biz_billing_function
     *
     * @param string $discount_biz_billing_function discount_biz_billing_function
     *
     * @return $this
     */
    public function setDiscountBizBillingFunction($discount_biz_billing_function)
    {
        $this->container['discount_biz_billing_function'] = $discount_biz_billing_function;

        return $this;
    }

    /**
     * Gets discount_biz_measure_interval
     *
     * @return string
     */
    public function getDiscountBizMeasureInterval()
    {
        return $this->container['discount_biz_measure_interval'];
    }

    /**
     * Sets discount_biz_measure_interval
     *
     * @param string $discount_biz_measure_interval discount_biz_measure_interval
     *
     * @return $this
     */
    public function setDiscountBizMeasureInterval($discount_biz_measure_interval)
    {
        $this->container['discount_biz_measure_interval'] = $discount_biz_measure_interval;

        return $this;
    }

    /**
     * Gets discount_biz_unit_price
     *
     * @return string
     */
    public function getDiscountBizUnitPrice()
    {
        return $this->container['discount_biz_unit_price'];
    }

    /**
     * Sets discount_biz_unit_price
     *
     * @param string $discount_biz_unit_price discount_biz_unit_price
     *
     * @return $this
     */
    public function setDiscountBizUnitPrice($discount_biz_unit_price)
    {
        $this->container['discount_biz_unit_price'] = $discount_biz_unit_price;

        return $this;
    }

    /**
     * Gets discount_biz_unit_price_interval
     *
     * @return string
     */
    public function getDiscountBizUnitPriceInterval()
    {
        return $this->container['discount_biz_unit_price_interval'];
    }

    /**
     * Sets discount_biz_unit_price_interval
     *
     * @param string $discount_biz_unit_price_interval discount_biz_unit_price_interval
     *
     * @return $this
     */
    public function setDiscountBizUnitPriceInterval($discount_biz_unit_price_interval)
    {
        $this->container['discount_biz_unit_price_interval'] = $discount_biz_unit_price_interval;

        return $this;
    }

    /**
     * Gets discount_info
     *
     * @return string
     */
    public function getDiscountInfo()
    {
        return $this->container['discount_info'];
    }

    /**
     * Sets discount_info
     *
     * @param string $discount_info discount_info
     *
     * @return $this
     */
    public function setDiscountInfo($discount_info)
    {
        $this->container['discount_info'] = $discount_info;

        return $this;
    }

    /**
     * Gets effective_factor
     *
     * @return string
     */
    public function getEffectiveFactor()
    {
        return $this->container['effective_factor'];
    }

    /**
     * Sets effective_factor
     *
     * @param string $effective_factor effective_factor
     *
     * @return $this
     */
    public function setEffectiveFactor($effective_factor)
    {
        $this->container['effective_factor'] = $effective_factor;

        return $this;
    }

    /**
     * Gets element
     *
     * @return string
     */
    public function getElement()
    {
        return $this->container['element'];
    }

    /**
     * Sets element
     *
     * @param string $element element
     *
     * @return $this
     */
    public function setElement($element)
    {
        $this->container['element'] = $element;

        return $this;
    }

    /**
     * Gets exchange_rate
     *
     * @return string
     */
    public function getExchangeRate()
    {
        return $this->container['exchange_rate'];
    }

    /**
     * Sets exchange_rate
     *
     * @param string $exchange_rate exchange_rate
     *
     * @return $this
     */
    public function setExchangeRate($exchange_rate)
    {
        $this->container['exchange_rate'] = $exchange_rate;

        return $this;
    }

    /**
     * Gets expand_field
     *
     * @return string
     */
    public function getExpandField()
    {
        return $this->container['expand_field'];
    }

    /**
     * Sets expand_field
     *
     * @param string $expand_field expand_field
     *
     * @return $this
     */
    public function setExpandField($expand_field)
    {
        $this->container['expand_field'] = $expand_field;

        return $this;
    }

    /**
     * Gets expense_begin_time
     *
     * @return string
     */
    public function getExpenseBeginTime()
    {
        return $this->container['expense_begin_time'];
    }

    /**
     * Sets expense_begin_time
     *
     * @param string $expense_begin_time expense_begin_time
     *
     * @return $this
     */
    public function setExpenseBeginTime($expense_begin_time)
    {
        $this->container['expense_begin_time'] = $expense_begin_time;

        return $this;
    }

    /**
     * Gets expense_end_time
     *
     * @return string
     */
    public function getExpenseEndTime()
    {
        return $this->container['expense_end_time'];
    }

    /**
     * Sets expense_end_time
     *
     * @param string $expense_end_time expense_end_time
     *
     * @return $this
     */
    public function setExpenseEndTime($expense_end_time)
    {
        $this->container['expense_end_time'] = $expense_end_time;

        return $this;
    }

    /**
     * Gets factor
     *
     * @return string
     */
    public function getFactor()
    {
        return $this->container['factor'];
    }

    /**
     * Sets factor
     *
     * @param string $factor factor
     *
     * @return $this
     */
    public function setFactor($factor)
    {
        $this->container['factor'] = $factor;

        return $this;
    }

    /**
     * Gets instance_name
     *
     * @return string
     */
    public function getInstanceName()
    {
        return $this->container['instance_name'];
    }

    /**
     * Sets instance_name
     *
     * @param string $instance_name instance_name
     *
     * @return $this
     */
    public function setInstanceName($instance_name)
    {
        $this->container['instance_name'] = $instance_name;

        return $this;
    }

    /**
     * Gets instance_no
     *
     * @return string
     */
    public function getInstanceNo()
    {
        return $this->container['instance_no'];
    }

    /**
     * Sets instance_no
     *
     * @param string $instance_no instance_no
     *
     * @return $this
     */
    public function setInstanceNo($instance_no)
    {
        $this->container['instance_no'] = $instance_no;

        return $this;
    }

    /**
     * Gets main_contract_number
     *
     * @return string
     */
    public function getMainContractNumber()
    {
        return $this->container['main_contract_number'];
    }

    /**
     * Sets main_contract_number
     *
     * @param string $main_contract_number main_contract_number
     *
     * @return $this
     */
    public function setMainContractNumber($main_contract_number)
    {
        $this->container['main_contract_number'] = $main_contract_number;

        return $this;
    }

    /**
     * Gets market_price
     *
     * @return string
     */
    public function getMarketPrice()
    {
        return $this->container['market_price'];
    }

    /**
     * Sets market_price
     *
     * @param string $market_price market_price
     *
     * @return $this
     */
    public function setMarketPrice($market_price)
    {
        $this->container['market_price'] = $market_price;

        return $this;
    }

    /**
     * Gets measure_interval
     *
     * @return string
     */
    public function getMeasureInterval()
    {
        return $this->container['measure_interval'];
    }

    /**
     * Sets measure_interval
     *
     * @param string $measure_interval measure_interval
     *
     * @return $this
     */
    public function setMeasureInterval($measure_interval)
    {
        $this->container['measure_interval'] = $measure_interval;

        return $this;
    }

    /**
     * Gets original_bill_amount
     *
     * @return string
     */
    public function getOriginalBillAmount()
    {
        return $this->container['original_bill_amount'];
    }

    /**
     * Sets original_bill_amount
     *
     * @param string $original_bill_amount original_bill_amount
     *
     * @return $this
     */
    public function setOriginalBillAmount($original_bill_amount)
    {
        $this->container['original_bill_amount'] = $original_bill_amount;

        return $this;
    }

    /**
     * Gets original_order_no
     *
     * @return string
     */
    public function getOriginalOrderNo()
    {
        return $this->container['original_order_no'];
    }

    /**
     * Sets original_order_no
     *
     * @param string $original_order_no original_order_no
     *
     * @return $this
     */
    public function setOriginalOrderNo($original_order_no)
    {
        $this->container['original_order_no'] = $original_order_no;

        return $this;
    }

    /**
     * Gets owner_customer_name
     *
     * @return string
     */
    public function getOwnerCustomerName()
    {
        return $this->container['owner_customer_name'];
    }

    /**
     * Sets owner_customer_name
     *
     * @param string $owner_customer_name owner_customer_name
     *
     * @return $this
     */
    public function setOwnerCustomerName($owner_customer_name)
    {
        $this->container['owner_customer_name'] = $owner_customer_name;

        return $this;
    }

    /**
     * Gets owner_id
     *
     * @return string
     */
    public function getOwnerId()
    {
        return $this->container['owner_id'];
    }

    /**
     * Sets owner_id
     *
     * @param string $owner_id owner_id
     *
     * @return $this
     */
    public function setOwnerId($owner_id)
    {
        $this->container['owner_id'] = $owner_id;

        return $this;
    }

    /**
     * Gets owner_user_name
     *
     * @return string
     */
    public function getOwnerUserName()
    {
        return $this->container['owner_user_name'];
    }

    /**
     * Sets owner_user_name
     *
     * @param string $owner_user_name owner_user_name
     *
     * @return $this
     */
    public function setOwnerUserName($owner_user_name)
    {
        $this->container['owner_user_name'] = $owner_user_name;

        return $this;
    }

    /**
     * Gets paid_amount
     *
     * @return string
     */
    public function getPaidAmount()
    {
        return $this->container['paid_amount'];
    }

    /**
     * Sets paid_amount
     *
     * @param string $paid_amount paid_amount
     *
     * @return $this
     */
    public function setPaidAmount($paid_amount)
    {
        $this->container['paid_amount'] = $paid_amount;

        return $this;
    }

    /**
     * Gets payable_amount
     *
     * @return string
     */
    public function getPayableAmount()
    {
        return $this->container['payable_amount'];
    }

    /**
     * Sets payable_amount
     *
     * @param string $payable_amount payable_amount
     *
     * @return $this
     */
    public function setPayableAmount($payable_amount)
    {
        $this->container['payable_amount'] = $payable_amount;

        return $this;
    }

    /**
     * Gets payer_customer_name
     *
     * @return string
     */
    public function getPayerCustomerName()
    {
        return $this->container['payer_customer_name'];
    }

    /**
     * Sets payer_customer_name
     *
     * @param string $payer_customer_name payer_customer_name
     *
     * @return $this
     */
    public function setPayerCustomerName($payer_customer_name)
    {
        $this->container['payer_customer_name'] = $payer_customer_name;

        return $this;
    }

    /**
     * Gets payer_id
     *
     * @return string
     */
    public function getPayerId()
    {
        return $this->container['payer_id'];
    }

    /**
     * Sets payer_id
     *
     * @param string $payer_id payer_id
     *
     * @return $this
     */
    public function setPayerId($payer_id)
    {
        $this->container['payer_id'] = $payer_id;

        return $this;
    }

    /**
     * Gets payer_user_name
     *
     * @return string
     */
    public function getPayerUserName()
    {
        return $this->container['payer_user_name'];
    }

    /**
     * Sets payer_user_name
     *
     * @param string $payer_user_name payer_user_name
     *
     * @return $this
     */
    public function setPayerUserName($payer_user_name)
    {
        $this->container['payer_user_name'] = $payer_user_name;

        return $this;
    }

    /**
     * Gets posttax_amount
     *
     * @return string
     */
    public function getPosttaxAmount()
    {
        return $this->container['posttax_amount'];
    }

    /**
     * Sets posttax_amount
     *
     * @param string $posttax_amount posttax_amount
     *
     * @return $this
     */
    public function setPosttaxAmount($posttax_amount)
    {
        $this->container['posttax_amount'] = $posttax_amount;

        return $this;
    }

    /**
     * Gets pre_tax_payable_amount
     *
     * @return string
     */
    public function getPreTaxPayableAmount()
    {
        return $this->container['pre_tax_payable_amount'];
    }

    /**
     * Sets pre_tax_payable_amount
     *
     * @param string $pre_tax_payable_amount pre_tax_payable_amount
     *
     * @return $this
     */
    public function setPreTaxPayableAmount($pre_tax_payable_amount)
    {
        $this->container['pre_tax_payable_amount'] = $pre_tax_payable_amount;

        return $this;
    }

    /**
     * Gets pre_tax_real_value
     *
     * @return string
     */
    public function getPreTaxRealValue()
    {
        return $this->container['pre_tax_real_value'];
    }

    /**
     * Sets pre_tax_real_value
     *
     * @param string $pre_tax_real_value pre_tax_real_value
     *
     * @return $this
     */
    public function setPreTaxRealValue($pre_tax_real_value)
    {
        $this->container['pre_tax_real_value'] = $pre_tax_real_value;

        return $this;
    }

    /**
     * Gets preferential_bill_amount
     *
     * @return string
     */
    public function getPreferentialBillAmount()
    {
        return $this->container['preferential_bill_amount'];
    }

    /**
     * Sets preferential_bill_amount
     *
     * @param string $preferential_bill_amount preferential_bill_amount
     *
     * @return $this
     */
    public function setPreferentialBillAmount($preferential_bill_amount)
    {
        $this->container['preferential_bill_amount'] = $preferential_bill_amount;

        return $this;
    }

    /**
     * Gets pretax_amount
     *
     * @return string
     */
    public function getPretaxAmount()
    {
        return $this->container['pretax_amount'];
    }

    /**
     * Sets pretax_amount
     *
     * @param string $pretax_amount pretax_amount
     *
     * @return $this
     */
    public function setPretaxAmount($pretax_amount)
    {
        $this->container['pretax_amount'] = $pretax_amount;

        return $this;
    }

    /**
     * Gets price
     *
     * @return string
     */
    public function getPrice()
    {
        return $this->container['price'];
    }

    /**
     * Sets price
     *
     * @param string $price price
     *
     * @return $this
     */
    public function setPrice($price)
    {
        $this->container['price'] = $price;

        return $this;
    }

    /**
     * Gets price_interval
     *
     * @return string
     */
    public function getPriceInterval()
    {
        return $this->container['price_interval'];
    }

    /**
     * Sets price_interval
     *
     * @param string $price_interval price_interval
     *
     * @return $this
     */
    public function setPriceInterval($price_interval)
    {
        $this->container['price_interval'] = $price_interval;

        return $this;
    }

    /**
     * Gets price_unit
     *
     * @return string
     */
    public function getPriceUnit()
    {
        return $this->container['price_unit'];
    }

    /**
     * Sets price_unit
     *
     * @param string $price_unit price_unit
     *
     * @return $this
     */
    public function setPriceUnit($price_unit)
    {
        $this->container['price_unit'] = $price_unit;

        return $this;
    }

    /**
     * Gets product
     *
     * @return string
     */
    public function getProduct()
    {
        return $this->container['product'];
    }

    /**
     * Sets product
     *
     * @param string $product product
     *
     * @return $this
     */
    public function setProduct($product)
    {
        $this->container['product'] = $product;

        return $this;
    }

    /**
     * Gets product_zh
     *
     * @return string
     */
    public function getProductZh()
    {
        return $this->container['product_zh'];
    }

    /**
     * Sets product_zh
     *
     * @param string $product_zh product_zh
     *
     * @return $this
     */
    public function setProductZh($product_zh)
    {
        $this->container['product_zh'] = $product_zh;

        return $this;
    }

    /**
     * Gets project
     *
     * @return string
     */
    public function getProject()
    {
        return $this->container['project'];
    }

    /**
     * Sets project
     *
     * @param string $project project
     *
     * @return $this
     */
    public function setProject($project)
    {
        $this->container['project'] = $project;

        return $this;
    }

    /**
     * Gets project_display_name
     *
     * @return string
     */
    public function getProjectDisplayName()
    {
        return $this->container['project_display_name'];
    }

    /**
     * Sets project_display_name
     *
     * @param string $project_display_name project_display_name
     *
     * @return $this
     */
    public function setProjectDisplayName($project_display_name)
    {
        $this->container['project_display_name'] = $project_display_name;

        return $this;
    }

    /**
     * Gets real_value
     *
     * @return string
     */
    public function getRealValue()
    {
        return $this->container['real_value'];
    }

    /**
     * Sets real_value
     *
     * @param string $real_value real_value
     *
     * @return $this
     */
    public function setRealValue($real_value)
    {
        $this->container['real_value'] = $real_value;

        return $this;
    }

    /**
     * Gets region
     *
     * @return string
     */
    public function getRegion()
    {
        return $this->container['region'];
    }

    /**
     * Sets region
     *
     * @param string $region region
     *
     * @return $this
     */
    public function setRegion($region)
    {
        $this->container['region'] = $region;

        return $this;
    }

    /**
     * Gets round_amount
     *
     * @return string
     */
    public function getRoundAmount()
    {
        return $this->container['round_amount'];
    }

    /**
     * Sets round_amount
     *
     * @param string $round_amount round_amount
     *
     * @return $this
     */
    public function setRoundAmount($round_amount)
    {
        $this->container['round_amount'] = $round_amount;

        return $this;
    }

    /**
     * Gets saving_plan_deduction_discount_amount
     *
     * @return string
     */
    public function getSavingPlanDeductionDiscountAmount()
    {
        return $this->container['saving_plan_deduction_discount_amount'];
    }

    /**
     * Sets saving_plan_deduction_discount_amount
     *
     * @param string $saving_plan_deduction_discount_amount saving_plan_deduction_discount_amount
     *
     * @return $this
     */
    public function setSavingPlanDeductionDiscountAmount($saving_plan_deduction_discount_amount)
    {
        $this->container['saving_plan_deduction_discount_amount'] = $saving_plan_deduction_discount_amount;

        return $this;
    }

    /**
     * Gets saving_plan_deduction_sp_id
     *
     * @return string
     */
    public function getSavingPlanDeductionSpId()
    {
        return $this->container['saving_plan_deduction_sp_id'];
    }

    /**
     * Sets saving_plan_deduction_sp_id
     *
     * @param string $saving_plan_deduction_sp_id saving_plan_deduction_sp_id
     *
     * @return $this
     */
    public function setSavingPlanDeductionSpId($saving_plan_deduction_sp_id)
    {
        $this->container['saving_plan_deduction_sp_id'] = $saving_plan_deduction_sp_id;

        return $this;
    }

    /**
     * Gets saving_plan_original_amount
     *
     * @return string
     */
    public function getSavingPlanOriginalAmount()
    {
        return $this->container['saving_plan_original_amount'];
    }

    /**
     * Sets saving_plan_original_amount
     *
     * @param string $saving_plan_original_amount saving_plan_original_amount
     *
     * @return $this
     */
    public function setSavingPlanOriginalAmount($saving_plan_original_amount)
    {
        $this->container['saving_plan_original_amount'] = $saving_plan_original_amount;

        return $this;
    }

    /**
     * Gets seller_customer_name
     *
     * @return string
     */
    public function getSellerCustomerName()
    {
        return $this->container['seller_customer_name'];
    }

    /**
     * Sets seller_customer_name
     *
     * @param string $seller_customer_name seller_customer_name
     *
     * @return $this
     */
    public function setSellerCustomerName($seller_customer_name)
    {
        $this->container['seller_customer_name'] = $seller_customer_name;

        return $this;
    }

    /**
     * Gets seller_id
     *
     * @return string
     */
    public function getSellerId()
    {
        return $this->container['seller_id'];
    }

    /**
     * Sets seller_id
     *
     * @param string $seller_id seller_id
     *
     * @return $this
     */
    public function setSellerId($seller_id)
    {
        $this->container['seller_id'] = $seller_id;

        return $this;
    }

    /**
     * Gets seller_user_name
     *
     * @return string
     */
    public function getSellerUserName()
    {
        return $this->container['seller_user_name'];
    }

    /**
     * Sets seller_user_name
     *
     * @param string $seller_user_name seller_user_name
     *
     * @return $this
     */
    public function setSellerUserName($seller_user_name)
    {
        $this->container['seller_user_name'] = $seller_user_name;

        return $this;
    }

    /**
     * Gets settle_payable_amount
     *
     * @return string
     */
    public function getSettlePayableAmount()
    {
        return $this->container['settle_payable_amount'];
    }

    /**
     * Sets settle_payable_amount
     *
     * @param string $settle_payable_amount settle_payable_amount
     *
     * @return $this
     */
    public function setSettlePayableAmount($settle_payable_amount)
    {
        $this->container['settle_payable_amount'] = $settle_payable_amount;

        return $this;
    }

    /**
     * Gets settle_posttax_amount
     *
     * @return string
     */
    public function getSettlePosttaxAmount()
    {
        return $this->container['settle_posttax_amount'];
    }

    /**
     * Sets settle_posttax_amount
     *
     * @param string $settle_posttax_amount settle_posttax_amount
     *
     * @return $this
     */
    public function setSettlePosttaxAmount($settle_posttax_amount)
    {
        $this->container['settle_posttax_amount'] = $settle_posttax_amount;

        return $this;
    }

    /**
     * Gets settle_pre_tax_payable_amount
     *
     * @return string
     */
    public function getSettlePreTaxPayableAmount()
    {
        return $this->container['settle_pre_tax_payable_amount'];
    }

    /**
     * Sets settle_pre_tax_payable_amount
     *
     * @param string $settle_pre_tax_payable_amount settle_pre_tax_payable_amount
     *
     * @return $this
     */
    public function setSettlePreTaxPayableAmount($settle_pre_tax_payable_amount)
    {
        $this->container['settle_pre_tax_payable_amount'] = $settle_pre_tax_payable_amount;

        return $this;
    }

    /**
     * Gets settle_pre_tax_real_value
     *
     * @return string
     */
    public function getSettlePreTaxRealValue()
    {
        return $this->container['settle_pre_tax_real_value'];
    }

    /**
     * Sets settle_pre_tax_real_value
     *
     * @param string $settle_pre_tax_real_value settle_pre_tax_real_value
     *
     * @return $this
     */
    public function setSettlePreTaxRealValue($settle_pre_tax_real_value)
    {
        $this->container['settle_pre_tax_real_value'] = $settle_pre_tax_real_value;

        return $this;
    }

    /**
     * Gets settle_pretax_amount
     *
     * @return string
     */
    public function getSettlePretaxAmount()
    {
        return $this->container['settle_pretax_amount'];
    }

    /**
     * Sets settle_pretax_amount
     *
     * @param string $settle_pretax_amount settle_pretax_amount
     *
     * @return $this
     */
    public function setSettlePretaxAmount($settle_pretax_amount)
    {
        $this->container['settle_pretax_amount'] = $settle_pretax_amount;

        return $this;
    }

    /**
     * Gets settle_real_value
     *
     * @return string
     */
    public function getSettleRealValue()
    {
        return $this->container['settle_real_value'];
    }

    /**
     * Sets settle_real_value
     *
     * @param string $settle_real_value settle_real_value
     *
     * @return $this
     */
    public function setSettleRealValue($settle_real_value)
    {
        $this->container['settle_real_value'] = $settle_real_value;

        return $this;
    }

    /**
     * Gets settle_tax_amount
     *
     * @return string
     */
    public function getSettleTaxAmount()
    {
        return $this->container['settle_tax_amount'];
    }

    /**
     * Sets settle_tax_amount
     *
     * @param string $settle_tax_amount settle_tax_amount
     *
     * @return $this
     */
    public function setSettleTaxAmount($settle_tax_amount)
    {
        $this->container['settle_tax_amount'] = $settle_tax_amount;

        return $this;
    }

    /**
     * Gets split_item_id
     *
     * @return string
     */
    public function getSplitItemId()
    {
        return $this->container['split_item_id'];
    }

    /**
     * Sets split_item_id
     *
     * @param string $split_item_id split_item_id
     *
     * @return $this
     */
    public function setSplitItemId($split_item_id)
    {
        $this->container['split_item_id'] = $split_item_id;

        return $this;
    }

    /**
     * Gets split_item_name
     *
     * @return string
     */
    public function getSplitItemName()
    {
        return $this->container['split_item_name'];
    }

    /**
     * Sets split_item_name
     *
     * @param string $split_item_name split_item_name
     *
     * @return $this
     */
    public function setSplitItemName($split_item_name)
    {
        $this->container['split_item_name'] = $split_item_name;

        return $this;
    }

    /**
     * Gets subject_name
     *
     * @return string
     */
    public function getSubjectName()
    {
        return $this->container['subject_name'];
    }

    /**
     * Sets subject_name
     *
     * @param string $subject_name subject_name
     *
     * @return $this
     */
    public function setSubjectName($subject_name)
    {
        $this->container['subject_name'] = $subject_name;

        return $this;
    }

    /**
     * Gets tag
     *
     * @return string
     */
    public function getTag()
    {
        return $this->container['tag'];
    }

    /**
     * Sets tag
     *
     * @param string $tag tag
     *
     * @return $this
     */
    public function setTag($tag)
    {
        $this->container['tag'] = $tag;

        return $this;
    }

    /**
     * Gets tax
     *
     * @return string
     */
    public function getTax()
    {
        return $this->container['tax'];
    }

    /**
     * Sets tax
     *
     * @param string $tax tax
     *
     * @return $this
     */
    public function setTax($tax)
    {
        $this->container['tax'] = $tax;

        return $this;
    }

    /**
     * Gets tax_amount
     *
     * @return string
     */
    public function getTaxAmount()
    {
        return $this->container['tax_amount'];
    }

    /**
     * Sets tax_amount
     *
     * @param string $tax_amount tax_amount
     *
     * @return $this
     */
    public function setTaxAmount($tax_amount)
    {
        $this->container['tax_amount'] = $tax_amount;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return string
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param string $tax_rate tax_rate
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets trade_time
     *
     * @return string
     */
    public function getTradeTime()
    {
        return $this->container['trade_time'];
    }

    /**
     * Sets trade_time
     *
     * @param string $trade_time trade_time
     *
     * @return $this
     */
    public function setTradeTime($trade_time)
    {
        $this->container['trade_time'] = $trade_time;

        return $this;
    }

    /**
     * Gets unit
     *
     * @return string
     */
    public function getUnit()
    {
        return $this->container['unit'];
    }

    /**
     * Sets unit
     *
     * @param string $unit unit
     *
     * @return $this
     */
    public function setUnit($unit)
    {
        $this->container['unit'] = $unit;

        return $this;
    }

    /**
     * Gets use_duration
     *
     * @return string
     */
    public function getUseDuration()
    {
        return $this->container['use_duration'];
    }

    /**
     * Sets use_duration
     *
     * @param string $use_duration use_duration
     *
     * @return $this
     */
    public function setUseDuration($use_duration)
    {
        $this->container['use_duration'] = $use_duration;

        return $this;
    }

    /**
     * Gets use_duration_unit
     *
     * @return string
     */
    public function getUseDurationUnit()
    {
        return $this->container['use_duration_unit'];
    }

    /**
     * Sets use_duration_unit
     *
     * @param string $use_duration_unit use_duration_unit
     *
     * @return $this
     */
    public function setUseDurationUnit($use_duration_unit)
    {
        $this->container['use_duration_unit'] = $use_duration_unit;

        return $this;
    }

    /**
     * Gets zone
     *
     * @return string
     */
    public function getZone()
    {
        return $this->container['zone'];
    }

    /**
     * Sets zone
     *
     * @param string $zone zone
     *
     * @return $this
     */
    public function setZone($zone)
    {
        $this->container['zone'] = $zone;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}

